/*!
 * Bootstrap Colorpicker - Simple and customizable colorpicker component for Twitter Bootstrap.
 * @package bootstrap-colorpicker
 * @version v3.0.0-beta.1
 * @license MIT
 * @link https://farbelous.github.io/bootstrap-colorpicker/
 * @link https://github.com/farbelous/bootstrap-colorpicker.git
 */
{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///bootstrap-colorpicker.min.js","webpack:///webpack/bootstrap 71f94b80515a1da21a76","webpack:///external \"jQuery\"","webpack:///./src/js/Extension.js","webpack:///./src/js/extensions/Palette.js","webpack:///./src/js/jquery-plugin.js","webpack:///./src/js/Colorpicker.js","webpack:///./src/js/Color.js","webpack:///./node_modules/tinycolor2/tinycolor.js","webpack:///./src/js/options.js","webpack:///./src/js/extensions/index.js","webpack:///./src/js/extensions/Debugger.js","webpack:///./src/js/extensions/Preview.js","webpack:///./src/js/extensions/Swatches.js"],"names":["root","factory","exports","module","require","define","amd","self","this","__WEBPACK_EXTERNAL_MODULE_0__","modules","__webpack_require__","moduleId","installedModules","i","l","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","n","__esModule","object","property","prototype","hasOwnProperty","p","s","_classCallCheck","instance","Constructor","TypeError","value","_createClass","defineProperties","target","props","length","descriptor","writable","key","protoProps","staticProps","_jquery","_jquery2","obj","default","Extension","colorpicker","options","arguments","undefined","element","Error","on","$","proxy","onCreate","onDestroy","onUpdate","onChange","onInvalid","onShow","onHide","onEnable","onDisable","color","event","off","_interopRequireDefault","_possibleConstructorReturn","ReferenceError","_inherits","subClass","superClass","create","constructor","setPrototypeOf","__proto__","_typeof","Symbol","iterator","_Extension2","_Extension3","defaults","colors","namesAsValues","Palette","_Extension","_this","getPrototypeOf","extend","Array","isArray","keys","getLength","indexOf","toUpperCase","toLowerCase","getName","getValue","defaultValue","_Colorpicker","_Colorpicker2","plugin","Colorpicker","fn","option","apiArgs","slice","isSingleElement","returnValue","$jq","each","$this","inst","data","isFunction","apply","_Color","_Color2","_options","_options2","_extensions","_extensions2","colorPickerIdCounter","id","addClass","attr","extensions","component","find","container","currentSlider","mousePointer","left","top","lastEvent","e","input","is","debug","push","forEach","ext","addExtension","bundledExtensions","colorValue","createColor","format","disabled","$picker","picker","template","customClass","inline","horizontal","useAlpha","hasColor","hasTransparency","align","currentTarget","preventDefault","_mousedown","appendTo","hasInput","keyup.colorpicker","_keyup","change.colorpicker","_change","focus.colorpicker","show","focusout.colorpicker","hide","click.colorpicker","has","update","trigger","type","set","Color","extensionName","ExtensionClass","config","remove","removeData","removeClass","str","toCssColorString","useHashPrefix","replace","_resolveColor","toString","window","document","body","offset","outerWidth","css","outerHeight","isVisible","isDisabled","_reposition","stopPropagation","mousedown.colorpicker","isHidden","parents","hasClass","val","toInputColorString","prop","vertical","sl","sliders","slidersHorz","saturationGuide","hueGuide","alphaGuide","hsva","hsvaRatio","hue","maxTop","maxLeft","h","alpha","a","saturation","v","getHueOnlyCopy","toHexString","hex6Color","alphaBg","colorStr","styles","background","icn","eq","force","_shouldUpdate","_updateComponent","autoInputFallback","_updateInput","_updatePicker","fallbackColor","candidates","map","item","equals","shouldForceUpdate","useFallback","isValid","invalidColor","fallback","previous","isAlphaEnabled","setAlpha","prevHsva","setHueRatio","extResolvedColor","resolveColor","pageX","pageY","originalEvent","touches","zone","closest","parent","guide","style","mousemove.colorpicker","_mousemove","touchmove.colorpicker","mouseup.colorpicker","_mouseup","touchend.colorpicker","getCopy","Math","max","min","callLeft","callTop","setValue","match","enableHex8","unwrapColor","tinycolor","r","_r","g","_g","b","_b","_a","getCompatibleFormat","String","_get","receiver","Function","desc","getOwnPropertyDescriptor","_tinycolor2","_tinycolor3","_tinycolor","_originalInput","_hbak","_tc_id","_format","gradientType","_gradientType","toHsv","hsv","_roundA","_ok","importRgb","importHsv","setHue","setSaturation","setBrightness","isTransparent","__WEBPACK_AMD_DEFINE_RESULT__","opts","rgb","inputToRGB","mathRound","ok","tinyCounter","stringInputToObject","isValidCSSUnit","rgbToRgb","substr","convertToPercentage","hsvToRgb","hslToRgb","boundAlpha","mathMin","mathMax","bound01","rgbToHsl","hue2rgb","q","t","rgbToHsv","floor","f","mod","rgbToHex","allow3Char","hex","pad2","charAt","join","rgbaToHex","allow4Char","convertDecimalToHex","rgbaToArgbHex","desaturate","amount","hsl","toHsl","clamp01","saturate","greyscale","lighten","brighten","toRgb","darken","spin","complement","triad","tetrad","splitcomplement","analogous","results","slices","part","ret","monochromatic","modification","parseFloat","isNaN","isOnePointZero","processPercent","isPercentage","parseInt","abs","parseIntFromHex","round","convertHexToDecimal","matchers","CSS_UNIT","exec","trimLeft","trimRight","named","names","rgba","hsla","hex8","hex6","hex4","hex3","validateWCAG2Parms","parms","level","size","mathRandom","random","isDark","getBrightness","isLight","getOriginalInput","getFormat","getAlpha","getLuminance","RsRGB","GsRGB","BsRGB","R","G","B","pow","toHsvString","toHslString","toHex","toHex8","toHex8String","toRgbString","toPercentageRgb","toPercentageRgbString","toName","hexNames","toFilter","secondColor","hex8String","secondHex8String","formatSet","formattedString","hasAlpha","clone","_applyModification","args","concat","_applyCombination","fromRatio","newColor","color1","color2","mix","rgb1","rgb2","readability","c1","c2","isReadable","wcag2","wcag2Parms","out","mostReadable","baseColor","colorList","includeFallbackColors","bestColor","bestScore","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","burntsienna","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","flipped","PERMISSIVE_MATCH3","PERMISSIVE_MATCH4","RegExp","showText","Swatches","Preview","Debugger","_Debugger","_Debugger2","_Preview","_Preview2","_Swatches","_Swatches2","_Palette","_Palette2","debugger","preview","swatches","palette","eventCounter","onChangeInput","eventName","_console","_len","_key","logMessage","console","logArgs","log","elementInner","append","html","_Palette3","barTemplate","swatchTemplate","_this2","isEnabled","swatchContainer","isAliased","$swatch"],"mappings":"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","file":"bootstrap-colorpicker.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"jQuery\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"bootstrap-colorpicker\", [\"jQuery\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"bootstrap-colorpicker\"] = factory(require(\"jQuery\"));\n\telse\n\t\troot[\"bootstrap-colorpicker\"] = factory(root[\"jQuery\"]);\n})(typeof self !== 'undefined' ? self : this, function(__WEBPACK_EXTERNAL_MODULE_0__) {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"jQuery\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"bootstrap-colorpicker\", [\"jQuery\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"bootstrap-colorpicker\"] = factory(require(\"jQuery\"));\n\telse\n\t\troot[\"bootstrap-colorpicker\"] = factory(root[\"jQuery\"]);\n})(typeof self !== 'undefined' ? self : this, function(__WEBPACK_EXTERNAL_MODULE_0__) {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, {\n/******/ \t\t\t\tconfigurable: false,\n/******/ \t\t\t\tenumerable: true,\n/******/ \t\t\t\tget: getter\n/******/ \t\t\t});\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 3);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports) {\n\nmodule.exports = __WEBPACK_EXTERNAL_MODULE_0__;\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _jquery = __webpack_require__(0);\n\nvar _jquery2 = _interopRequireDefault(_jquery);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\n * Colorpicker extension class.\n */\nvar Extension = function () {\n  /**\n   * @param {Colorpicker} colorpicker\n   * @param {Object} options\n   */\n  function Extension(colorpicker) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    _classCallCheck(this, Extension);\n\n    /**\n     * @type {Colorpicker}\n     */\n    this.colorpicker = colorpicker;\n    /**\n     * @type {Object}\n     */\n    this.options = options;\n\n    if (!(this.colorpicker.element && this.colorpicker.element.length)) {\n      throw new Error('Extension: this.colorpicker.element is not valid');\n    }\n\n    this.colorpicker.element.on('colorpickerCreate.colorpicker-ext', _jquery2.default.proxy(this.onCreate, this));\n    this.colorpicker.element.on('colorpickerDestroy.colorpicker-ext', _jquery2.default.proxy(this.onDestroy, this));\n    this.colorpicker.element.on('colorpickerUpdate.colorpicker-ext', _jquery2.default.proxy(this.onUpdate, this));\n    this.colorpicker.element.on('colorpickerChange.colorpicker-ext', _jquery2.default.proxy(this.onChange, this));\n    this.colorpicker.element.on('colorpickerInvalid.colorpicker-ext', _jquery2.default.proxy(this.onInvalid, this));\n    this.colorpicker.element.on('colorpickerShow.colorpicker-ext', _jquery2.default.proxy(this.onShow, this));\n    this.colorpicker.element.on('colorpickerHide.colorpicker-ext', _jquery2.default.proxy(this.onHide, this));\n    this.colorpicker.element.on('colorpickerEnable.colorpicker-ext', _jquery2.default.proxy(this.onEnable, this));\n    this.colorpicker.element.on('colorpickerDisable.colorpicker-ext', _jquery2.default.proxy(this.onDisable, this));\n  }\n\n  /**\n   * Function called every time a new color needs to be created.\n   * Return false to skip this resolver and continue with other extensions' ones\n   * or return anything else to consider the color resolved.\n   *\n   * @param {Color|String|*} color\n   * @return {Color|String|*}\n   */\n\n\n  _createClass(Extension, [{\n    key: 'resolveColor',\n    value: function resolveColor(color) {\n      return false;\n    }\n\n    /**\n     * @listens Colorpicker#colorpickerCreate\n     * @param {Event} event\n     */\n\n  }, {\n    key: 'onCreate',\n    value: function onCreate(event) {}\n    // to be extended\n\n\n    /**\n     * @listens Colorpicker#colorpickerDestroy\n     * @param {Event} event\n     */\n\n  }, {\n    key: 'onDestroy',\n    value: function onDestroy(event) {\n      this.colorpicker.element.off('.colorpicker-ext');\n    }\n\n    /**\n     * @listens Colorpicker#colorpickerUpdate\n     * @param {Event} event\n     */\n\n  }, {\n    key: 'onUpdate',\n    value: function onUpdate(event) {}\n    // to be extended\n\n\n    /**\n     * @listens Colorpicker#colorpickerChange\n     * @param {Event} event\n     */\n\n  }, {\n    key: 'onChange',\n    value: function onChange(event) {}\n    // to be extended\n\n\n    /**\n     * @listens Colorpicker#colorpickerInvalid\n     * @param {Event} event\n     */\n\n  }, {\n    key: 'onInvalid',\n    value: function onInvalid(event) {}\n    // to be extended\n\n\n    /**\n     * @listens Colorpicker#colorpickerHide\n     * @param {Event} event\n     */\n\n  }, {\n    key: 'onHide',\n    value: function onHide(event) {}\n    // to be extended\n\n\n    /**\n     * @listens Colorpicker#colorpickerShow\n     * @param {Event} event\n     */\n\n  }, {\n    key: 'onShow',\n    value: function onShow(event) {}\n    // to be extended\n\n\n    /**\n     * @listens Colorpicker#colorpickerDisable\n     * @param {Event} event\n     */\n\n  }, {\n    key: 'onDisable',\n    value: function onDisable(event) {}\n    // to be extended\n\n\n    /**\n     * @listens Colorpicker#colorpickerEnable\n     * @param {Event} event\n     */\n\n  }, {\n    key: 'onEnable',\n    value: function onEnable(event) {\n      // to be extended\n    }\n  }]);\n\n  return Extension;\n}();\n\nexports.default = Extension;\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _Extension2 = __webpack_require__(1);\n\nvar _Extension3 = _interopRequireDefault(_Extension2);\n\nvar _jquery = __webpack_require__(0);\n\nvar _jquery2 = _interopRequireDefault(_jquery);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar defaults = {\n  /**\n   * Key-value pairs defining a color alias and its CSS color representation.\n   *\n   * They can also be just an array of values. In that case, no special names are used, only the real colors.\n   *\n   * @type {Object|Array}\n   * @default null\n   * @example\n   *  {\n   *   'black': '#000000',\n   *   'white': '#ffffff',\n   *   'red': '#FF0000',\n   *   'default': '#777777',\n   *   'primary': '#337ab7',\n   *   'success': '#5cb85c',\n   *   'info': '#5bc0de',\n   *   'warning': '#f0ad4e',\n   *   'danger': '#d9534f'\n   *  }\n   *\n   * @example ['#f0ad4e', '#337ab7', '#5cb85c']\n   */\n  colors: null,\n  /**\n   * If true, the when a color swatch is selected the name (alias) will be used as input value,\n   * otherwise the swatch real color value will be used.\n   *\n   * @type {boolean}\n   * @default true\n   */\n  namesAsValues: true\n};\n\nvar Palette = function (_Extension) {\n  _inherits(Palette, _Extension);\n\n  _createClass(Palette, [{\n    key: 'colors',\n\n\n    /**\n     * @returns {Object|Array}\n     */\n    get: function get() {\n      return this.options.colors;\n    }\n  }]);\n\n  function Palette(colorpicker) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    _classCallCheck(this, Palette);\n\n    var _this = _possibleConstructorReturn(this, (Palette.__proto__ || Object.getPrototypeOf(Palette)).call(this, colorpicker, _jquery2.default.extend(true, {}, defaults, options)));\n\n    if (!Array.isArray(_this.options.colors) && _typeof(_this.options.colors) !== 'object') {\n      _this.options.colors = null;\n    }\n    return _this;\n  }\n\n  /**\n   * @returns {int}\n   */\n\n\n  _createClass(Palette, [{\n    key: 'getLength',\n    value: function getLength() {\n      if (!this.options.colors) {\n        return 0;\n      }\n\n      if (Array.isArray(this.options.colors)) {\n        return this.options.colors.length;\n      }\n\n      if (_typeof(this.options.colors) === 'object') {\n        return Object.keys(this.options.colors).length;\n      }\n\n      return 0;\n    }\n  }, {\n    key: 'resolveColor',\n    value: function resolveColor(color) {\n      if (this.getLength() <= 0) {\n        return false;\n      }\n\n      if (Array.isArray(this.options.colors)) {\n        if (this.options.colors.indexOf(color) >= 0) {\n          return color;\n        }\n        if (this.options.colors.indexOf(color.toUpperCase()) >= 0) {\n          return color.toUpperCase();\n        }\n        if (this.options.colors.indexOf(color.toLowerCase()) >= 0) {\n          return color.toLowerCase();\n        }\n        return false;\n      }\n\n      if (_typeof(this.options.colors) !== 'object') {\n        return false;\n      }\n\n      if (!this.options.namesAsValues) {\n        return this.getValue(color, false);\n      }\n      return this.getName(color, this.getName('#' + color, this.getValue(color, false)));\n    }\n\n    /**\n     * Given a color value, returns the corresponding color name or defaultValue.\n     *\n     * @param {String} value\n     * @param {*} defaultValue\n     * @returns {*}\n     */\n\n  }, {\n    key: 'getName',\n    value: function getName(value) {\n      var defaultValue = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n      if (!(typeof value === 'string') || !this.options.colors) {\n        return defaultValue;\n      }\n      for (var name in this.options.colors) {\n        if (!this.options.colors.hasOwnProperty(name)) {\n          continue;\n        }\n        if (this.options.colors[name].toLowerCase() === value.toLowerCase()) {\n          return name;\n        }\n      }\n      return defaultValue;\n    }\n\n    /**\n     * Given a color name, returns the corresponding color value or defaultValue.\n     *\n     * @param {String} name\n     * @param {*} defaultValue\n     * @returns {*}\n     */\n\n  }, {\n    key: 'getValue',\n    value: function getValue(name) {\n      var defaultValue = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n      if (!(typeof name === 'string') || !this.options.colors) {\n        return defaultValue;\n      }\n      if (this.options.colors.hasOwnProperty(name)) {\n        return this.options.colors[name];\n      }\n      return defaultValue;\n    }\n  }]);\n\n  return Palette;\n}(_Extension3.default);\n\nexports.default = Palette;\n\n/***/ }),\n/* 3 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar _Colorpicker = __webpack_require__(4);\n\nvar _Colorpicker2 = _interopRequireDefault(_Colorpicker);\n\nvar _jquery = __webpack_require__(0);\n\nvar _jquery2 = _interopRequireDefault(_jquery);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar plugin = 'colorpicker';\n\n_jquery2.default[plugin] = _Colorpicker2.default;\n\n_jquery2.default.fn[plugin] = function (option) {\n  var apiArgs = Array.prototype.slice.call(arguments, 1),\n      isSingleElement = this.length === 1,\n      returnValue = null;\n\n  var $jq = this.each(function () {\n    var $this = (0, _jquery2.default)(this),\n        inst = $this.data(plugin),\n        options = (typeof option === 'undefined' ? 'undefined' : _typeof(option)) === 'object' ? option : {};\n\n    if (!inst) {\n      inst = new _Colorpicker2.default(this, options);\n      $this.data(plugin, inst);\n    }\n\n    if (typeof option === 'string') {\n      if (option === 'colorpicker') {\n        returnValue = inst;\n      } else if (_jquery2.default.isFunction(inst[option])) {\n        returnValue = inst[option].apply(inst, apiArgs);\n      } else {\n        // its a property ?\n        if (apiArgs.length) {\n          // set property\n          inst[option] = apiArgs[0];\n        }\n        returnValue = inst[option];\n      }\n    } else {\n      returnValue = $this;\n    }\n  });\n\n  return isSingleElement ? returnValue : $jq;\n};\n\n_jquery2.default.fn[plugin].constructor = _Colorpicker2.default;\n\n/***/ }),\n/* 4 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _Color = __webpack_require__(5);\n\nvar _Color2 = _interopRequireDefault(_Color);\n\nvar _Extension = __webpack_require__(1);\n\nvar _Extension2 = _interopRequireDefault(_Extension);\n\nvar _options = __webpack_require__(7);\n\nvar _options2 = _interopRequireDefault(_options);\n\nvar _extensions = __webpack_require__(8);\n\nvar _extensions2 = _interopRequireDefault(_extensions);\n\nvar _jquery = __webpack_require__(0);\n\nvar _jquery2 = _interopRequireDefault(_jquery);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar colorPickerIdCounter = 0;\n\n/**\n * Colorpicker widget class\n */\n\nvar Colorpicker = function () {\n  _createClass(Colorpicker, [{\n    key: 'color',\n\n\n    /**\n     * color getter\n     *\n     * @type {Color|null}\n     */\n    get: function get() {\n      return this.element.data('color');\n    }\n\n    /**\n     * color setter\n     *\n     * @ignore\n     * @param {Color|null} value\n     */\n    ,\n    set: function set(value) {\n      this.element.data('color', value);\n    }\n\n    /**\n     * @fires Colorpicker#colorpickerCreate\n     * @param {Object|String} element\n     * @param {Object} options\n     * @constructor\n     */\n\n  }], [{\n    key: 'Color',\n\n    /**\n     * Color class\n     *\n     * @static\n     * @type {Color}\n     */\n    get: function get() {\n      return _Color2.default;\n    }\n\n    /**\n     * Extension class\n     *\n     * @static\n     * @type {Extension}\n     */\n\n  }, {\n    key: 'Extension',\n    get: function get() {\n      return _Extension2.default;\n    }\n\n    /**\n     * Colorpicker bundled extension classes\n     *\n     * @static\n     * @type {{Extension}}\n     */\n\n  }, {\n    key: 'Extensions',\n    get: function get() {\n      return _extensions2.default;\n    }\n  }]);\n\n  function Colorpicker(element, options) {\n    var _this = this;\n\n    _classCallCheck(this, Colorpicker);\n\n    colorPickerIdCounter += 1;\n    /**\n     * The colorpicker instance number\n     * @type {number}\n     */\n    this.id = colorPickerIdCounter;\n\n    /**\n     * @type {*|jQuery}\n     */\n    this.element = (0, _jquery2.default)(element).addClass('colorpicker-element');\n    this.element.attr('data-colorpicker-id', this.id);\n\n    /**\n     * @type {defaults}\n     */\n    this.options = _jquery2.default.extend(true, {}, _options2.default, options, this.element.data());\n\n    /**\n     * @type {Extension[]}\n     */\n    this.extensions = [];\n\n    if (!Array.isArray(this.options.extensions)) {\n      this.options.extensions = [];\n    }\n\n    /**\n     * @type {*|jQuery}\n     */\n    this.component = this.options.component;\n    this.component = this.component !== false ? this.element.find(this.component) : false;\n    if (this.component && this.component.length === 0) {\n      this.component = false;\n    }\n\n    /**\n     * @type {*|jQuery}\n     */\n    this.container = this.options.container === true ? this.element : this.options.container;\n    this.container = this.container !== false ? (0, _jquery2.default)(this.container) : false;\n\n    /**\n     * @type {*|String}\n     * @private\n     */\n    this.currentSlider = null;\n\n    /**\n     * @type {{left: number, top: number}}\n     * @private\n     */\n    this.mousePointer = {\n      left: 0,\n      top: 0\n    };\n\n    /**\n     * Latest external event\n     *\n     * @type {{name: String, e: *}}\n     * @private\n     */\n    this.lastEvent = {\n      name: null,\n      e: null\n    };\n\n    // Is the element an input? Should we search inside for any input?\n    /**\n     * @type {*|jQuery}\n     */\n    this.input = this.element.is('input') ? this.element : this.options.input ? this.element.find(this.options.input) : false;\n\n    if (this.input && this.input.length === 0) {\n      this.input = false;\n    }\n\n    if (this.options.debug) {\n      this.options.extensions.push({ name: 'Debugger' });\n    }\n\n    // Register extensions\n    this.options.extensions.forEach(function (ext) {\n      _this.addExtension(ext.name, _extensions2.default[ext.name.toLowerCase()], ext);\n    });\n\n    var colorValue = this.options.color !== false ? this.options.color : this.getValue();\n\n    this.color = colorValue ? this.createColor(colorValue) : false;\n\n    if (this.options.format === false) {\n      // If format is false, use the first parsed one from now on\n      this.options.format = this.color.format;\n    }\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.disabled = false;\n\n    // Setup picker\n    var $picker = this.picker = (0, _jquery2.default)(this.options.template);\n\n    if (this.options.customClass) {\n      $picker.addClass(this.options.customClass);\n    }\n    if (this.options.inline) {\n      $picker.addClass('colorpicker-inline colorpicker-visible');\n    } else {\n      $picker.addClass('colorpicker-hidden');\n    }\n    if (this.options.horizontal) {\n      $picker.addClass('colorpicker-horizontal');\n    }\n\n    if ((this.options.useAlpha || this.hasColor() && this.color.hasTransparency()) && this.options.useAlpha !== false) {\n      this.options.useAlpha = true;\n      $picker.addClass('colorpicker-with-alpha');\n    }\n\n    if (this.options.align === 'right') {\n      $picker.addClass('colorpicker-right');\n    }\n    if (this.options.inline === true) {\n      $picker.addClass('colorpicker-no-arrow');\n    }\n\n    // Prevent closing the colorpicker when clicking on itself\n    $picker.on('mousedown.colorpicker touchstart.colorpicker', _jquery2.default.proxy(function (e) {\n      if (e.target === e.currentTarget) {\n        e.preventDefault();\n      }\n    }, this));\n\n    // Bind click/tap events on the sliders\n    $picker.find('.colorpicker-saturation, .colorpicker-hue, .colorpicker-alpha').on('mousedown.colorpicker touchstart.colorpicker', _jquery2.default.proxy(this._mousedown, this));\n\n    $picker.appendTo(this.container ? this.container : (0, _jquery2.default)('body'));\n\n    // Bind other events\n    if (this.hasInput()) {\n      this.input.on({\n        'keyup.colorpicker': _jquery2.default.proxy(this._keyup, this)\n      });\n      this.input.on({\n        'change.colorpicker': _jquery2.default.proxy(this._change, this)\n      });\n      if (this.component === false) {\n        this.element.on({\n          'focus.colorpicker': _jquery2.default.proxy(this.show, this)\n        });\n      }\n      if (this.options.inline === false) {\n        this.element.on({\n          'focusout.colorpicker': _jquery2.default.proxy(this.hide, this)\n        });\n      }\n    }\n\n    if (this.component !== false) {\n      this.component.on({\n        'click.colorpicker': _jquery2.default.proxy(this.show, this)\n      });\n    }\n\n    if (this.hasInput() === false && this.component === false && !this.element.has('.colorpicker')) {\n      this.element.on({\n        'click.colorpicker': _jquery2.default.proxy(this.show, this)\n      });\n    }\n\n    // for HTML5 input[type='color']\n    if (this.hasInput() && this.component !== false && this.input.attr('type') === 'color') {\n      this.input.on({\n        'click.colorpicker': _jquery2.default.proxy(this.show, this),\n        'focus.colorpicker': _jquery2.default.proxy(this.show, this)\n      });\n    }\n\n    // Update if there is a color option\n    this.update(this.options.color !== false);\n\n    (0, _jquery2.default)(_jquery2.default.proxy(function () {\n      /**\n       * (Colorpicker) When the Colorpicker instance has been created and the DOM is ready.\n       *\n       * @event Colorpicker#colorpickerCreate\n       */\n      this.element.trigger({\n        type: 'colorpickerCreate',\n        colorpicker: this,\n        color: this.color\n      });\n    }, this));\n  }\n\n  /**\n   * Creates and registers the given extension\n   *\n   * @param {String|Extension} extensionName\n   * @param {Extension} ExtensionClass\n   * @param {Object} [config]\n   * @returns {Extension}\n   */\n\n\n  _createClass(Colorpicker, [{\n    key: 'addExtension',\n    value: function addExtension(extensionName, ExtensionClass) {\n      var config = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n      var ext = extensionName instanceof _Extension2.default ? extensionName : new ExtensionClass(this, config);\n\n      this.extensions.push(ext);\n      return ext;\n    }\n\n    /**\n     * Destroys the current instance\n     *\n     * @fires Colorpicker#colorpickerDestroy\n     */\n\n  }, {\n    key: 'destroy',\n    value: function destroy() {\n      this.picker.remove();\n      this.element.removeData('colorpicker', 'color').off('.colorpicker');\n      if (this.hasInput()) {\n        this.input.off('.colorpicker');\n      }\n      if (this.component !== false) {\n        this.component.off('.colorpicker');\n      }\n      this.element.removeClass('colorpicker-element');\n\n      /**\n       * (Colorpicker) When the instance is destroyed with all events unbound.\n       *\n       * @event Colorpicker#colorpickerDestroy\n       */\n      this.element.trigger({\n        type: 'colorpickerDestroy',\n        colorpicker: this,\n        color: this.color\n      });\n    }\n\n    /**\n     * Returns true if the current color object is an instance of Color, false otherwise.\n     * @returns {boolean}\n     */\n\n  }, {\n    key: 'hasColor',\n    value: function hasColor() {\n      return this.color instanceof _Color2.default;\n    }\n\n    /**\n     * @returns {*|String|Color}\n     */\n\n  }, {\n    key: 'toInputColorString',\n\n\n    /**\n     * Formatted color string, with the formatting options applied\n     * (e.g. useHashPrefix)\n     * @returns {String}\n     */\n    value: function toInputColorString() {\n      var str = this.toCssColorString();\n\n      if (!str) {\n        return str;\n      }\n\n      if (this.options.useHashPrefix === false) {\n        str = str.replace(/^#/g, '');\n      }\n\n      return this._resolveColor(str);\n    }\n\n    /**\n     * Formatted color string, suitable for CSS\n     * @returns {String}\n     */\n\n  }, {\n    key: 'toCssColorString',\n    value: function toCssColorString() {\n      if (!this.hasColor()) {\n        return '';\n      }\n      return this.color.toString(this.format);\n    }\n\n    /**\n     * If the widget is not inside a container or inline, rearranges its position relative to its element offset.\n     *\n     * @param {Event} [e]\n     * @private\n     * @returns {boolean} Returns false if the widget is inside a container or inline, true otherwise\n     */\n\n  }, {\n    key: '_reposition',\n    value: function _reposition(e) {\n      this.lastEvent.name = 'reposition';\n      this.lastEvent.e = e;\n\n      if (this.options.inline !== false || this.options.container) {\n        return false;\n      }\n      var type = this.container && this.container[0] !== window.document.body ? 'position' : 'offset';\n      var element = this.component || this.element;\n      var offset = element[type]();\n\n      if (this.options.align === 'right') {\n        offset.left -= this.picker.outerWidth() - element.outerWidth();\n      }\n      this.picker.css({\n        top: offset.top + element.outerHeight(),\n        left: offset.left\n      });\n      return true;\n    }\n\n    /**\n     * Shows the colorpicker widget if hidden.\n     * If the input is disabled this call will be ignored.\n     *\n     * @fires Colorpicker#colorpickerShow\n     * @param {Event} [e]\n     * @returns {boolean} True if was hidden and afterwards visible, false if nothing happened.\n     */\n\n  }, {\n    key: 'show',\n    value: function show(e) {\n      this.lastEvent.name = 'show';\n      this.lastEvent.e = e;\n\n      if (this.isVisible() || this.isDisabled()) {\n        // Don't show the widget if it's already visible or it is disabled\n        return false;\n      }\n      this.picker.addClass('colorpicker-visible').removeClass('colorpicker-hidden');\n\n      this._reposition(e);\n      (0, _jquery2.default)(window).on('resize.colorpicker', _jquery2.default.proxy(this._reposition, this));\n\n      if (e && (!this.hasInput() || this.input.attr('type') === 'color')) {\n        if (e.stopPropagation && e.preventDefault) {\n          e.stopPropagation();\n          e.preventDefault();\n        }\n      }\n      if ((this.component || !this.input) && this.options.inline === false) {\n        (0, _jquery2.default)(window.document).on({\n          'mousedown.colorpicker': _jquery2.default.proxy(this.hide, this)\n        });\n      }\n\n      /**\n       * (Colorpicker) When show() is called and the widget can be shown.\n       *\n       * @event Colorpicker#colorpickerShow\n       */\n      this.element.trigger({\n        type: 'colorpickerShow',\n        colorpicker: this,\n        color: this.color\n      });\n\n      return true;\n    }\n\n    /**\n     * Hides the colorpicker widget.\n     * Hide is prevented when it is triggered by an event whose target element has been clicked/touched.\n     *\n     * @fires Colorpicker#colorpickerHide\n     * @param {Event} [e]\n     * @returns {boolean} True if was visible and afterwards hidden, false if nothing happened.\n     */\n\n  }, {\n    key: 'hide',\n    value: function hide(e) {\n      this.lastEvent.name = 'hide';\n      this.lastEvent.e = e;\n\n      if (this.isHidden()) {\n        // Do not trigger if already hidden\n        return false;\n      }\n      if (typeof e !== 'undefined' && e.target) {\n        // Prevent hide if triggered by an event and an element inside the colorpicker has been clicked/touched\n        if ((0, _jquery2.default)(e.currentTarget).parents('.colorpicker').length > 0 || (0, _jquery2.default)(e.target).parents('.colorpicker').length > 0) {\n          return false;\n        }\n      }\n      this.picker.addClass('colorpicker-hidden').removeClass('colorpicker-visible');\n      (0, _jquery2.default)(window).off('resize.colorpicker', this._reposition);\n      (0, _jquery2.default)(window.document).off({\n        'mousedown.colorpicker': this.hide\n      });\n\n      /**\n       * (Colorpicker) When hide() is called and the widget can be hidden.\n       *\n       * @event Colorpicker#colorpickerHide\n       */\n      this.element.trigger({\n        type: 'colorpickerHide',\n        colorpicker: this,\n        color: this.color\n      });\n      return true;\n    }\n\n    /**\n     * Returns true if the colorpicker element has the colorpicker-visible class and not the colorpicker-hidden one.\n     * False otherwise.\n     *\n     * @returns {boolean}\n     */\n\n  }, {\n    key: 'isVisible',\n    value: function isVisible() {\n      return this.picker.hasClass('colorpicker-visible') && !this.picker.hasClass('colorpicker-hidden');\n    }\n\n    /**\n     * Returns true if the colorpicker element has the colorpicker-hidden class and not the colorpicker-visible one.\n     * False otherwise.\n     *\n     * @returns {boolean}\n     */\n\n  }, {\n    key: 'isHidden',\n    value: function isHidden() {\n      return this.picker.hasClass('colorpicker-hidden') && !this.picker.hasClass('colorpicker-visible');\n    }\n\n    /**\n     * If the input element is present, it updates the value with the current color object color string.\n     * If value is set, this method fires a \"change\" event on the input element.\n     *\n     * @fires Colorpicker#change\n     * @private\n     */\n\n  }, {\n    key: '_updateInput',\n    value: function _updateInput() {\n      if (!this.hasInput()) {\n        return;\n      }\n      var val = this.toInputColorString();\n\n      if (val === this.input.prop('value')) {\n        // No need to set value or trigger any event if nothing changed\n        return;\n      }\n\n      this.input.prop('value', val ? val : '');\n\n      /**\n       * (Input) Triggered on the input element when a new color is selected.\n       *\n       * @event Colorpicker#change\n       */\n      this.input.trigger({\n        type: 'change',\n        colorpicker: this,\n        color: this.color,\n        value: val\n      });\n    }\n\n    /**\n     * Changes the color adjustment bars using the current color object information.\n     * @private\n     */\n\n  }, {\n    key: '_updatePicker',\n    value: function _updatePicker() {\n      if (!this.hasColor()) {\n        return;\n      }\n\n      var vertical = this.options.horizontal === false,\n          sl = vertical ? this.options.sliders : this.options.slidersHorz;\n\n      var saturationGuide = this.picker.find('.colorpicker-saturation .colorpicker-guide'),\n          hueGuide = this.picker.find('.colorpicker-hue .colorpicker-guide'),\n          alphaGuide = this.picker.find('.colorpicker-alpha .colorpicker-guide');\n\n      var hsva = this.color.hsvaRatio;\n\n      if (hueGuide.length) {\n        hueGuide.css(vertical ? 'top' : 'left', (vertical ? sl.hue.maxTop : sl.hue.maxLeft) * (1 - hsva.h));\n      }\n\n      if (alphaGuide.length) {\n        alphaGuide.css(vertical ? 'top' : 'left', (vertical ? sl.alpha.maxTop : sl.alpha.maxLeft) * (1 - hsva.a));\n      }\n\n      if (saturationGuide.length) {\n        saturationGuide.css({\n          'top': sl.saturation.maxTop - hsva.v * sl.saturation.maxTop,\n          'left': hsva.s * sl.saturation.maxLeft\n        });\n      }\n\n      this.picker.find('.colorpicker-saturation').css('backgroundColor', this.color.getHueOnlyCopy().toHexString()); // we only need hue\n\n      var hex6Color = this.color.toString('hex6');\n      var alphaBg = '';\n\n      if (this.options.horizontal) {\n        alphaBg = 'linear-gradient(to right, ' + hex6Color + ' 0%, transparent 100%)';\n      } else {\n        alphaBg = 'linear-gradient(to bottom, ' + hex6Color + ' 0%, transparent 100%)';\n      }\n\n      this.picker.find('.colorpicker-alpha-color').css('background', alphaBg);\n    }\n\n    /**\n     * If the component element is present, its background color is updated\n     * @private\n     */\n\n  }, {\n    key: '_updateComponent',\n    value: function _updateComponent() {\n      if (!this.hasColor() || this.component === false) {\n        return;\n      }\n\n      var colorStr = this.toCssColorString();\n      var styles = { 'background': colorStr };\n\n      var icn = this.component.find('i').eq(0);\n\n      if (icn.length > 0) {\n        icn.css(styles);\n      } else {\n        this.component.css(styles);\n      }\n    }\n\n    /**\n     * @private\n     * @returns {boolean}\n     */\n\n  }, {\n    key: '_shouldUpdate',\n    value: function _shouldUpdate() {\n      return this.hasColor() && this.getValue(false) !== false;\n    }\n\n    /**\n     * Updated the component color, the input value and the widget if a color is present.\n     *\n     * If force is true, it is updated anyway.\n     *\n     * @fires Colorpicker#colorpickerUpdate\n     * @param {boolean} [force]\n     */\n\n  }, {\n    key: 'update',\n    value: function update() {\n      var force = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n\n      if (this._shouldUpdate() || force === true) {\n        // Update only if the current value (from input or data) is not empty\n        this._updateComponent();\n\n        // Do not update input when autoInputFallback is disabled and last event is keyup.\n        var preventInputUpdate = this.options.autoInputFallback !== true &&\n        // this.isInvalidColor() ||  // prevent also on invalid color (on create, leaves invalid colors)\n        this.lastEvent.name === 'keyup';\n\n        if (!preventInputUpdate) {\n          this._updateInput();\n        }\n\n        this._updatePicker();\n\n        /**\n         * (Colorpicker) Fired when the widget is updated.\n         *\n         * @event Colorpicker#colorpickerUpdate\n         */\n        this.element.trigger({\n          type: 'colorpickerUpdate',\n          colorpicker: this,\n          color: this.color\n        });\n      }\n    }\n\n    /**\n     * Returns the color string from the input value or the 'data-color' attribute of the input or element.\n     * If empty, it returns the defaultValue parameter.\n     *\n     * @param {String|*} [defaultValue]\n     * @returns {String|*}\n     */\n\n  }, {\n    key: 'getValue',\n    value: function getValue() {\n      var defaultValue = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n\n      defaultValue = typeof defaultValue === 'undefined' ? this.fallbackColor : defaultValue;\n      var candidates = [],\n          val = false;\n\n      if (this.hasInput()) {\n        candidates.push(this.input.val());\n        candidates.push(this.input.data('color'));\n      }\n      candidates.push(this.element.data('color'));\n\n      candidates.map(function (item) {\n        if (item && val === false) {\n          val = item;\n        }\n      });\n\n      val = val === false ? defaultValue : val;\n\n      if (val instanceof _Color2.default) {\n        return val.toString(this.format);\n      }\n\n      return val;\n    }\n\n    /**\n     * Sets the color manually\n     *\n     * @fires Colorpicker#colorpickerChange\n     * @param {String|Color} val\n     */\n\n  }, {\n    key: 'setValue',\n    value: function setValue(val) {\n      if (this.hasColor() && this.color.equals(val)) {\n        // equal color object\n        return;\n      }\n\n      var color = val ? this.createColor(val) : false;\n\n      if (!this.hasColor() && !color) {\n        // color was empty and the new one too\n        return;\n      }\n\n      // force update if color is changed to empty\n      var shouldForceUpdate = this.hasColor() && !color;\n\n      this.color = color;\n\n      /**\n       * (Colorpicker) When the color is set programmatically with setValue().\n       *\n       * @event Colorpicker#colorpickerChange\n       */\n      this.element.trigger({\n        type: 'colorpickerChange',\n        colorpicker: this,\n        color: this.color,\n        value: val\n      });\n\n      // force update if color has changed to empty\n      this.update(shouldForceUpdate);\n    }\n\n    /**\n     * Creates a new color using the widget instance options (fallbackColor, format).\n     *\n     * @fires Colorpicker#colorpickerInvalid\n     * @param {*} val\n     * @param {boolean} useFallback\n     * @returns {Color}\n     */\n\n  }, {\n    key: 'createColor',\n    value: function createColor(val) {\n      var useFallback = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n\n      var color = new _Color2.default(this._resolveColor(val), { format: this.format });\n\n      if (!color.isValid()) {\n        var invalidColor = color,\n            fallback = void 0;\n\n        if (useFallback) {\n          fallback = this.fallbackColor instanceof _Color2.default && this.fallbackColor.isValid() ? this.fallbackColor : this._resolveColor(this.fallbackColor);\n\n          color = new _Color2.default(fallback, { format: this.format });\n\n          if (!color.isValid() && useFallback) {\n            throw new Error('The fallback color is invalid.');\n          }\n        }\n\n        color.previous = invalidColor;\n\n        /**\n         * (Colorpicker) Fired when the color is invalid and the fallback color is going to be used.\n         *\n         * @event Colorpicker#colorpickerInvalid\n         */\n        this.element.trigger({\n          type: 'colorpickerInvalid',\n          colorpicker: this,\n          color: color,\n          value: val\n        });\n      }\n\n      if (!this.isAlphaEnabled() && color.hasTransparency()) {\n        // Alpha is disabled\n        color.setAlpha(1);\n      }\n\n      if (!this.hasColor()) {\n        // No previous color, so no need to compare\n        return color;\n      }\n\n      var hsva = color.hsvaRatio;\n      var prevHsva = this.color.hsvaRatio;\n\n      if (hsva.s === 0 && hsva.h === 0 && prevHsva.h !== 0) {\n        // Hue was set to 0 because saturation was 0, use previous hue, since it was not meant to change...\n        color.setHueRatio(prevHsva.h);\n      }\n\n      if (!this.isAlphaEnabled() && color.hasTransparency()) {\n        // Alpha is disabled\n        color.setAlpha(1);\n      }\n\n      return color;\n    }\n\n    /**\n     * Checks if there is a color object, that it is valid and it is not a fallback\n     * @returns {boolean}\n     */\n\n  }, {\n    key: 'isInvalidColor',\n    value: function isInvalidColor() {\n      return !this.hasColor() || !this.color.isValid() || !!this.color.previous;\n    }\n\n    /**\n     * Returns true if the useAlpha option is exactly true, false otherwise\n     * @returns {boolean}\n     */\n\n  }, {\n    key: 'isAlphaEnabled',\n    value: function isAlphaEnabled() {\n      return this.options.useAlpha === true;\n    }\n\n    /**\n     * Resolves a color, in case is not in a standard format (e.g. a custom color alias)\n     *\n     * @private\n     * @param {String|*} color\n     * @returns {String|*|null}\n     */\n\n  }, {\n    key: '_resolveColor',\n    value: function _resolveColor(color) {\n      var extResolvedColor = false;\n\n      _jquery2.default.each(this.extensions, function (name, ext) {\n        if (extResolvedColor !== false) {\n          // skip if resolved\n          return;\n        }\n        extResolvedColor = ext.resolveColor(color);\n      });\n\n      if (extResolvedColor !== false) {\n        color = extResolvedColor;\n      }\n\n      return color;\n    }\n\n    /**\n     * Returns true if the widget has an associated input element, false otherwise\n     * @returns {boolean}\n     */\n\n  }, {\n    key: 'hasInput',\n    value: function hasInput() {\n      return this.input !== false;\n    }\n\n    /**\n     * Returns true if this instance is disabled\n     * @returns {boolean}\n     */\n\n  }, {\n    key: 'isDisabled',\n    value: function isDisabled() {\n      return this.disabled === true;\n    }\n\n    /**\n     * Disables the widget and the input if any\n     *\n     * @fires Colorpicker#colorpickerDisable\n     * @returns {boolean}\n     */\n\n  }, {\n    key: 'disable',\n    value: function disable() {\n      if (this.hasInput()) {\n        this.input.prop('disabled', true);\n      }\n      this.disabled = true;\n\n      /**\n       * (Colorpicker) When the widget has been disabled.\n       *\n       * @event Colorpicker#colorpickerDisable\n       */\n      this.element.trigger({\n        type: 'colorpickerDisable',\n        colorpicker: this,\n        color: this.color\n      });\n      return true;\n    }\n\n    /**\n     * Enables the widget and the input if any\n     *\n     * @fires Colorpicker#colorpickerEnable\n     * @returns {boolean}\n     */\n\n  }, {\n    key: 'enable',\n    value: function enable() {\n      if (this.hasInput()) {\n        this.input.prop('disabled', false);\n      }\n      this.disabled = false;\n\n      /**\n       * (Colorpicker) When the widget has been enabled.\n       *\n       * @event Colorpicker#colorpickerEnable\n       */\n      this.element.trigger({\n        type: 'colorpickerEnable',\n        colorpicker: this,\n        color: this.color\n      });\n      return true;\n    }\n\n    /**\n     * Function triggered when clicking in one of the color adjustment bars\n     *\n     * @private\n     * @fires Colorpicker#mousemove\n     * @param {Event} e\n     * @returns {boolean}\n     */\n\n  }, {\n    key: '_mousedown',\n    value: function _mousedown(e) {\n      this.lastEvent.name = 'mousedown';\n      this.lastEvent.e = e;\n\n      if (!e.pageX && !e.pageY && e.originalEvent && e.originalEvent.touches) {\n        e.pageX = e.originalEvent.touches[0].pageX;\n        e.pageY = e.originalEvent.touches[0].pageY;\n      }\n      e.stopPropagation();\n      e.preventDefault();\n\n      var target = (0, _jquery2.default)(e.target);\n\n      // detect the slider and set the limits and callbacks\n      var zone = target.closest('div');\n      var sliders = this.options.horizontal ? this.options.slidersHorz : this.options.sliders;\n\n      if (zone.is('.colorpicker')) {\n        return false;\n      }\n      if (zone.is('.colorpicker-saturation')) {\n        this.currentSlider = _jquery2.default.extend({}, sliders.saturation);\n      } else if (zone.is('.colorpicker-hue')) {\n        this.currentSlider = _jquery2.default.extend({}, sliders.hue);\n      } else if (zone.is('.colorpicker-alpha')) {\n        this.currentSlider = _jquery2.default.extend({}, sliders.alpha);\n      } else if (zone.is('.colorpicker-alpha-color')) {\n        this.currentSlider = _jquery2.default.extend({}, sliders.alpha);\n        zone = zone.parent();\n      } else {\n        return false;\n      }\n      var offset = zone.offset();\n      // reference to guide's style\n\n      this.currentSlider.guide = zone.find('.colorpicker-guide')[0].style;\n      this.currentSlider.left = e.pageX - offset.left;\n      this.currentSlider.top = e.pageY - offset.top;\n      this.mousePointer = {\n        left: e.pageX,\n        top: e.pageY\n      };\n\n      /**\n       * (window.document) Triggered on mousedown for the document object,\n       * so the color adjustment guide is moved to the clicked position.\n       *\n       * @event Colorpicker#mousemove\n       */\n      (0, _jquery2.default)(window.document).on({\n        'mousemove.colorpicker': _jquery2.default.proxy(this._mousemove, this),\n        'touchmove.colorpicker': _jquery2.default.proxy(this._mousemove, this),\n        'mouseup.colorpicker': _jquery2.default.proxy(this._mouseup, this),\n        'touchend.colorpicker': _jquery2.default.proxy(this._mouseup, this)\n      }).trigger('mousemove');\n    }\n\n    /**\n     * Function triggered when dragging a guide inside one of the color adjustment bars.\n     *\n     * @private\n     * @param {Event} e\n     * @returns {boolean}\n     */\n\n  }, {\n    key: '_mousemove',\n    value: function _mousemove(e) {\n      this.lastEvent.name = 'mousemove';\n      this.lastEvent.e = e;\n\n      var color = !this.hasColor() ? this.createColor(this.fallbackColor) : this.color.getCopy();\n\n      if (!e.pageX && !e.pageY && e.originalEvent && e.originalEvent.touches) {\n        e.pageX = e.originalEvent.touches[0].pageX;\n        e.pageY = e.originalEvent.touches[0].pageY;\n      }\n      e.stopPropagation();\n      e.preventDefault();\n      var left = Math.max(0, Math.min(this.currentSlider.maxLeft, this.currentSlider.left + ((e.pageX || this.mousePointer.left) - this.mousePointer.left)));\n      var top = Math.max(0, Math.min(this.currentSlider.maxTop, this.currentSlider.top + ((e.pageY || this.mousePointer.top) - this.mousePointer.top)));\n\n      this.currentSlider.guide.left = left + 'px';\n      this.currentSlider.guide.top = top + 'px';\n      if (this.currentSlider.callLeft) {\n        color[this.currentSlider.callLeft].call(color, left / this.currentSlider.maxLeft);\n      }\n      if (this.currentSlider.callTop) {\n        color[this.currentSlider.callTop].call(color, top / this.currentSlider.maxTop);\n      }\n\n      this.setValue(color);\n      return false;\n    }\n\n    /**\n     * Function triggered when releasing the click in one of the color adjustment bars.\n     *\n     * @private\n     * @param {Event} e\n     * @returns {boolean}\n     */\n\n  }, {\n    key: '_mouseup',\n    value: function _mouseup(e) {\n      this.lastEvent.name = 'mouseup';\n      this.lastEvent.e = e;\n\n      e.stopPropagation();\n      e.preventDefault();\n      (0, _jquery2.default)(window.document).off({\n        'mousemove.colorpicker': this._mousemove,\n        'touchmove.colorpicker': this._mousemove,\n        'mouseup.colorpicker': this._mouseup,\n        'touchend.colorpicker': this._mouseup\n      });\n      return false;\n    }\n\n    /**\n     * Function triggered when the input has changed, so the colorpicker gets updated.\n     *\n     * @private\n     * @param {Event} e\n     * @returns {boolean}\n     */\n\n  }, {\n    key: '_change',\n    value: function _change(e) {\n      this.lastEvent.name = 'change';\n      this.lastEvent.e = e;\n\n      var val = this.input.val();\n\n      if (val !== this.toInputColorString()) {\n        this.setValue(val);\n      }\n    }\n\n    /**\n     * Function triggered after a keyboard key has been released.\n     *\n     * @private\n     * @param {Event} e\n     * @returns {boolean}\n     */\n\n  }, {\n    key: '_keyup',\n    value: function _keyup(e) {\n      this.lastEvent.name = 'keyup';\n      this.lastEvent.e = e;\n\n      var val = this.input.val();\n\n      if (val !== this.toInputColorString()) {\n        this.setValue(val);\n      }\n    }\n  }, {\n    key: 'fallbackColor',\n    get: function get() {\n      return this.options.fallbackColor ? this.options.fallbackColor : this.hasColor() ? this.color : '#000';\n    }\n  }, {\n    key: 'format',\n    get: function get() {\n      if (this.options.format) {\n        return this.options.format;\n      }\n\n      if (this.hasColor() && this.color.hasTransparency() && this.color.format.match(/^hex/)) {\n        return this.options.enableHex8 ? 'hex8' : this.isAlphaEnabled() ? 'rgba' : 'hex';\n      }\n\n      if (this.hasColor()) {\n        return this.color.format;\n      }\n\n      return null;\n    }\n  }]);\n\n  return Colorpicker;\n}();\n\nexports.default = Colorpicker;\n\n/***/ }),\n/* 5 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _tinycolor2 = __webpack_require__(6);\n\nvar _tinycolor3 = _interopRequireDefault(_tinycolor2);\n\nvar _jquery = __webpack_require__(0);\n\nvar _jquery2 = _interopRequireDefault(_jquery);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nfunction unwrapColor(color) {\n  if (color instanceof _tinycolor3.default) {\n    return {\n      r: color._r,\n      g: color._g,\n      b: color._b,\n      a: color._a\n    };\n  }\n  return color;\n}\n\n/**\n * Sanitizes a format string, so it is compatible with tinycolor,\n * or returns the same value if it is not a string.\n *\n * @param {String} format\n * @returns {String|*}\n * @private\n */\nfunction getCompatibleFormat(format) {\n  if (format instanceof String || typeof format === 'string') {\n    return format.replace(/a$/gi, '');\n  }\n\n  return format;\n}\n\n/**\n * Color manipulation class that extends the tinycolor library class.\n */\n\nvar Color = function (_tinycolor) {\n  _inherits(Color, _tinycolor);\n\n  _createClass(Color, [{\n    key: 'id',\n\n    /**\n     * Identifier of the color instance.\n     *\n     * @type {int}\n     * @readonly\n     */\n    get: function get() {\n      return this._tc_id;\n    }\n\n    /**\n     * Format of the parsed color.\n     *\n     * @type {String}\n     * @readonly\n     */\n\n  }, {\n    key: 'format',\n    get: function get() {\n      return this._format;\n    }\n\n    /**\n     * All options of the current instance.\n     *\n     * @type {{format: String, gradientType: String}}\n     * @readonly\n     */\n\n  }, {\n    key: 'options',\n    get: function get() {\n      return {\n        format: this._format,\n        gradientType: this._gradientType\n      };\n    }\n\n    /**\n     * @returns {{h, s, v, a}}\n     */\n\n  }, {\n    key: 'hsva',\n    get: function get() {\n      return this.toHsv();\n    }\n\n    /**\n     * @returns {{h, s, v, a}}\n     */\n\n  }, {\n    key: 'hsvaRatio',\n    get: function get() {\n      var hsv = this.hsva;\n\n      return {\n        h: hsv.h / 360,\n        s: hsv.s,\n        v: hsv.v,\n        a: hsv.a\n      };\n    }\n\n    /**\n     * foo bar\n     * @param {Color|*} color\n     * @param {{format}} [options]\n     * @constructor\n     */\n\n  }]);\n\n  function Color(color) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : { format: null };\n\n    _classCallCheck(this, Color);\n\n    if (options.format) {\n      options.format = getCompatibleFormat(options.format);\n    }\n\n    /**\n     * @type {Color|*}\n     */\n    var _this = _possibleConstructorReturn(this, (Color.__proto__ || Object.getPrototypeOf(Color)).call(this, unwrapColor(color), options));\n\n    _this._originalInput = color; // keep real original color\n    /**\n     * Hue backup to not lose the information when saturation is 0.\n     * @type {number}\n     */\n    _this._hbak = _this.hsva.h;\n    /**\n     * If set, it contains a reference to a previous color that caused the creation of this one.\n     * @type {Color}\n     */\n    _this.previous = null;\n    return _this;\n  }\n\n  /**\n   * Compares a color object with this one and returns true if it is equal or false if not.\n   *\n   * @param {Color} color\n   * @returns {boolean}\n   */\n\n\n  _createClass(Color, [{\n    key: 'equals',\n    value: function equals(color) {\n      if (!(color instanceof _tinycolor3.default)) {\n        return false;\n      }\n      return this._r === color._r && this._g === color._g && this._b === color._b && this._a === color._a && this._roundA === color._roundA && this._format === color._format && this._gradientType === color._gradientType && this._ok === color._ok;\n    }\n\n    /**\n     * Imports all variables of the given color to this instance, excepting `_tc_id`.\n     * @param {Color} color\n     */\n\n  }, {\n    key: 'importColor',\n    value: function importColor(color) {\n      if (!(color instanceof _tinycolor3.default)) {\n        throw new Error('Color.importColor: The color argument is not an instance of tinycolor.');\n      }\n      this._originalInput = color._originalInput;\n      this._r = color._r;\n      this._g = color._g;\n      this._b = color._b;\n      this._a = color._a;\n      this._roundA = color._roundA;\n      this._format = getCompatibleFormat(color._format);\n      this._gradientType = color._gradientType;\n      this._ok = color._ok;\n      // omit .previous and ._tc_id import\n    }\n\n    /**\n     * Imports the _r, _g, _b, _a, _hbak and _ok variables of the given color to this instance.\n     * @param {Color} color\n     */\n\n  }, {\n    key: 'importRgb',\n    value: function importRgb(color) {\n      if (!color instanceof Color) {\n        throw new Error('Color.importColor: The color argument is not an instance of tinycolor.');\n      }\n      this._r = color._r;\n      this._g = color._g;\n      this._b = color._b;\n      this._a = color._a;\n      this._ok = color._ok;\n      this._hbak = color._hbak;\n    }\n\n    /**\n     * @param {{h,s,v,a}} hsv\n     */\n\n  }, {\n    key: 'importHsv',\n    value: function importHsv(hsv) {\n      this._hbak = hsv.h;\n      this.importRgb(new Color(hsv, this.options));\n    }\n\n    /**\n     * @returns {Color}\n     */\n\n  }, {\n    key: 'getCopy',\n    value: function getCopy() {\n      return new Color(this.hsva, this.options);\n    }\n\n    /**\n     * @returns {Color}\n     */\n\n  }, {\n    key: 'getHueOnlyCopy',\n    value: function getHueOnlyCopy() {\n      return new Color({ h: this._hbak ? this._hbak : this.hsva.h, s: 100, v: 100 }, this.options);\n    }\n\n    /**\n     * @returns {Color}\n     */\n\n  }, {\n    key: 'getOpaqueCopy',\n    value: function getOpaqueCopy() {\n      return new Color(_jquery2.default.extend(true, {}, this.hsva, { a: 1 }), this.options);\n    }\n\n    /**\n     * @param {number} h Degrees from 0 to 360\n     */\n\n  }, {\n    key: 'setHue',\n    value: function setHue(h) {\n      this.importHsv(_jquery2.default.extend(true, {}, this.hsva, { h: h }));\n    }\n\n    /**\n     * @param {number} s Percent from 0 o 100\n     */\n\n  }, {\n    key: 'setSaturation',\n    value: function setSaturation(s) {\n      this.importHsv(_jquery2.default.extend(true, {}, this.hsva, { s: s }));\n    }\n\n    /**\n     * @param {number} v Percent from 0 o 100\n     */\n\n  }, {\n    key: 'setBrightness',\n    value: function setBrightness(v) {\n      this.importHsv(_jquery2.default.extend(true, {}, this.hsva, { v: v }));\n    }\n\n    /**\n     * @param {number} h Ratio from 0.0 to 1.0\n     */\n\n  }, {\n    key: 'setHueRatio',\n    value: function setHueRatio(h) {\n      if (h === 0) {\n        return;\n      }\n      this.setHue((1 - h) * 360);\n    }\n\n    /**\n     * @param {number} s Ratio from 0.0 to 1.0\n     */\n\n  }, {\n    key: 'setSaturationRatio',\n    value: function setSaturationRatio(s) {\n      this.setSaturation(s);\n    }\n\n    /**\n     * @param {number} v Ratio from 0.0 to 1.0\n     */\n\n  }, {\n    key: 'setBrightnessRatio',\n    value: function setBrightnessRatio(v) {\n      this.setBrightness(1 - v);\n    }\n\n    /**\n     * @param {number} a Ratio from 0.0 to 1.0\n     */\n\n  }, {\n    key: 'setAlphaRatio',\n    value: function setAlphaRatio(a) {\n      this.setAlpha(1 - a);\n    }\n\n    /**\n     * @returns {boolean}\n     */\n\n  }, {\n    key: 'isTransparent',\n    value: function isTransparent() {\n      return this._a === 0;\n    }\n\n    /**\n     * @returns {boolean}\n     */\n\n  }, {\n    key: 'hasTransparency',\n    value: function hasTransparency() {\n      return this._a !== 1;\n    }\n\n    /**\n     * @param {string|null} [format] One of \"rgb\", \"prgb\", \"hex\"/\"hex6\", \"hex3\", \"hex8\", \"hsl\", \"hsv\"/\"hsb\", \"name\"\n     * @returns {String}\n     */\n\n  }, {\n    key: 'toString',\n    value: function toString() {\n      var format = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n\n      format = format ? getCompatibleFormat(format) : this.format;\n\n      var colorStr = _get(Color.prototype.__proto__ || Object.getPrototypeOf(Color.prototype), 'toString', this).call(this, format);\n\n      if (colorStr && colorStr.match(/^#[0-9a-f]{3,8}$/i)) {\n        // Support transparent for hex formats\n        if (this.isTransparent() && this._r === 0 && this._g === 0 && this._b === 0) {\n          return 'transparent';\n        }\n      }\n\n      return colorStr;\n    }\n  }]);\n\n  return Color;\n}(_tinycolor3.default);\n\nexports.default = Color;\n\n/***/ }),\n/* 6 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar __WEBPACK_AMD_DEFINE_RESULT__;// TinyColor v1.4.1\n// https://github.com/bgrins/TinyColor\n// Brian Grinstead, MIT License\n\n(function(Math) {\n\nvar trimLeft = /^\\s+/,\n    trimRight = /\\s+$/,\n    tinyCounter = 0,\n    mathRound = Math.round,\n    mathMin = Math.min,\n    mathMax = Math.max,\n    mathRandom = Math.random;\n\nfunction tinycolor (color, opts) {\n\n    color = (color) ? color : '';\n    opts = opts || { };\n\n    // If input is already a tinycolor, return itself\n    if (color instanceof tinycolor) {\n       return color;\n    }\n    // If we are called as a function, call using new instead\n    if (!(this instanceof tinycolor)) {\n        return new tinycolor(color, opts);\n    }\n\n    var rgb = inputToRGB(color);\n    this._originalInput = color,\n    this._r = rgb.r,\n    this._g = rgb.g,\n    this._b = rgb.b,\n    this._a = rgb.a,\n    this._roundA = mathRound(100*this._a) / 100,\n    this._format = opts.format || rgb.format;\n    this._gradientType = opts.gradientType;\n\n    // Don't let the range of [0,255] come back in [0,1].\n    // Potentially lose a little bit of precision here, but will fix issues where\n    // .5 gets interpreted as half of the total, instead of half of 1\n    // If it was supposed to be 128, this was already taken care of by `inputToRgb`\n    if (this._r < 1) { this._r = mathRound(this._r); }\n    if (this._g < 1) { this._g = mathRound(this._g); }\n    if (this._b < 1) { this._b = mathRound(this._b); }\n\n    this._ok = rgb.ok;\n    this._tc_id = tinyCounter++;\n}\n\ntinycolor.prototype = {\n    isDark: function() {\n        return this.getBrightness() < 128;\n    },\n    isLight: function() {\n        return !this.isDark();\n    },\n    isValid: function() {\n        return this._ok;\n    },\n    getOriginalInput: function() {\n      return this._originalInput;\n    },\n    getFormat: function() {\n        return this._format;\n    },\n    getAlpha: function() {\n        return this._a;\n    },\n    getBrightness: function() {\n        //http://www.w3.org/TR/AERT#color-contrast\n        var rgb = this.toRgb();\n        return (rgb.r * 299 + rgb.g * 587 + rgb.b * 114) / 1000;\n    },\n    getLuminance: function() {\n        //http://www.w3.org/TR/2008/REC-WCAG20-20081211/#relativeluminancedef\n        var rgb = this.toRgb();\n        var RsRGB, GsRGB, BsRGB, R, G, B;\n        RsRGB = rgb.r/255;\n        GsRGB = rgb.g/255;\n        BsRGB = rgb.b/255;\n\n        if (RsRGB <= 0.03928) {R = RsRGB / 12.92;} else {R = Math.pow(((RsRGB + 0.055) / 1.055), 2.4);}\n        if (GsRGB <= 0.03928) {G = GsRGB / 12.92;} else {G = Math.pow(((GsRGB + 0.055) / 1.055), 2.4);}\n        if (BsRGB <= 0.03928) {B = BsRGB / 12.92;} else {B = Math.pow(((BsRGB + 0.055) / 1.055), 2.4);}\n        return (0.2126 * R) + (0.7152 * G) + (0.0722 * B);\n    },\n    setAlpha: function(value) {\n        this._a = boundAlpha(value);\n        this._roundA = mathRound(100*this._a) / 100;\n        return this;\n    },\n    toHsv: function() {\n        var hsv = rgbToHsv(this._r, this._g, this._b);\n        return { h: hsv.h * 360, s: hsv.s, v: hsv.v, a: this._a };\n    },\n    toHsvString: function() {\n        var hsv = rgbToHsv(this._r, this._g, this._b);\n        var h = mathRound(hsv.h * 360), s = mathRound(hsv.s * 100), v = mathRound(hsv.v * 100);\n        return (this._a == 1) ?\n          \"hsv(\"  + h + \", \" + s + \"%, \" + v + \"%)\" :\n          \"hsva(\" + h + \", \" + s + \"%, \" + v + \"%, \"+ this._roundA + \")\";\n    },\n    toHsl: function() {\n        var hsl = rgbToHsl(this._r, this._g, this._b);\n        return { h: hsl.h * 360, s: hsl.s, l: hsl.l, a: this._a };\n    },\n    toHslString: function() {\n        var hsl = rgbToHsl(this._r, this._g, this._b);\n        var h = mathRound(hsl.h * 360), s = mathRound(hsl.s * 100), l = mathRound(hsl.l * 100);\n        return (this._a == 1) ?\n          \"hsl(\"  + h + \", \" + s + \"%, \" + l + \"%)\" :\n          \"hsla(\" + h + \", \" + s + \"%, \" + l + \"%, \"+ this._roundA + \")\";\n    },\n    toHex: function(allow3Char) {\n        return rgbToHex(this._r, this._g, this._b, allow3Char);\n    },\n    toHexString: function(allow3Char) {\n        return '#' + this.toHex(allow3Char);\n    },\n    toHex8: function(allow4Char) {\n        return rgbaToHex(this._r, this._g, this._b, this._a, allow4Char);\n    },\n    toHex8String: function(allow4Char) {\n        return '#' + this.toHex8(allow4Char);\n    },\n    toRgb: function() {\n        return { r: mathRound(this._r), g: mathRound(this._g), b: mathRound(this._b), a: this._a };\n    },\n    toRgbString: function() {\n        return (this._a == 1) ?\n          \"rgb(\"  + mathRound(this._r) + \", \" + mathRound(this._g) + \", \" + mathRound(this._b) + \")\" :\n          \"rgba(\" + mathRound(this._r) + \", \" + mathRound(this._g) + \", \" + mathRound(this._b) + \", \" + this._roundA + \")\";\n    },\n    toPercentageRgb: function() {\n        return { r: mathRound(bound01(this._r, 255) * 100) + \"%\", g: mathRound(bound01(this._g, 255) * 100) + \"%\", b: mathRound(bound01(this._b, 255) * 100) + \"%\", a: this._a };\n    },\n    toPercentageRgbString: function() {\n        return (this._a == 1) ?\n          \"rgb(\"  + mathRound(bound01(this._r, 255) * 100) + \"%, \" + mathRound(bound01(this._g, 255) * 100) + \"%, \" + mathRound(bound01(this._b, 255) * 100) + \"%)\" :\n          \"rgba(\" + mathRound(bound01(this._r, 255) * 100) + \"%, \" + mathRound(bound01(this._g, 255) * 100) + \"%, \" + mathRound(bound01(this._b, 255) * 100) + \"%, \" + this._roundA + \")\";\n    },\n    toName: function() {\n        if (this._a === 0) {\n            return \"transparent\";\n        }\n\n        if (this._a < 1) {\n            return false;\n        }\n\n        return hexNames[rgbToHex(this._r, this._g, this._b, true)] || false;\n    },\n    toFilter: function(secondColor) {\n        var hex8String = '#' + rgbaToArgbHex(this._r, this._g, this._b, this._a);\n        var secondHex8String = hex8String;\n        var gradientType = this._gradientType ? \"GradientType = 1, \" : \"\";\n\n        if (secondColor) {\n            var s = tinycolor(secondColor);\n            secondHex8String = '#' + rgbaToArgbHex(s._r, s._g, s._b, s._a);\n        }\n\n        return \"progid:DXImageTransform.Microsoft.gradient(\"+gradientType+\"startColorstr=\"+hex8String+\",endColorstr=\"+secondHex8String+\")\";\n    },\n    toString: function(format) {\n        var formatSet = !!format;\n        format = format || this._format;\n\n        var formattedString = false;\n        var hasAlpha = this._a < 1 && this._a >= 0;\n        var needsAlphaFormat = !formatSet && hasAlpha && (format === \"hex\" || format === \"hex6\" || format === \"hex3\" || format === \"hex4\" || format === \"hex8\" || format === \"name\");\n\n        if (needsAlphaFormat) {\n            // Special case for \"transparent\", all other non-alpha formats\n            // will return rgba when there is transparency.\n            if (format === \"name\" && this._a === 0) {\n                return this.toName();\n            }\n            return this.toRgbString();\n        }\n        if (format === \"rgb\") {\n            formattedString = this.toRgbString();\n        }\n        if (format === \"prgb\") {\n            formattedString = this.toPercentageRgbString();\n        }\n        if (format === \"hex\" || format === \"hex6\") {\n            formattedString = this.toHexString();\n        }\n        if (format === \"hex3\") {\n            formattedString = this.toHexString(true);\n        }\n        if (format === \"hex4\") {\n            formattedString = this.toHex8String(true);\n        }\n        if (format === \"hex8\") {\n            formattedString = this.toHex8String();\n        }\n        if (format === \"name\") {\n            formattedString = this.toName();\n        }\n        if (format === \"hsl\") {\n            formattedString = this.toHslString();\n        }\n        if (format === \"hsv\") {\n            formattedString = this.toHsvString();\n        }\n\n        return formattedString || this.toHexString();\n    },\n    clone: function() {\n        return tinycolor(this.toString());\n    },\n\n    _applyModification: function(fn, args) {\n        var color = fn.apply(null, [this].concat([].slice.call(args)));\n        this._r = color._r;\n        this._g = color._g;\n        this._b = color._b;\n        this.setAlpha(color._a);\n        return this;\n    },\n    lighten: function() {\n        return this._applyModification(lighten, arguments);\n    },\n    brighten: function() {\n        return this._applyModification(brighten, arguments);\n    },\n    darken: function() {\n        return this._applyModification(darken, arguments);\n    },\n    desaturate: function() {\n        return this._applyModification(desaturate, arguments);\n    },\n    saturate: function() {\n        return this._applyModification(saturate, arguments);\n    },\n    greyscale: function() {\n        return this._applyModification(greyscale, arguments);\n    },\n    spin: function() {\n        return this._applyModification(spin, arguments);\n    },\n\n    _applyCombination: function(fn, args) {\n        return fn.apply(null, [this].concat([].slice.call(args)));\n    },\n    analogous: function() {\n        return this._applyCombination(analogous, arguments);\n    },\n    complement: function() {\n        return this._applyCombination(complement, arguments);\n    },\n    monochromatic: function() {\n        return this._applyCombination(monochromatic, arguments);\n    },\n    splitcomplement: function() {\n        return this._applyCombination(splitcomplement, arguments);\n    },\n    triad: function() {\n        return this._applyCombination(triad, arguments);\n    },\n    tetrad: function() {\n        return this._applyCombination(tetrad, arguments);\n    }\n};\n\n// If input is an object, force 1 into \"1.0\" to handle ratios properly\n// String input requires \"1.0\" as input, so 1 will be treated as 1\ntinycolor.fromRatio = function(color, opts) {\n    if (typeof color == \"object\") {\n        var newColor = {};\n        for (var i in color) {\n            if (color.hasOwnProperty(i)) {\n                if (i === \"a\") {\n                    newColor[i] = color[i];\n                }\n                else {\n                    newColor[i] = convertToPercentage(color[i]);\n                }\n            }\n        }\n        color = newColor;\n    }\n\n    return tinycolor(color, opts);\n};\n\n// Given a string or object, convert that input to RGB\n// Possible string inputs:\n//\n//     \"red\"\n//     \"#f00\" or \"f00\"\n//     \"#ff0000\" or \"ff0000\"\n//     \"#ff000000\" or \"ff000000\"\n//     \"rgb 255 0 0\" or \"rgb (255, 0, 0)\"\n//     \"rgb 1.0 0 0\" or \"rgb (1, 0, 0)\"\n//     \"rgba (255, 0, 0, 1)\" or \"rgba 255, 0, 0, 1\"\n//     \"rgba (1.0, 0, 0, 1)\" or \"rgba 1.0, 0, 0, 1\"\n//     \"hsl(0, 100%, 50%)\" or \"hsl 0 100% 50%\"\n//     \"hsla(0, 100%, 50%, 1)\" or \"hsla 0 100% 50%, 1\"\n//     \"hsv(0, 100%, 100%)\" or \"hsv 0 100% 100%\"\n//\nfunction inputToRGB(color) {\n\n    var rgb = { r: 0, g: 0, b: 0 };\n    var a = 1;\n    var s = null;\n    var v = null;\n    var l = null;\n    var ok = false;\n    var format = false;\n\n    if (typeof color == \"string\") {\n        color = stringInputToObject(color);\n    }\n\n    if (typeof color == \"object\") {\n        if (isValidCSSUnit(color.r) && isValidCSSUnit(color.g) && isValidCSSUnit(color.b)) {\n            rgb = rgbToRgb(color.r, color.g, color.b);\n            ok = true;\n            format = String(color.r).substr(-1) === \"%\" ? \"prgb\" : \"rgb\";\n        }\n        else if (isValidCSSUnit(color.h) && isValidCSSUnit(color.s) && isValidCSSUnit(color.v)) {\n            s = convertToPercentage(color.s);\n            v = convertToPercentage(color.v);\n            rgb = hsvToRgb(color.h, s, v);\n            ok = true;\n            format = \"hsv\";\n        }\n        else if (isValidCSSUnit(color.h) && isValidCSSUnit(color.s) && isValidCSSUnit(color.l)) {\n            s = convertToPercentage(color.s);\n            l = convertToPercentage(color.l);\n            rgb = hslToRgb(color.h, s, l);\n            ok = true;\n            format = \"hsl\";\n        }\n\n        if (color.hasOwnProperty(\"a\")) {\n            a = color.a;\n        }\n    }\n\n    a = boundAlpha(a);\n\n    return {\n        ok: ok,\n        format: color.format || format,\n        r: mathMin(255, mathMax(rgb.r, 0)),\n        g: mathMin(255, mathMax(rgb.g, 0)),\n        b: mathMin(255, mathMax(rgb.b, 0)),\n        a: a\n    };\n}\n\n\n// Conversion Functions\n// --------------------\n\n// `rgbToHsl`, `rgbToHsv`, `hslToRgb`, `hsvToRgb` modified from:\n// <http://mjijackson.com/2008/02/rgb-to-hsl-and-rgb-to-hsv-color-model-conversion-algorithms-in-javascript>\n\n// `rgbToRgb`\n// Handle bounds / percentage checking to conform to CSS color spec\n// <http://www.w3.org/TR/css3-color/>\n// *Assumes:* r, g, b in [0, 255] or [0, 1]\n// *Returns:* { r, g, b } in [0, 255]\nfunction rgbToRgb(r, g, b){\n    return {\n        r: bound01(r, 255) * 255,\n        g: bound01(g, 255) * 255,\n        b: bound01(b, 255) * 255\n    };\n}\n\n// `rgbToHsl`\n// Converts an RGB color value to HSL.\n// *Assumes:* r, g, and b are contained in [0, 255] or [0, 1]\n// *Returns:* { h, s, l } in [0,1]\nfunction rgbToHsl(r, g, b) {\n\n    r = bound01(r, 255);\n    g = bound01(g, 255);\n    b = bound01(b, 255);\n\n    var max = mathMax(r, g, b), min = mathMin(r, g, b);\n    var h, s, l = (max + min) / 2;\n\n    if(max == min) {\n        h = s = 0; // achromatic\n    }\n    else {\n        var d = max - min;\n        s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n        switch(max) {\n            case r: h = (g - b) / d + (g < b ? 6 : 0); break;\n            case g: h = (b - r) / d + 2; break;\n            case b: h = (r - g) / d + 4; break;\n        }\n\n        h /= 6;\n    }\n\n    return { h: h, s: s, l: l };\n}\n\n// `hslToRgb`\n// Converts an HSL color value to RGB.\n// *Assumes:* h is contained in [0, 1] or [0, 360] and s and l are contained [0, 1] or [0, 100]\n// *Returns:* { r, g, b } in the set [0, 255]\nfunction hslToRgb(h, s, l) {\n    var r, g, b;\n\n    h = bound01(h, 360);\n    s = bound01(s, 100);\n    l = bound01(l, 100);\n\n    function hue2rgb(p, q, t) {\n        if(t < 0) t += 1;\n        if(t > 1) t -= 1;\n        if(t < 1/6) return p + (q - p) * 6 * t;\n        if(t < 1/2) return q;\n        if(t < 2/3) return p + (q - p) * (2/3 - t) * 6;\n        return p;\n    }\n\n    if(s === 0) {\n        r = g = b = l; // achromatic\n    }\n    else {\n        var q = l < 0.5 ? l * (1 + s) : l + s - l * s;\n        var p = 2 * l - q;\n        r = hue2rgb(p, q, h + 1/3);\n        g = hue2rgb(p, q, h);\n        b = hue2rgb(p, q, h - 1/3);\n    }\n\n    return { r: r * 255, g: g * 255, b: b * 255 };\n}\n\n// `rgbToHsv`\n// Converts an RGB color value to HSV\n// *Assumes:* r, g, and b are contained in the set [0, 255] or [0, 1]\n// *Returns:* { h, s, v } in [0,1]\nfunction rgbToHsv(r, g, b) {\n\n    r = bound01(r, 255);\n    g = bound01(g, 255);\n    b = bound01(b, 255);\n\n    var max = mathMax(r, g, b), min = mathMin(r, g, b);\n    var h, s, v = max;\n\n    var d = max - min;\n    s = max === 0 ? 0 : d / max;\n\n    if(max == min) {\n        h = 0; // achromatic\n    }\n    else {\n        switch(max) {\n            case r: h = (g - b) / d + (g < b ? 6 : 0); break;\n            case g: h = (b - r) / d + 2; break;\n            case b: h = (r - g) / d + 4; break;\n        }\n        h /= 6;\n    }\n    return { h: h, s: s, v: v };\n}\n\n// `hsvToRgb`\n// Converts an HSV color value to RGB.\n// *Assumes:* h is contained in [0, 1] or [0, 360] and s and v are contained in [0, 1] or [0, 100]\n// *Returns:* { r, g, b } in the set [0, 255]\n function hsvToRgb(h, s, v) {\n\n    h = bound01(h, 360) * 6;\n    s = bound01(s, 100);\n    v = bound01(v, 100);\n\n    var i = Math.floor(h),\n        f = h - i,\n        p = v * (1 - s),\n        q = v * (1 - f * s),\n        t = v * (1 - (1 - f) * s),\n        mod = i % 6,\n        r = [v, q, p, p, t, v][mod],\n        g = [t, v, v, q, p, p][mod],\n        b = [p, p, t, v, v, q][mod];\n\n    return { r: r * 255, g: g * 255, b: b * 255 };\n}\n\n// `rgbToHex`\n// Converts an RGB color to hex\n// Assumes r, g, and b are contained in the set [0, 255]\n// Returns a 3 or 6 character hex\nfunction rgbToHex(r, g, b, allow3Char) {\n\n    var hex = [\n        pad2(mathRound(r).toString(16)),\n        pad2(mathRound(g).toString(16)),\n        pad2(mathRound(b).toString(16))\n    ];\n\n    // Return a 3 character hex if possible\n    if (allow3Char && hex[0].charAt(0) == hex[0].charAt(1) && hex[1].charAt(0) == hex[1].charAt(1) && hex[2].charAt(0) == hex[2].charAt(1)) {\n        return hex[0].charAt(0) + hex[1].charAt(0) + hex[2].charAt(0);\n    }\n\n    return hex.join(\"\");\n}\n\n// `rgbaToHex`\n// Converts an RGBA color plus alpha transparency to hex\n// Assumes r, g, b are contained in the set [0, 255] and\n// a in [0, 1]. Returns a 4 or 8 character rgba hex\nfunction rgbaToHex(r, g, b, a, allow4Char) {\n\n    var hex = [\n        pad2(mathRound(r).toString(16)),\n        pad2(mathRound(g).toString(16)),\n        pad2(mathRound(b).toString(16)),\n        pad2(convertDecimalToHex(a))\n    ];\n\n    // Return a 4 character hex if possible\n    if (allow4Char && hex[0].charAt(0) == hex[0].charAt(1) && hex[1].charAt(0) == hex[1].charAt(1) && hex[2].charAt(0) == hex[2].charAt(1) && hex[3].charAt(0) == hex[3].charAt(1)) {\n        return hex[0].charAt(0) + hex[1].charAt(0) + hex[2].charAt(0) + hex[3].charAt(0);\n    }\n\n    return hex.join(\"\");\n}\n\n// `rgbaToArgbHex`\n// Converts an RGBA color to an ARGB Hex8 string\n// Rarely used, but required for \"toFilter()\"\nfunction rgbaToArgbHex(r, g, b, a) {\n\n    var hex = [\n        pad2(convertDecimalToHex(a)),\n        pad2(mathRound(r).toString(16)),\n        pad2(mathRound(g).toString(16)),\n        pad2(mathRound(b).toString(16))\n    ];\n\n    return hex.join(\"\");\n}\n\n// `equals`\n// Can be called with any tinycolor input\ntinycolor.equals = function (color1, color2) {\n    if (!color1 || !color2) { return false; }\n    return tinycolor(color1).toRgbString() == tinycolor(color2).toRgbString();\n};\n\ntinycolor.random = function() {\n    return tinycolor.fromRatio({\n        r: mathRandom(),\n        g: mathRandom(),\n        b: mathRandom()\n    });\n};\n\n\n// Modification Functions\n// ----------------------\n// Thanks to less.js for some of the basics here\n// <https://github.com/cloudhead/less.js/blob/master/lib/less/functions.js>\n\nfunction desaturate(color, amount) {\n    amount = (amount === 0) ? 0 : (amount || 10);\n    var hsl = tinycolor(color).toHsl();\n    hsl.s -= amount / 100;\n    hsl.s = clamp01(hsl.s);\n    return tinycolor(hsl);\n}\n\nfunction saturate(color, amount) {\n    amount = (amount === 0) ? 0 : (amount || 10);\n    var hsl = tinycolor(color).toHsl();\n    hsl.s += amount / 100;\n    hsl.s = clamp01(hsl.s);\n    return tinycolor(hsl);\n}\n\nfunction greyscale(color) {\n    return tinycolor(color).desaturate(100);\n}\n\nfunction lighten (color, amount) {\n    amount = (amount === 0) ? 0 : (amount || 10);\n    var hsl = tinycolor(color).toHsl();\n    hsl.l += amount / 100;\n    hsl.l = clamp01(hsl.l);\n    return tinycolor(hsl);\n}\n\nfunction brighten(color, amount) {\n    amount = (amount === 0) ? 0 : (amount || 10);\n    var rgb = tinycolor(color).toRgb();\n    rgb.r = mathMax(0, mathMin(255, rgb.r - mathRound(255 * - (amount / 100))));\n    rgb.g = mathMax(0, mathMin(255, rgb.g - mathRound(255 * - (amount / 100))));\n    rgb.b = mathMax(0, mathMin(255, rgb.b - mathRound(255 * - (amount / 100))));\n    return tinycolor(rgb);\n}\n\nfunction darken (color, amount) {\n    amount = (amount === 0) ? 0 : (amount || 10);\n    var hsl = tinycolor(color).toHsl();\n    hsl.l -= amount / 100;\n    hsl.l = clamp01(hsl.l);\n    return tinycolor(hsl);\n}\n\n// Spin takes a positive or negative amount within [-360, 360] indicating the change of hue.\n// Values outside of this range will be wrapped into this range.\nfunction spin(color, amount) {\n    var hsl = tinycolor(color).toHsl();\n    var hue = (hsl.h + amount) % 360;\n    hsl.h = hue < 0 ? 360 + hue : hue;\n    return tinycolor(hsl);\n}\n\n// Combination Functions\n// ---------------------\n// Thanks to jQuery xColor for some of the ideas behind these\n// <https://github.com/infusion/jQuery-xcolor/blob/master/jquery.xcolor.js>\n\nfunction complement(color) {\n    var hsl = tinycolor(color).toHsl();\n    hsl.h = (hsl.h + 180) % 360;\n    return tinycolor(hsl);\n}\n\nfunction triad(color) {\n    var hsl = tinycolor(color).toHsl();\n    var h = hsl.h;\n    return [\n        tinycolor(color),\n        tinycolor({ h: (h + 120) % 360, s: hsl.s, l: hsl.l }),\n        tinycolor({ h: (h + 240) % 360, s: hsl.s, l: hsl.l })\n    ];\n}\n\nfunction tetrad(color) {\n    var hsl = tinycolor(color).toHsl();\n    var h = hsl.h;\n    return [\n        tinycolor(color),\n        tinycolor({ h: (h + 90) % 360, s: hsl.s, l: hsl.l }),\n        tinycolor({ h: (h + 180) % 360, s: hsl.s, l: hsl.l }),\n        tinycolor({ h: (h + 270) % 360, s: hsl.s, l: hsl.l })\n    ];\n}\n\nfunction splitcomplement(color) {\n    var hsl = tinycolor(color).toHsl();\n    var h = hsl.h;\n    return [\n        tinycolor(color),\n        tinycolor({ h: (h + 72) % 360, s: hsl.s, l: hsl.l}),\n        tinycolor({ h: (h + 216) % 360, s: hsl.s, l: hsl.l})\n    ];\n}\n\nfunction analogous(color, results, slices) {\n    results = results || 6;\n    slices = slices || 30;\n\n    var hsl = tinycolor(color).toHsl();\n    var part = 360 / slices;\n    var ret = [tinycolor(color)];\n\n    for (hsl.h = ((hsl.h - (part * results >> 1)) + 720) % 360; --results; ) {\n        hsl.h = (hsl.h + part) % 360;\n        ret.push(tinycolor(hsl));\n    }\n    return ret;\n}\n\nfunction monochromatic(color, results) {\n    results = results || 6;\n    var hsv = tinycolor(color).toHsv();\n    var h = hsv.h, s = hsv.s, v = hsv.v;\n    var ret = [];\n    var modification = 1 / results;\n\n    while (results--) {\n        ret.push(tinycolor({ h: h, s: s, v: v}));\n        v = (v + modification) % 1;\n    }\n\n    return ret;\n}\n\n// Utility Functions\n// ---------------------\n\ntinycolor.mix = function(color1, color2, amount) {\n    amount = (amount === 0) ? 0 : (amount || 50);\n\n    var rgb1 = tinycolor(color1).toRgb();\n    var rgb2 = tinycolor(color2).toRgb();\n\n    var p = amount / 100;\n\n    var rgba = {\n        r: ((rgb2.r - rgb1.r) * p) + rgb1.r,\n        g: ((rgb2.g - rgb1.g) * p) + rgb1.g,\n        b: ((rgb2.b - rgb1.b) * p) + rgb1.b,\n        a: ((rgb2.a - rgb1.a) * p) + rgb1.a\n    };\n\n    return tinycolor(rgba);\n};\n\n\n// Readability Functions\n// ---------------------\n// <http://www.w3.org/TR/2008/REC-WCAG20-20081211/#contrast-ratiodef (WCAG Version 2)\n\n// `contrast`\n// Analyze the 2 colors and returns the color contrast defined by (WCAG Version 2)\ntinycolor.readability = function(color1, color2) {\n    var c1 = tinycolor(color1);\n    var c2 = tinycolor(color2);\n    return (Math.max(c1.getLuminance(),c2.getLuminance())+0.05) / (Math.min(c1.getLuminance(),c2.getLuminance())+0.05);\n};\n\n// `isReadable`\n// Ensure that foreground and background color combinations meet WCAG2 guidelines.\n// The third argument is an optional Object.\n//      the 'level' property states 'AA' or 'AAA' - if missing or invalid, it defaults to 'AA';\n//      the 'size' property states 'large' or 'small' - if missing or invalid, it defaults to 'small'.\n// If the entire object is absent, isReadable defaults to {level:\"AA\",size:\"small\"}.\n\n// *Example*\n//    tinycolor.isReadable(\"#000\", \"#111\") => false\n//    tinycolor.isReadable(\"#000\", \"#111\",{level:\"AA\",size:\"large\"}) => false\ntinycolor.isReadable = function(color1, color2, wcag2) {\n    var readability = tinycolor.readability(color1, color2);\n    var wcag2Parms, out;\n\n    out = false;\n\n    wcag2Parms = validateWCAG2Parms(wcag2);\n    switch (wcag2Parms.level + wcag2Parms.size) {\n        case \"AAsmall\":\n        case \"AAAlarge\":\n            out = readability >= 4.5;\n            break;\n        case \"AAlarge\":\n            out = readability >= 3;\n            break;\n        case \"AAAsmall\":\n            out = readability >= 7;\n            break;\n    }\n    return out;\n\n};\n\n// `mostReadable`\n// Given a base color and a list of possible foreground or background\n// colors for that base, returns the most readable color.\n// Optionally returns Black or White if the most readable color is unreadable.\n// *Example*\n//    tinycolor.mostReadable(tinycolor.mostReadable(\"#123\", [\"#124\", \"#125\"],{includeFallbackColors:false}).toHexString(); // \"#112255\"\n//    tinycolor.mostReadable(tinycolor.mostReadable(\"#123\", [\"#124\", \"#125\"],{includeFallbackColors:true}).toHexString();  // \"#ffffff\"\n//    tinycolor.mostReadable(\"#a8015a\", [\"#faf3f3\"],{includeFallbackColors:true,level:\"AAA\",size:\"large\"}).toHexString(); // \"#faf3f3\"\n//    tinycolor.mostReadable(\"#a8015a\", [\"#faf3f3\"],{includeFallbackColors:true,level:\"AAA\",size:\"small\"}).toHexString(); // \"#ffffff\"\ntinycolor.mostReadable = function(baseColor, colorList, args) {\n    var bestColor = null;\n    var bestScore = 0;\n    var readability;\n    var includeFallbackColors, level, size ;\n    args = args || {};\n    includeFallbackColors = args.includeFallbackColors ;\n    level = args.level;\n    size = args.size;\n\n    for (var i= 0; i < colorList.length ; i++) {\n        readability = tinycolor.readability(baseColor, colorList[i]);\n        if (readability > bestScore) {\n            bestScore = readability;\n            bestColor = tinycolor(colorList[i]);\n        }\n    }\n\n    if (tinycolor.isReadable(baseColor, bestColor, {\"level\":level,\"size\":size}) || !includeFallbackColors) {\n        return bestColor;\n    }\n    else {\n        args.includeFallbackColors=false;\n        return tinycolor.mostReadable(baseColor,[\"#fff\", \"#000\"],args);\n    }\n};\n\n\n// Big List of Colors\n// ------------------\n// <http://www.w3.org/TR/css3-color/#svg-color>\nvar names = tinycolor.names = {\n    aliceblue: \"f0f8ff\",\n    antiquewhite: \"faebd7\",\n    aqua: \"0ff\",\n    aquamarine: \"7fffd4\",\n    azure: \"f0ffff\",\n    beige: \"f5f5dc\",\n    bisque: \"ffe4c4\",\n    black: \"000\",\n    blanchedalmond: \"ffebcd\",\n    blue: \"00f\",\n    blueviolet: \"8a2be2\",\n    brown: \"a52a2a\",\n    burlywood: \"deb887\",\n    burntsienna: \"ea7e5d\",\n    cadetblue: \"5f9ea0\",\n    chartreuse: \"7fff00\",\n    chocolate: \"d2691e\",\n    coral: \"ff7f50\",\n    cornflowerblue: \"6495ed\",\n    cornsilk: \"fff8dc\",\n    crimson: \"dc143c\",\n    cyan: \"0ff\",\n    darkblue: \"00008b\",\n    darkcyan: \"008b8b\",\n    darkgoldenrod: \"b8860b\",\n    darkgray: \"a9a9a9\",\n    darkgreen: \"006400\",\n    darkgrey: \"a9a9a9\",\n    darkkhaki: \"bdb76b\",\n    darkmagenta: \"8b008b\",\n    darkolivegreen: \"556b2f\",\n    darkorange: \"ff8c00\",\n    darkorchid: \"9932cc\",\n    darkred: \"8b0000\",\n    darksalmon: \"e9967a\",\n    darkseagreen: \"8fbc8f\",\n    darkslateblue: \"483d8b\",\n    darkslategray: \"2f4f4f\",\n    darkslategrey: \"2f4f4f\",\n    darkturquoise: \"00ced1\",\n    darkviolet: \"9400d3\",\n    deeppink: \"ff1493\",\n    deepskyblue: \"00bfff\",\n    dimgray: \"696969\",\n    dimgrey: \"696969\",\n    dodgerblue: \"1e90ff\",\n    firebrick: \"b22222\",\n    floralwhite: \"fffaf0\",\n    forestgreen: \"228b22\",\n    fuchsia: \"f0f\",\n    gainsboro: \"dcdcdc\",\n    ghostwhite: \"f8f8ff\",\n    gold: \"ffd700\",\n    goldenrod: \"daa520\",\n    gray: \"808080\",\n    green: \"008000\",\n    greenyellow: \"adff2f\",\n    grey: \"808080\",\n    honeydew: \"f0fff0\",\n    hotpink: \"ff69b4\",\n    indianred: \"cd5c5c\",\n    indigo: \"4b0082\",\n    ivory: \"fffff0\",\n    khaki: \"f0e68c\",\n    lavender: \"e6e6fa\",\n    lavenderblush: \"fff0f5\",\n    lawngreen: \"7cfc00\",\n    lemonchiffon: \"fffacd\",\n    lightblue: \"add8e6\",\n    lightcoral: \"f08080\",\n    lightcyan: \"e0ffff\",\n    lightgoldenrodyellow: \"fafad2\",\n    lightgray: \"d3d3d3\",\n    lightgreen: \"90ee90\",\n    lightgrey: \"d3d3d3\",\n    lightpink: \"ffb6c1\",\n    lightsalmon: \"ffa07a\",\n    lightseagreen: \"20b2aa\",\n    lightskyblue: \"87cefa\",\n    lightslategray: \"789\",\n    lightslategrey: \"789\",\n    lightsteelblue: \"b0c4de\",\n    lightyellow: \"ffffe0\",\n    lime: \"0f0\",\n    limegreen: \"32cd32\",\n    linen: \"faf0e6\",\n    magenta: \"f0f\",\n    maroon: \"800000\",\n    mediumaquamarine: \"66cdaa\",\n    mediumblue: \"0000cd\",\n    mediumorchid: \"ba55d3\",\n    mediumpurple: \"9370db\",\n    mediumseagreen: \"3cb371\",\n    mediumslateblue: \"7b68ee\",\n    mediumspringgreen: \"00fa9a\",\n    mediumturquoise: \"48d1cc\",\n    mediumvioletred: \"c71585\",\n    midnightblue: \"191970\",\n    mintcream: \"f5fffa\",\n    mistyrose: \"ffe4e1\",\n    moccasin: \"ffe4b5\",\n    navajowhite: \"ffdead\",\n    navy: \"000080\",\n    oldlace: \"fdf5e6\",\n    olive: \"808000\",\n    olivedrab: \"6b8e23\",\n    orange: \"ffa500\",\n    orangered: \"ff4500\",\n    orchid: \"da70d6\",\n    palegoldenrod: \"eee8aa\",\n    palegreen: \"98fb98\",\n    paleturquoise: \"afeeee\",\n    palevioletred: \"db7093\",\n    papayawhip: \"ffefd5\",\n    peachpuff: \"ffdab9\",\n    peru: \"cd853f\",\n    pink: \"ffc0cb\",\n    plum: \"dda0dd\",\n    powderblue: \"b0e0e6\",\n    purple: \"800080\",\n    rebeccapurple: \"663399\",\n    red: \"f00\",\n    rosybrown: \"bc8f8f\",\n    royalblue: \"4169e1\",\n    saddlebrown: \"8b4513\",\n    salmon: \"fa8072\",\n    sandybrown: \"f4a460\",\n    seagreen: \"2e8b57\",\n    seashell: \"fff5ee\",\n    sienna: \"a0522d\",\n    silver: \"c0c0c0\",\n    skyblue: \"87ceeb\",\n    slateblue: \"6a5acd\",\n    slategray: \"708090\",\n    slategrey: \"708090\",\n    snow: \"fffafa\",\n    springgreen: \"00ff7f\",\n    steelblue: \"4682b4\",\n    tan: \"d2b48c\",\n    teal: \"008080\",\n    thistle: \"d8bfd8\",\n    tomato: \"ff6347\",\n    turquoise: \"40e0d0\",\n    violet: \"ee82ee\",\n    wheat: \"f5deb3\",\n    white: \"fff\",\n    whitesmoke: \"f5f5f5\",\n    yellow: \"ff0\",\n    yellowgreen: \"9acd32\"\n};\n\n// Make it easy to access colors via `hexNames[hex]`\nvar hexNames = tinycolor.hexNames = flip(names);\n\n\n// Utilities\n// ---------\n\n// `{ 'name1': 'val1' }` becomes `{ 'val1': 'name1' }`\nfunction flip(o) {\n    var flipped = { };\n    for (var i in o) {\n        if (o.hasOwnProperty(i)) {\n            flipped[o[i]] = i;\n        }\n    }\n    return flipped;\n}\n\n// Return a valid alpha value [0,1] with all invalid values being set to 1\nfunction boundAlpha(a) {\n    a = parseFloat(a);\n\n    if (isNaN(a) || a < 0 || a > 1) {\n        a = 1;\n    }\n\n    return a;\n}\n\n// Take input from [0, n] and return it as [0, 1]\nfunction bound01(n, max) {\n    if (isOnePointZero(n)) { n = \"100%\"; }\n\n    var processPercent = isPercentage(n);\n    n = mathMin(max, mathMax(0, parseFloat(n)));\n\n    // Automatically convert percentage into number\n    if (processPercent) {\n        n = parseInt(n * max, 10) / 100;\n    }\n\n    // Handle floating point rounding errors\n    if ((Math.abs(n - max) < 0.000001)) {\n        return 1;\n    }\n\n    // Convert into [0, 1] range if it isn't already\n    return (n % max) / parseFloat(max);\n}\n\n// Force a number between 0 and 1\nfunction clamp01(val) {\n    return mathMin(1, mathMax(0, val));\n}\n\n// Parse a base-16 hex value into a base-10 integer\nfunction parseIntFromHex(val) {\n    return parseInt(val, 16);\n}\n\n// Need to handle 1.0 as 100%, since once it is a number, there is no difference between it and 1\n// <http://stackoverflow.com/questions/7422072/javascript-how-to-detect-number-as-a-decimal-including-1-0>\nfunction isOnePointZero(n) {\n    return typeof n == \"string\" && n.indexOf('.') != -1 && parseFloat(n) === 1;\n}\n\n// Check to see if string passed in is a percentage\nfunction isPercentage(n) {\n    return typeof n === \"string\" && n.indexOf('%') != -1;\n}\n\n// Force a hex value to have 2 characters\nfunction pad2(c) {\n    return c.length == 1 ? '0' + c : '' + c;\n}\n\n// Replace a decimal with it's percentage value\nfunction convertToPercentage(n) {\n    if (n <= 1) {\n        n = (n * 100) + \"%\";\n    }\n\n    return n;\n}\n\n// Converts a decimal to a hex value\nfunction convertDecimalToHex(d) {\n    return Math.round(parseFloat(d) * 255).toString(16);\n}\n// Converts a hex value to a decimal\nfunction convertHexToDecimal(h) {\n    return (parseIntFromHex(h) / 255);\n}\n\nvar matchers = (function() {\n\n    // <http://www.w3.org/TR/css3-values/#integers>\n    var CSS_INTEGER = \"[-\\\\+]?\\\\d+%?\";\n\n    // <http://www.w3.org/TR/css3-values/#number-value>\n    var CSS_NUMBER = \"[-\\\\+]?\\\\d*\\\\.\\\\d+%?\";\n\n    // Allow positive/negative integer/number.  Don't capture the either/or, just the entire outcome.\n    var CSS_UNIT = \"(?:\" + CSS_NUMBER + \")|(?:\" + CSS_INTEGER + \")\";\n\n    // Actual matching.\n    // Parentheses and commas are optional, but not required.\n    // Whitespace can take the place of commas or opening paren\n    var PERMISSIVE_MATCH3 = \"[\\\\s|\\\\(]+(\" + CSS_UNIT + \")[,|\\\\s]+(\" + CSS_UNIT + \")[,|\\\\s]+(\" + CSS_UNIT + \")\\\\s*\\\\)?\";\n    var PERMISSIVE_MATCH4 = \"[\\\\s|\\\\(]+(\" + CSS_UNIT + \")[,|\\\\s]+(\" + CSS_UNIT + \")[,|\\\\s]+(\" + CSS_UNIT + \")[,|\\\\s]+(\" + CSS_UNIT + \")\\\\s*\\\\)?\";\n\n    return {\n        CSS_UNIT: new RegExp(CSS_UNIT),\n        rgb: new RegExp(\"rgb\" + PERMISSIVE_MATCH3),\n        rgba: new RegExp(\"rgba\" + PERMISSIVE_MATCH4),\n        hsl: new RegExp(\"hsl\" + PERMISSIVE_MATCH3),\n        hsla: new RegExp(\"hsla\" + PERMISSIVE_MATCH4),\n        hsv: new RegExp(\"hsv\" + PERMISSIVE_MATCH3),\n        hsva: new RegExp(\"hsva\" + PERMISSIVE_MATCH4),\n        hex3: /^#?([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})$/,\n        hex6: /^#?([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})$/,\n        hex4: /^#?([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})$/,\n        hex8: /^#?([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})$/\n    };\n})();\n\n// `isValidCSSUnit`\n// Take in a single string / number and check to see if it looks like a CSS unit\n// (see `matchers` above for definition).\nfunction isValidCSSUnit(color) {\n    return !!matchers.CSS_UNIT.exec(color);\n}\n\n// `stringInputToObject`\n// Permissive string parsing.  Take in a number of formats, and output an object\n// based on detected format.  Returns `{ r, g, b }` or `{ h, s, l }` or `{ h, s, v}`\nfunction stringInputToObject(color) {\n\n    color = color.replace(trimLeft,'').replace(trimRight, '').toLowerCase();\n    var named = false;\n    if (names[color]) {\n        color = names[color];\n        named = true;\n    }\n    else if (color == 'transparent') {\n        return { r: 0, g: 0, b: 0, a: 0, format: \"name\" };\n    }\n\n    // Try to match string input using regular expressions.\n    // Keep most of the number bounding out of this function - don't worry about [0,1] or [0,100] or [0,360]\n    // Just return an object and let the conversion functions handle that.\n    // This way the result will be the same whether the tinycolor is initialized with string or object.\n    var match;\n    if ((match = matchers.rgb.exec(color))) {\n        return { r: match[1], g: match[2], b: match[3] };\n    }\n    if ((match = matchers.rgba.exec(color))) {\n        return { r: match[1], g: match[2], b: match[3], a: match[4] };\n    }\n    if ((match = matchers.hsl.exec(color))) {\n        return { h: match[1], s: match[2], l: match[3] };\n    }\n    if ((match = matchers.hsla.exec(color))) {\n        return { h: match[1], s: match[2], l: match[3], a: match[4] };\n    }\n    if ((match = matchers.hsv.exec(color))) {\n        return { h: match[1], s: match[2], v: match[3] };\n    }\n    if ((match = matchers.hsva.exec(color))) {\n        return { h: match[1], s: match[2], v: match[3], a: match[4] };\n    }\n    if ((match = matchers.hex8.exec(color))) {\n        return {\n            r: parseIntFromHex(match[1]),\n            g: parseIntFromHex(match[2]),\n            b: parseIntFromHex(match[3]),\n            a: convertHexToDecimal(match[4]),\n            format: named ? \"name\" : \"hex8\"\n        };\n    }\n    if ((match = matchers.hex6.exec(color))) {\n        return {\n            r: parseIntFromHex(match[1]),\n            g: parseIntFromHex(match[2]),\n            b: parseIntFromHex(match[3]),\n            format: named ? \"name\" : \"hex\"\n        };\n    }\n    if ((match = matchers.hex4.exec(color))) {\n        return {\n            r: parseIntFromHex(match[1] + '' + match[1]),\n            g: parseIntFromHex(match[2] + '' + match[2]),\n            b: parseIntFromHex(match[3] + '' + match[3]),\n            a: convertHexToDecimal(match[4] + '' + match[4]),\n            format: named ? \"name\" : \"hex8\"\n        };\n    }\n    if ((match = matchers.hex3.exec(color))) {\n        return {\n            r: parseIntFromHex(match[1] + '' + match[1]),\n            g: parseIntFromHex(match[2] + '' + match[2]),\n            b: parseIntFromHex(match[3] + '' + match[3]),\n            format: named ? \"name\" : \"hex\"\n        };\n    }\n\n    return false;\n}\n\nfunction validateWCAG2Parms(parms) {\n    // return valid WCAG2 parms for isReadable.\n    // If input parms are invalid, return {\"level\":\"AA\", \"size\":\"small\"}\n    var level, size;\n    parms = parms || {\"level\":\"AA\", \"size\":\"small\"};\n    level = (parms.level || \"AA\").toUpperCase();\n    size = (parms.size || \"small\").toLowerCase();\n    if (level !== \"AA\" && level !== \"AAA\") {\n        level = \"AA\";\n    }\n    if (size !== \"small\" && size !== \"large\") {\n        size = \"small\";\n    }\n    return {\"level\":level, \"size\":size};\n}\n\n// Node: Export function\nif (typeof module !== \"undefined\" && module.exports) {\n    module.exports = tinycolor;\n}\n// AMD/requirejs: Define the module\nelse if (true) {\n    !(__WEBPACK_AMD_DEFINE_RESULT__ = (function () {return tinycolor;}).call(exports, __webpack_require__, exports, module),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n}\n// Browser: Expose to window\nelse {\n    window.tinycolor = tinycolor;\n}\n\n})(Math);\n\n\n/***/ }),\n/* 7 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * @module\n */\n\n/**\n * Colorpicker default options\n */\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = {\n  /**\n   * If true, loads the Debugger extension automatically into the current instance\n   * @type {boolean}\n   * @default false\n   */\n  debug: false,\n  /**\n   * Forces a color, ignoring the one from the elements value or data-color attribute.\n   *\n   * @type {(String|Color|boolean)}\n   * @default false\n   */\n  color: false,\n  /**\n   * Forces an specific color format. If false, it will be automatically detected the first time,\n   * but if null it will be always recalculated.\n   *\n   * Note that the ending 'a' of the format meaning \"alpha\" has currently no effect, meaning that rgb is the same as\n   * rgba excepting if the alpha channel is disabled (see useAlpha).\n   *\n   * @type {('rgb'|'rgba'|'prgb'|'prgba'|'hex'|'hex3'|'hex6'|'hex8'|'hsl'|'hsla'|'hsv'|'hsva'|'name'|boolean)}\n   * @default false\n   */\n  format: false,\n  /**\n   * Horizontal mode layout.\n   *\n   * If true, the hue and alpha channel bars will be rendered horizontally, above the saturation selector.\n   *\n   * @type {boolean}\n   * @default false\n   */\n  horizontal: false,\n  /**\n   * Forces to show the colorpicker as an inline element\n   *\n   * @type {boolean}\n   * @default false\n   */\n  inline: false,\n  /**\n   * Children input CSS selector\n   *\n   * @type {String}\n   * @default 'input'\n   */\n  input: 'input',\n  /**\n   * Colorpicker container CSS selector. If given, the colorpicker will be placed inside this container.\n   * If true, the colorpicker element itself will be used as the container.\n   *\n   * @type {String|boolean}\n   * @default false\n   */\n  container: false, // container selector\n  /**\n   * Children color component CSS selector.\n   * If it exists, the child <i> element background will be changed on color change.\n   *\n   * @type {String|boolean}\n   * @default '.add-on, .input-group-addon'\n   */\n  component: '.add-on, .input-group-addon',\n  /**\n   * Fallback color to use when the given color is invalid.\n   * If false, the latest valid color will be used as a fallback.\n   *\n   * @type {String|Color|boolean}\n   * @default false\n   */\n  fallbackColor: false,\n  /**\n   * If enabled, the input content will be replaced always with a valid color,\n   * if not enabled the invalid color will be left in the input, but valid in the internal color object.\n   *\n   * @type {boolean}\n   * @default false\n   */\n  autoInputFallback: false,\n  /**\n   * If true a hash will be prepended to hexadecimal colors.\n   * If false, the hash will be removed.\n   * This only affects the input values.\n   *\n   * @type {boolean}\n   * @default false\n   */\n  useHashPrefix: true,\n  /**\n   * If true, the alpha channel bar will be displayed no matter what.\n   *\n   * If false, it will be always hidden and alpha channel will be disabled also programmatically, meaning that\n   * the selected or typed color will be always opaque.\n   *\n   * If null, the alpha channel will be automatically disabled/enabled depending if the initial color format supports\n   * alpha or not.\n   *\n   * @type {boolean}\n   * @default true\n   */\n  useAlpha: true,\n  /**\n   * This only applies when the color format is hexadecimal.\n   * If true, the alpha channel will be allowed for hexadecimal formatted colors, making them having 4 or 8 chars\n   * (RGBA or RRGGBBAA). This format is not yet supported in all modern browsers, so it is disabled by default.\n   * If false, rgba will be used whenever there is an alpha change different than 1 and the color format is\n   * automatic.\n   *\n   * @type {boolean}\n   * @default true\n   */\n  enableHex8: false,\n  /**\n   * Vertical sliders configuration\n   * @type {Object}\n   */\n  sliders: {\n    saturation: {\n      maxLeft: 100,\n      maxTop: 100,\n      callLeft: 'setSaturationRatio',\n      callTop: 'setBrightnessRatio'\n    },\n    hue: {\n      maxLeft: 0,\n      maxTop: 100,\n      callLeft: false,\n      callTop: 'setHueRatio'\n    },\n    alpha: {\n      maxLeft: 0,\n      maxTop: 100,\n      callLeft: false,\n      callTop: 'setAlphaRatio'\n    }\n  },\n  /**\n   * Horizontal sliders configuration\n   * @type {Object}\n   */\n  slidersHorz: {\n    saturation: {\n      maxLeft: 100,\n      maxTop: 100,\n      callLeft: 'setSaturationRatio',\n      callTop: 'setBrightnessRatio'\n    },\n    hue: {\n      maxLeft: 100,\n      maxTop: 0,\n      callLeft: 'setHueRatio',\n      callTop: false\n    },\n    alpha: {\n      maxLeft: 100,\n      maxTop: 0,\n      callLeft: 'setAlphaRatio',\n      callTop: false\n    }\n  },\n  /**\n   * Colorpicker popup alignment.\n   * For now only right is supported.\n   *\n   * @type {('right')}\n   * @default 'right'\n   */ // TODO: add 'left' and 'auto' support.\n  align: 'right',\n  /**\n   * Custom class to be added to the colorpicker element\n   *\n   * @type {String}\n   */\n  customClass: null,\n  /**\n   * Colorpicker widget template\n   * @type {String}\n   * @example\n   * <!-- This is the default template: -->\n   * <div class=\"colorpicker\">\n   *   <div class=\"colorpicker-saturation\"><i class=\"colorpicker-guide\"><i></i></i></div>\n   *   <div class=\"colorpicker-hue\"><i class=\"colorpicker-guide\"></i></div>\n   *   <div class=\"colorpicker-alpha\"><i class=\"colorpicker-guide\"></i></div>\n   *   <div class=\"colorpicker-color\"><div /></div>\n   * </div>\n   */\n  template: '<div class=\"colorpicker\">\\n      <div class=\"colorpicker-saturation\"><i class=\"colorpicker-guide\"></i></div>\\n      <div class=\"colorpicker-hue\"><i class=\"colorpicker-guide\"></i></div>\\n      <div class=\"colorpicker-alpha\">\\n          <div class=\"colorpicker-alpha-color\"></div>\\n          <i class=\"colorpicker-guide\"></i>\\n      </div>\\n    </div>',\n  /**\n   *\n   * Associative object with the extension class name and its config.\n   * Colorpicker comes with many bundled extensions: debugger, palette, preview and swatches (a superset of Palette).\n   *\n   * @type {Object}\n   * @example\n   *   extensions: [\n   *     {\n   *       name: 'swatches'\n   *       colors: {\n   *         'primary': '#337ab7',\n   *         'success': '#5cb85c',\n   *         'info': '#5bc0de',\n   *         'warning': '#f0ad4e',\n   *         'danger': '#d9534f'\n   *       },\n   *       namesAsValues: true\n   *     }\n   *   ]\n   */\n  extensions: [{\n    name: 'preview',\n    showText: false\n  }]\n};\n\n/***/ }),\n/* 8 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Palette = exports.Swatches = exports.Preview = exports.Debugger = undefined;\n\nvar _Debugger = __webpack_require__(9);\n\nvar _Debugger2 = _interopRequireDefault(_Debugger);\n\nvar _Preview = __webpack_require__(10);\n\nvar _Preview2 = _interopRequireDefault(_Preview);\n\nvar _Swatches = __webpack_require__(11);\n\nvar _Swatches2 = _interopRequireDefault(_Swatches);\n\nvar _Palette = __webpack_require__(2);\n\nvar _Palette2 = _interopRequireDefault(_Palette);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.Debugger = _Debugger2.default;\nexports.Preview = _Preview2.default;\nexports.Swatches = _Swatches2.default;\nexports.Palette = _Palette2.default;\nexports.default = {\n  'debugger': _Debugger2.default,\n  'preview': _Preview2.default,\n  'swatches': _Swatches2.default,\n  'palette': _Palette2.default\n};\n\n/***/ }),\n/* 9 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\nvar _Extension2 = __webpack_require__(1);\n\nvar _Extension3 = _interopRequireDefault(_Extension2);\n\nvar _jquery = __webpack_require__(0);\n\nvar _jquery2 = _interopRequireDefault(_jquery);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n/**\n * Debugger extension class\n * @alias DebuggerExtension\n */\nvar Debugger = function (_Extension) {\n  _inherits(Debugger, _Extension);\n\n  function Debugger(colorpicker) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    _classCallCheck(this, Debugger);\n\n    /**\n     * @type {number}\n     */\n    var _this = _possibleConstructorReturn(this, (Debugger.__proto__ || Object.getPrototypeOf(Debugger)).call(this, colorpicker, options));\n\n    _this.eventCounter = 0;\n    if (_this.colorpicker.hasInput()) {\n      _this.colorpicker.input.on('change.colorpicker-ext', _jquery2.default.proxy(_this.onChangeInput, _this));\n    }\n    return _this;\n  }\n\n  /**\n   * @fires DebuggerExtension#colorpickerDebug\n   * @param {string} eventName\n   * @param {*} args\n   */\n\n\n  _createClass(Debugger, [{\n    key: 'log',\n    value: function log(eventName) {\n      var _console;\n\n      for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n        args[_key - 1] = arguments[_key];\n      }\n\n      this.eventCounter += 1;\n\n      var logMessage = '#' + this.eventCounter + ': Colorpicker#' + this.colorpicker.id + ' [' + eventName + ']';\n\n      (_console = console).debug.apply(_console, [logMessage].concat(args));\n\n      /**\n       * Whenever the debugger logs an event, this other event is emitted.\n       *\n       * @event DebuggerExtension#colorpickerDebug\n       * @type {object} The event object\n       * @property {Colorpicker} colorpicker The Colorpicker instance\n       * @property {Color} color The color instance\n       * @property {{debugger: DebuggerExtension, eventName: String, logArgs: Array, logMessage: String}} debug\n       *  The debug info\n       */\n      this.colorpicker.element.trigger({\n        type: 'colorpickerDebug',\n        colorpicker: this.colorpicker,\n        color: this.color,\n        debug: {\n          debugger: this,\n          eventName: eventName,\n          logArgs: args,\n          logMessage: logMessage\n        }\n      });\n    }\n  }, {\n    key: 'resolveColor',\n    value: function resolveColor(color) {\n      this.log('resolveColor()', color);\n      return false;\n    }\n  }, {\n    key: 'onCreate',\n    value: function onCreate(event) {\n      this.log('colorpickerCreate');\n      return _get(Debugger.prototype.__proto__ || Object.getPrototypeOf(Debugger.prototype), 'onCreate', this).call(this, event);\n    }\n  }, {\n    key: 'onDestroy',\n    value: function onDestroy(event) {\n      this.log('colorpickerDestroy');\n      this.eventCounter = 0;\n\n      if (this.colorpicker.hasInput()) {\n        this.colorpicker.input.off('.colorpicker-ext');\n      }\n\n      return _get(Debugger.prototype.__proto__ || Object.getPrototypeOf(Debugger.prototype), 'onDestroy', this).call(this, event);\n    }\n  }, {\n    key: 'onUpdate',\n    value: function onUpdate(event) {\n      this.log('colorpickerUpdate');\n    }\n\n    /**\n     * @listens Colorpicker#change\n     * @param {Event} event\n     */\n\n  }, {\n    key: 'onChangeInput',\n    value: function onChangeInput(event) {\n      this.log('input:change.colorpicker', event.value, event.color);\n    }\n  }, {\n    key: 'onChange',\n    value: function onChange(event) {\n      this.log('colorpickerChange', event.value, event.color);\n    }\n  }, {\n    key: 'onInvalid',\n    value: function onInvalid(event) {\n      this.log('colorpickerInvalid', event.value, event.color);\n    }\n  }, {\n    key: 'onHide',\n    value: function onHide(event) {\n      this.log('colorpickerHide');\n      this.eventCounter = 0;\n    }\n  }, {\n    key: 'onShow',\n    value: function onShow(event) {\n      this.log('colorpickerShow');\n    }\n  }, {\n    key: 'onDisable',\n    value: function onDisable(event) {\n      this.log('colorpickerDisable');\n    }\n  }, {\n    key: 'onEnable',\n    value: function onEnable(event) {\n      this.log('colorpickerEnable');\n    }\n  }]);\n\n  return Debugger;\n}(_Extension3.default);\n\nexports.default = Debugger;\n\n/***/ }),\n/* 10 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\nvar _Extension2 = __webpack_require__(1);\n\nvar _Extension3 = _interopRequireDefault(_Extension2);\n\nvar _jquery = __webpack_require__(0);\n\nvar _jquery2 = _interopRequireDefault(_jquery);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar Preview = function (_Extension) {\n  _inherits(Preview, _Extension);\n\n  function Preview(colorpicker) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    _classCallCheck(this, Preview);\n\n    var _this = _possibleConstructorReturn(this, (Preview.__proto__ || Object.getPrototypeOf(Preview)).call(this, colorpicker, _jquery2.default.extend(true, {}, {\n      template: '<div class=\"colorpicker-bar colorpicker-preview\"><div /></div>',\n      showText: true,\n      format: colorpicker.format\n    }, options)));\n\n    _this.element = (0, _jquery2.default)(_this.options.template);\n    _this.elementInner = _this.element.find('div');\n    return _this;\n  }\n\n  _createClass(Preview, [{\n    key: 'onCreate',\n    value: function onCreate(event) {\n      _get(Preview.prototype.__proto__ || Object.getPrototypeOf(Preview.prototype), 'onCreate', this).call(this, event);\n      this.colorpicker.picker.append(this.element);\n    }\n  }, {\n    key: 'onUpdate',\n    value: function onUpdate(event) {\n      _get(Preview.prototype.__proto__ || Object.getPrototypeOf(Preview.prototype), 'onUpdate', this).call(this, event);\n\n      if (!event.color) {\n        this.elementInner.css('backgroundColor', null).css('color', null).html('');\n        return;\n      }\n\n      this.elementInner.css('backgroundColor', event.color.toRgbString());\n\n      if (this.options.showText) {\n        this.elementInner.html(event.color.toString(this.options.format || this.colorpicker.format));\n\n        if (event.color.isDark()) {\n          this.elementInner.css('color', 'white');\n        } else {\n          this.elementInner.css('color', 'black');\n        }\n      }\n    }\n  }]);\n\n  return Preview;\n}(_Extension3.default);\n\nexports.default = Preview;\n\n/***/ }),\n/* 11 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\nvar _Palette2 = __webpack_require__(2);\n\nvar _Palette3 = _interopRequireDefault(_Palette2);\n\nvar _jquery = __webpack_require__(0);\n\nvar _jquery2 = _interopRequireDefault(_jquery);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar defaults = {\n  barTemplate: '<div class=\"colorpicker-bar colorpicker-swatches\"></div>',\n  swatchTemplate: '<i class=\"colorpicker-swatch\"></i>'\n};\n\nvar Swatches = function (_Palette) {\n  _inherits(Swatches, _Palette);\n\n  function Swatches(colorpicker) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    _classCallCheck(this, Swatches);\n\n    return _possibleConstructorReturn(this, (Swatches.__proto__ || Object.getPrototypeOf(Swatches)).call(this, colorpicker, _jquery2.default.extend(true, {}, defaults, options)));\n  }\n\n  _createClass(Swatches, [{\n    key: 'isEnabled',\n    value: function isEnabled() {\n      return this.getLength() > 0;\n    }\n  }, {\n    key: 'onCreate',\n    value: function onCreate(event) {\n      var _this2 = this;\n\n      _get(Swatches.prototype.__proto__ || Object.getPrototypeOf(Swatches.prototype), 'onCreate', this).call(this, event);\n\n      if (!this.isEnabled()) {\n        return;\n      }\n\n      var colorpicker = this.colorpicker,\n          swatchContainer = (0, _jquery2.default)(this.options.barTemplate),\n          isAliased = this.options.namesAsValues === true && !Array.isArray(this.colors);\n\n      _jquery2.default.each(this.colors, function (name, value) {\n        var $swatch = (0, _jquery2.default)(_this2.options.swatchTemplate).css('background-color', value).attr('data-name', name).attr('data-value', value).attr('title', name + ': ' + value);\n\n        $swatch.on('mousedown.colorpicker touchstart.colorpicker', function (e) {\n          e.preventDefault();\n          colorpicker.setValue(isAliased ? (0, _jquery2.default)(this).data('name') : (0, _jquery2.default)(this).data('value'));\n        });\n        swatchContainer.append($swatch);\n      });\n\n      colorpicker.picker.append(swatchContainer);\n    }\n  }]);\n\n  return Swatches;\n}(_Palette3.default);\n\nexports.default = Swatches;\n\n/***/ })\n/******/ ]);\n});\n\n\n// WEBPACK FOOTER //\n// bootstrap-colorpicker.min.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 3);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 71f94b80515a1da21a76","module.exports = __WEBPACK_EXTERNAL_MODULE_0__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"jQuery\"\n// module id = 0\n// module chunks = 0 1","'use strict';\n\nimport $ from 'jquery';\n\n/**\n * Colorpicker extension class.\n */\nclass Extension {\n  /**\n   * @param {Colorpicker} colorpicker\n   * @param {Object} options\n   */\n  constructor(colorpicker, options = {}) {\n    /**\n     * @type {Colorpicker}\n     */\n    this.colorpicker = colorpicker;\n    /**\n     * @type {Object}\n     */\n    this.options = options;\n\n    if (!(this.colorpicker.element && this.colorpicker.element.length)) {\n      throw new Error('Extension: this.colorpicker.element is not valid');\n    }\n\n    this.colorpicker.element.on('colorpickerCreate.colorpicker-ext', $.proxy(this.onCreate, this));\n    this.colorpicker.element.on('colorpickerDestroy.colorpicker-ext', $.proxy(this.onDestroy, this));\n    this.colorpicker.element.on('colorpickerUpdate.colorpicker-ext', $.proxy(this.onUpdate, this));\n    this.colorpicker.element.on('colorpickerChange.colorpicker-ext', $.proxy(this.onChange, this));\n    this.colorpicker.element.on('colorpickerInvalid.colorpicker-ext', $.proxy(this.onInvalid, this));\n    this.colorpicker.element.on('colorpickerShow.colorpicker-ext', $.proxy(this.onShow, this));\n    this.colorpicker.element.on('colorpickerHide.colorpicker-ext', $.proxy(this.onHide, this));\n    this.colorpicker.element.on('colorpickerEnable.colorpicker-ext', $.proxy(this.onEnable, this));\n    this.colorpicker.element.on('colorpickerDisable.colorpicker-ext', $.proxy(this.onDisable, this));\n  }\n\n  /**\n   * Function called every time a new color needs to be created.\n   * Return false to skip this resolver and continue with other extensions' ones\n   * or return anything else to consider the color resolved.\n   *\n   * @param {Color|String|*} color\n   * @return {Color|String|*}\n   */\n  resolveColor(color) {\n    return false;\n  }\n\n  /**\n   * @listens Colorpicker#colorpickerCreate\n   * @param {Event} event\n   */\n  onCreate(event) {\n    // to be extended\n  }\n\n  /**\n   * @listens Colorpicker#colorpickerDestroy\n   * @param {Event} event\n   */\n  onDestroy(event) {\n    this.colorpicker.element.off('.colorpicker-ext');\n  }\n\n  /**\n   * @listens Colorpicker#colorpickerUpdate\n   * @param {Event} event\n   */\n  onUpdate(event) {\n    // to be extended\n  }\n\n  /**\n   * @listens Colorpicker#colorpickerChange\n   * @param {Event} event\n   */\n  onChange(event) {\n    // to be extended\n  }\n\n  /**\n   * @listens Colorpicker#colorpickerInvalid\n   * @param {Event} event\n   */\n  onInvalid(event) {\n    // to be extended\n  }\n\n  /**\n   * @listens Colorpicker#colorpickerHide\n   * @param {Event} event\n   */\n  onHide(event) {\n    // to be extended\n  }\n\n  /**\n   * @listens Colorpicker#colorpickerShow\n   * @param {Event} event\n   */\n  onShow(event) {\n    // to be extended\n  }\n\n  /**\n   * @listens Colorpicker#colorpickerDisable\n   * @param {Event} event\n   */\n  onDisable(event) {\n    // to be extended\n  }\n\n  /**\n   * @listens Colorpicker#colorpickerEnable\n   * @param {Event} event\n   */\n  onEnable(event) {\n    // to be extended\n  }\n}\n\nexport default Extension;\n\n\n\n// WEBPACK FOOTER //\n// ./src/js/Extension.js","'use strict';\n\nimport Extension from 'Extension';\nimport $ from 'jquery';\n\nlet defaults = {\n  /**\n   * Key-value pairs defining a color alias and its CSS color representation.\n   *\n   * They can also be just an array of values. In that case, no special names are used, only the real colors.\n   *\n   * @type {Object|Array}\n   * @default null\n   * @example\n   *  {\n   *   'black': '#000000',\n   *   'white': '#ffffff',\n   *   'red': '#FF0000',\n   *   'default': '#777777',\n   *   'primary': '#337ab7',\n   *   'success': '#5cb85c',\n   *   'info': '#5bc0de',\n   *   'warning': '#f0ad4e',\n   *   'danger': '#d9534f'\n   *  }\n   *\n   * @example ['#f0ad4e', '#337ab7', '#5cb85c']\n   */\n  colors: null,\n  /**\n   * If true, the when a color swatch is selected the name (alias) will be used as input value,\n   * otherwise the swatch real color value will be used.\n   *\n   * @type {boolean}\n   * @default true\n   */\n  namesAsValues: true\n};\n\nclass Palette extends Extension {\n\n  /**\n   * @returns {Object|Array}\n   */\n  get colors() {\n    return this.options.colors;\n  }\n\n  constructor(colorpicker, options = {}) {\n    super(colorpicker, $.extend(true, {}, defaults, options));\n\n    if ((!Array.isArray(this.options.colors)) && (typeof this.options.colors !== 'object')) {\n      this.options.colors = null;\n    }\n  }\n\n  /**\n   * @returns {int}\n   */\n  getLength() {\n    if (!this.options.colors) {\n      return 0;\n    }\n\n    if (Array.isArray(this.options.colors)) {\n      return this.options.colors.length;\n    }\n\n    if (typeof this.options.colors === 'object') {\n      return Object.keys(this.options.colors).length;\n    }\n\n    return 0;\n  }\n\n  resolveColor(color) {\n    if (this.getLength() <= 0) {\n      return false;\n    }\n\n    if (Array.isArray(this.options.colors)) {\n      if (this.options.colors.indexOf(color) >= 0) {\n        return color;\n      }\n      if (this.options.colors.indexOf(color.toUpperCase()) >= 0) {\n        return color.toUpperCase();\n      }\n      if (this.options.colors.indexOf(color.toLowerCase()) >= 0) {\n        return color.toLowerCase();\n      }\n      return false;\n    }\n\n    if (typeof this.options.colors !== 'object') {\n      return false;\n    }\n\n    if (!this.options.namesAsValues) {\n      return this.getValue(color, false);\n    }\n    return this.getName(color, this.getName('#' + color, this.getValue(color, false)));\n  }\n\n  /**\n   * Given a color value, returns the corresponding color name or defaultValue.\n   *\n   * @param {String} value\n   * @param {*} defaultValue\n   * @returns {*}\n   */\n  getName(value, defaultValue = false) {\n    if (!(typeof value === 'string') || !this.options.colors) {\n      return defaultValue;\n    }\n    for (let name in this.options.colors) {\n      if (!this.options.colors.hasOwnProperty(name)) {\n        continue;\n      }\n      if (this.options.colors[name].toLowerCase() === value.toLowerCase()) {\n        return name;\n      }\n    }\n    return defaultValue;\n  }\n\n  /**\n   * Given a color name, returns the corresponding color value or defaultValue.\n   *\n   * @param {String} name\n   * @param {*} defaultValue\n   * @returns {*}\n   */\n  getValue(name, defaultValue = false) {\n    if (!(typeof name === 'string') || !this.options.colors) {\n      return defaultValue;\n    }\n    if (this.options.colors.hasOwnProperty(name)) {\n      return this.options.colors[name];\n    }\n    return defaultValue;\n  }\n}\n\nexport default Palette;\n\n\n\n// WEBPACK FOOTER //\n// ./src/js/extensions/Palette.js","'use strict';\n\nimport Colorpicker from './Colorpicker';\nimport $ from 'jquery';\n\nlet plugin = 'colorpicker';\n\n$[plugin] = Colorpicker;\n\n$.fn[plugin] = function (option) {\n  let apiArgs = Array.prototype.slice.call(arguments, 1),\n    isSingleElement = (this.length === 1),\n    returnValue = null;\n\n  let $jq = this.each(function () {\n    let $this = $(this),\n      inst = $this.data(plugin),\n      options = ((typeof option === 'object') ? option : {});\n\n    if (!inst) {\n      inst = new Colorpicker(this, options);\n      $this.data(plugin, inst);\n    }\n\n    if (typeof option === 'string') {\n      if (option === 'colorpicker') {\n        returnValue = inst;\n      } else if ($.isFunction(inst[option])) {\n        returnValue = inst[option].apply(inst, apiArgs);\n      } else { // its a property ?\n        if (apiArgs.length) {\n          // set property\n          inst[option] = apiArgs[0];\n        }\n        returnValue = inst[option];\n      }\n    } else {\n      returnValue = $this;\n    }\n  });\n\n  return isSingleElement ? returnValue : $jq;\n};\n\n$.fn[plugin].constructor = Colorpicker;\n\n\n\n// WEBPACK FOOTER //\n// ./src/js/jquery-plugin.js","'use strict';\n\nimport Color from './Color';\nimport Extension from './Extension';\nimport defaults from './options';\nimport bundledExtensions from 'extensions';\nimport $ from 'jquery';\n\nlet colorPickerIdCounter = 0;\n\n/**\n * Colorpicker widget class\n */\nclass Colorpicker {\n  /**\n   * Color class\n   *\n   * @static\n   * @type {Color}\n   */\n  static get Color() {\n    return Color;\n  }\n\n  /**\n   * Extension class\n   *\n   * @static\n   * @type {Extension}\n   */\n  static get Extension() {\n    return Extension;\n  }\n\n  /**\n   * Colorpicker bundled extension classes\n   *\n   * @static\n   * @type {{Extension}}\n   */\n  static get Extensions() {\n    return bundledExtensions;\n  }\n\n  /**\n   * color getter\n   *\n   * @type {Color|null}\n   */\n  get color() {\n    return this.element.data('color');\n  }\n\n  /**\n   * color setter\n   *\n   * @ignore\n   * @param {Color|null} value\n   */\n  set color(value) {\n    this.element.data('color', value);\n  }\n\n  /**\n   * @fires Colorpicker#colorpickerCreate\n   * @param {Object|String} element\n   * @param {Object} options\n   * @constructor\n   */\n  constructor(element, options) {\n    colorPickerIdCounter += 1;\n    /**\n     * The colorpicker instance number\n     * @type {number}\n     */\n    this.id = colorPickerIdCounter;\n\n    /**\n     * @type {*|jQuery}\n     */\n    this.element = $(element).addClass('colorpicker-element');\n    this.element.attr('data-colorpicker-id', this.id);\n\n    /**\n     * @type {defaults}\n     */\n    this.options = $.extend(true, {}, defaults, options, this.element.data());\n\n    /**\n     * @type {Extension[]}\n     */\n    this.extensions = [];\n\n    if (!Array.isArray(this.options.extensions)) {\n      this.options.extensions = [];\n    }\n\n    /**\n     * @type {*|jQuery}\n     */\n    this.component = this.options.component;\n    this.component = (this.component !== false) ? this.element.find(this.component) : false;\n    if (this.component && (this.component.length === 0)) {\n      this.component = false;\n    }\n\n    /**\n     * @type {*|jQuery}\n     */\n    this.container = (this.options.container === true) ? this.element : this.options.container;\n    this.container = (this.container !== false) ? $(this.container) : false;\n\n    /**\n     * @type {*|String}\n     * @private\n     */\n    this.currentSlider = null;\n\n    /**\n     * @type {{left: number, top: number}}\n     * @private\n     */\n    this.mousePointer = {\n      left: 0,\n      top: 0\n    };\n\n    /**\n     * Latest external event\n     *\n     * @type {{name: String, e: *}}\n     * @private\n     */\n    this.lastEvent = {\n      name: null,\n      e: null\n    };\n\n    // Is the element an input? Should we search inside for any input?\n    /**\n     * @type {*|jQuery}\n     */\n    this.input = this.element.is('input') ? this.element : (this.options.input ?\n      this.element.find(this.options.input) : false);\n\n    if (this.input && (this.input.length === 0)) {\n      this.input = false;\n    }\n\n    if (this.options.debug) {\n      this.options.extensions.push({name: 'Debugger'});\n    }\n\n    // Register extensions\n    this.options.extensions.forEach((ext) => {\n      this.addExtension(ext.name, bundledExtensions[ext.name.toLowerCase()], ext);\n    });\n\n    let colorValue = this.options.color !== false ? this.options.color : this.getValue();\n\n    this.color = colorValue ? this.createColor(colorValue) : false;\n\n    if (this.options.format === false) {\n      // If format is false, use the first parsed one from now on\n      this.options.format = this.color.format;\n    }\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.disabled = false;\n\n    // Setup picker\n    let $picker = this.picker = $(this.options.template);\n\n    if (this.options.customClass) {\n      $picker.addClass(this.options.customClass);\n    }\n    if (this.options.inline) {\n      $picker.addClass('colorpicker-inline colorpicker-visible');\n    } else {\n      $picker.addClass('colorpicker-hidden');\n    }\n    if (this.options.horizontal) {\n      $picker.addClass('colorpicker-horizontal');\n    }\n\n    if (\n      (this.options.useAlpha || (this.hasColor() && this.color.hasTransparency())) &&\n      (this.options.useAlpha !== false)\n    ) {\n      this.options.useAlpha = true;\n      $picker.addClass('colorpicker-with-alpha');\n    }\n\n    if (this.options.align === 'right') {\n      $picker.addClass('colorpicker-right');\n    }\n    if (this.options.inline === true) {\n      $picker.addClass('colorpicker-no-arrow');\n    }\n\n    // Prevent closing the colorpicker when clicking on itself\n    $picker.on('mousedown.colorpicker touchstart.colorpicker', $.proxy(function (e) {\n      if (e.target === e.currentTarget) {\n        e.preventDefault();\n      }\n    }, this));\n\n    // Bind click/tap events on the sliders\n    $picker.find('.colorpicker-saturation, .colorpicker-hue, .colorpicker-alpha')\n      .on('mousedown.colorpicker touchstart.colorpicker', $.proxy(this._mousedown, this));\n\n    $picker.appendTo(this.container ? this.container : $('body'));\n\n    // Bind other events\n    if (this.hasInput()) {\n      this.input.on({\n        'keyup.colorpicker': $.proxy(this._keyup, this)\n      });\n      this.input.on({\n        'change.colorpicker': $.proxy(this._change, this)\n      });\n      if (this.component === false) {\n        this.element.on({\n          'focus.colorpicker': $.proxy(this.show, this)\n        });\n      }\n      if (this.options.inline === false) {\n        this.element.on({\n          'focusout.colorpicker': $.proxy(this.hide, this)\n        });\n      }\n    }\n\n    if (this.component !== false) {\n      this.component.on({\n        'click.colorpicker': $.proxy(this.show, this)\n      });\n    }\n\n    if ((this.hasInput() === false) && (this.component === false) && !this.element.has('.colorpicker')) {\n      this.element.on({\n        'click.colorpicker': $.proxy(this.show, this)\n      });\n    }\n\n    // for HTML5 input[type='color']\n    if (this.hasInput() && (this.component !== false) && (this.input.attr('type') === 'color')) {\n      this.input.on({\n        'click.colorpicker': $.proxy(this.show, this),\n        'focus.colorpicker': $.proxy(this.show, this)\n      });\n    }\n\n    // Update if there is a color option\n    this.update(this.options.color !== false);\n\n    $($.proxy(function () {\n      /**\n       * (Colorpicker) When the Colorpicker instance has been created and the DOM is ready.\n       *\n       * @event Colorpicker#colorpickerCreate\n       */\n      this.element.trigger({\n        type: 'colorpickerCreate',\n        colorpicker: this,\n        color: this.color\n      });\n    }, this));\n  }\n\n  /**\n   * Creates and registers the given extension\n   *\n   * @param {String|Extension} extensionName\n   * @param {Extension} ExtensionClass\n   * @param {Object} [config]\n   * @returns {Extension}\n   */\n  addExtension(extensionName, ExtensionClass, config = {}) {\n    let ext = (extensionName instanceof Extension) ? extensionName : new ExtensionClass(this, config);\n\n    this.extensions.push(ext);\n    return ext;\n  }\n\n  /**\n   * Destroys the current instance\n   *\n   * @fires Colorpicker#colorpickerDestroy\n   */\n  destroy() {\n    this.picker.remove();\n    this.element.removeData('colorpicker', 'color').off('.colorpicker');\n    if (this.hasInput()) {\n      this.input.off('.colorpicker');\n    }\n    if (this.component !== false) {\n      this.component.off('.colorpicker');\n    }\n    this.element.removeClass('colorpicker-element');\n\n    /**\n     * (Colorpicker) When the instance is destroyed with all events unbound.\n     *\n     * @event Colorpicker#colorpickerDestroy\n     */\n    this.element.trigger({\n      type: 'colorpickerDestroy',\n      colorpicker: this,\n      color: this.color\n    });\n  }\n\n  /**\n   * Returns true if the current color object is an instance of Color, false otherwise.\n   * @returns {boolean}\n   */\n  hasColor() {\n    return this.color instanceof Color;\n  }\n\n  /**\n   * @returns {*|String|Color}\n   */\n  get fallbackColor() {\n    return this.options.fallbackColor ? this.options.fallbackColor : (this.hasColor() ? this.color : '#000');\n  }\n\n  get format() {\n    if (this.options.format) {\n      return this.options.format;\n    }\n\n    if (this.hasColor() && this.color.hasTransparency() && this.color.format.match(/^hex/)) {\n      return this.options.enableHex8 ? 'hex8' : (this.isAlphaEnabled() ? 'rgba' : 'hex');\n    }\n\n    if (this.hasColor()) {\n      return this.color.format;\n    }\n\n    return null;\n  }\n\n  /**\n   * Formatted color string, with the formatting options applied\n   * (e.g. useHashPrefix)\n   * @returns {String}\n   */\n  toInputColorString() {\n    let str = this.toCssColorString();\n\n    if (!str) {\n      return str;\n    }\n\n    if (this.options.useHashPrefix === false) {\n      str = str.replace(/^#/g, '');\n    }\n\n    return this._resolveColor(str);\n  }\n\n  /**\n   * Formatted color string, suitable for CSS\n   * @returns {String}\n   */\n  toCssColorString() {\n    if (!this.hasColor()) {\n      return '';\n    }\n    return this.color.toString(this.format);\n  }\n\n  /**\n   * If the widget is not inside a container or inline, rearranges its position relative to its element offset.\n   *\n   * @param {Event} [e]\n   * @private\n   * @returns {boolean} Returns false if the widget is inside a container or inline, true otherwise\n   */\n  _reposition(e) {\n    this.lastEvent.name = 'reposition';\n    this.lastEvent.e = e;\n\n    if (this.options.inline !== false || this.options.container) {\n      return false;\n    }\n    let type = this.container && this.container[0] !== window.document.body ? 'position' : 'offset';\n    let element = this.component || this.element;\n    let offset = element[type]();\n\n    if (this.options.align === 'right') {\n      offset.left -= this.picker.outerWidth() - element.outerWidth();\n    }\n    this.picker.css({\n      top: offset.top + element.outerHeight(),\n      left: offset.left\n    });\n    return true;\n  }\n\n  /**\n   * Shows the colorpicker widget if hidden.\n   * If the input is disabled this call will be ignored.\n   *\n   * @fires Colorpicker#colorpickerShow\n   * @param {Event} [e]\n   * @returns {boolean} True if was hidden and afterwards visible, false if nothing happened.\n   */\n  show(e) {\n    this.lastEvent.name = 'show';\n    this.lastEvent.e = e;\n\n    if (this.isVisible() || this.isDisabled()) {\n      // Don't show the widget if it's already visible or it is disabled\n      return false;\n    }\n    this.picker.addClass('colorpicker-visible').removeClass('colorpicker-hidden');\n\n    this._reposition(e);\n    $(window).on('resize.colorpicker', $.proxy(this._reposition, this));\n\n    if (e && (!this.hasInput() || this.input.attr('type') === 'color')) {\n      if (e.stopPropagation && e.preventDefault) {\n        e.stopPropagation();\n        e.preventDefault();\n      }\n    }\n    if ((this.component || !this.input) && (this.options.inline === false)) {\n      $(window.document).on({\n        'mousedown.colorpicker': $.proxy(this.hide, this)\n      });\n    }\n\n    /**\n     * (Colorpicker) When show() is called and the widget can be shown.\n     *\n     * @event Colorpicker#colorpickerShow\n     */\n    this.element.trigger({\n      type: 'colorpickerShow',\n      colorpicker: this,\n      color: this.color\n    });\n\n    return true;\n  }\n\n  /**\n   * Hides the colorpicker widget.\n   * Hide is prevented when it is triggered by an event whose target element has been clicked/touched.\n   *\n   * @fires Colorpicker#colorpickerHide\n   * @param {Event} [e]\n   * @returns {boolean} True if was visible and afterwards hidden, false if nothing happened.\n   */\n  hide(e) {\n    this.lastEvent.name = 'hide';\n    this.lastEvent.e = e;\n\n    if (this.isHidden()) {\n      // Do not trigger if already hidden\n      return false;\n    }\n    if ((typeof e !== 'undefined') && e.target) {\n      // Prevent hide if triggered by an event and an element inside the colorpicker has been clicked/touched\n      if (\n        $(e.currentTarget).parents('.colorpicker').length > 0 ||\n        $(e.target).parents('.colorpicker').length > 0\n      ) {\n        return false;\n      }\n    }\n    this.picker.addClass('colorpicker-hidden').removeClass('colorpicker-visible');\n    $(window).off('resize.colorpicker', this._reposition);\n    $(window.document).off({\n      'mousedown.colorpicker': this.hide\n    });\n\n    /**\n     * (Colorpicker) When hide() is called and the widget can be hidden.\n     *\n     * @event Colorpicker#colorpickerHide\n     */\n    this.element.trigger({\n      type: 'colorpickerHide',\n      colorpicker: this,\n      color: this.color\n    });\n    return true;\n  }\n\n  /**\n   * Returns true if the colorpicker element has the colorpicker-visible class and not the colorpicker-hidden one.\n   * False otherwise.\n   *\n   * @returns {boolean}\n   */\n  isVisible() {\n    return this.picker.hasClass('colorpicker-visible') && !this.picker.hasClass('colorpicker-hidden');\n  }\n\n  /**\n   * Returns true if the colorpicker element has the colorpicker-hidden class and not the colorpicker-visible one.\n   * False otherwise.\n   *\n   * @returns {boolean}\n   */\n  isHidden() {\n    return this.picker.hasClass('colorpicker-hidden') && !this.picker.hasClass('colorpicker-visible');\n  }\n\n  /**\n   * If the input element is present, it updates the value with the current color object color string.\n   * If value is set, this method fires a \"change\" event on the input element.\n   *\n   * @fires Colorpicker#change\n   * @private\n   */\n  _updateInput() {\n    if (!this.hasInput()) {\n      return;\n    }\n    let val = this.toInputColorString();\n\n    if (val === this.input.prop('value')) {\n      // No need to set value or trigger any event if nothing changed\n      return;\n    }\n\n    this.input.prop('value', val ? val : '');\n\n    /**\n     * (Input) Triggered on the input element when a new color is selected.\n     *\n     * @event Colorpicker#change\n     */\n    this.input.trigger({\n      type: 'change',\n      colorpicker: this,\n      color: this.color,\n      value: val\n    });\n  }\n\n  /**\n   * Changes the color adjustment bars using the current color object information.\n   * @private\n   */\n  _updatePicker() {\n    if (!this.hasColor()) {\n      return;\n    }\n\n    let vertical = (this.options.horizontal === false),\n      sl = vertical ? this.options.sliders : this.options.slidersHorz;\n\n    let saturationGuide = this.picker.find('.colorpicker-saturation .colorpicker-guide'),\n      hueGuide = this.picker.find('.colorpicker-hue .colorpicker-guide'),\n      alphaGuide = this.picker.find('.colorpicker-alpha .colorpicker-guide');\n\n    let hsva = this.color.hsvaRatio;\n\n    if (hueGuide.length) {\n      hueGuide.css(vertical ? 'top' : 'left', (vertical ? sl.hue.maxTop : sl.hue.maxLeft) * (1 - hsva.h));\n    }\n\n    if (alphaGuide.length) {\n      alphaGuide.css(vertical ? 'top' : 'left', (vertical ? sl.alpha.maxTop : sl.alpha.maxLeft) * (1 - hsva.a));\n    }\n\n    if (saturationGuide.length) {\n      saturationGuide.css({\n        'top': sl.saturation.maxTop - hsva.v * sl.saturation.maxTop,\n        'left': hsva.s * sl.saturation.maxLeft\n      });\n    }\n\n    this.picker.find('.colorpicker-saturation')\n      .css('backgroundColor', this.color.getHueOnlyCopy().toHexString()); // we only need hue\n\n    let hex6Color = this.color.toString('hex6');\n    let alphaBg = '';\n\n    if (this.options.horizontal) {\n      alphaBg = `linear-gradient(to right, ${hex6Color} 0%, transparent 100%)`;\n    } else {\n      alphaBg = `linear-gradient(to bottom, ${hex6Color} 0%, transparent 100%)`;\n    }\n\n    this.picker.find('.colorpicker-alpha-color').css('background', alphaBg);\n  }\n\n  /**\n   * If the component element is present, its background color is updated\n   * @private\n   */\n  _updateComponent() {\n    if (!this.hasColor() || (this.component === false)) {\n      return;\n    }\n\n    let colorStr = this.toCssColorString();\n    let styles = {'background': colorStr};\n\n    let icn = this.component.find('i').eq(0);\n\n    if (icn.length > 0) {\n      icn.css(styles);\n    } else {\n      this.component.css(styles);\n    }\n  }\n\n  /**\n   * @private\n   * @returns {boolean}\n   */\n  _shouldUpdate() {\n    return (this.hasColor() && ((this.getValue(false) !== false)));\n  }\n\n  /**\n   * Updated the component color, the input value and the widget if a color is present.\n   *\n   * If force is true, it is updated anyway.\n   *\n   * @fires Colorpicker#colorpickerUpdate\n   * @param {boolean} [force]\n   */\n  update(force = false) {\n    if (this._shouldUpdate() || (force === true)) {\n      // Update only if the current value (from input or data) is not empty\n      this._updateComponent();\n\n      // Do not update input when autoInputFallback is disabled and last event is keyup.\n      let preventInputUpdate = (\n        (this.options.autoInputFallback !== true) &&\n        (\n          // this.isInvalidColor() ||  // prevent also on invalid color (on create, leaves invalid colors)\n          (this.lastEvent.name === 'keyup')\n        )\n      );\n\n      if (!preventInputUpdate) {\n        this._updateInput();\n      }\n\n      this._updatePicker();\n\n      /**\n       * (Colorpicker) Fired when the widget is updated.\n       *\n       * @event Colorpicker#colorpickerUpdate\n       */\n      this.element.trigger({\n        type: 'colorpickerUpdate',\n        colorpicker: this,\n        color: this.color\n      });\n    }\n  }\n\n  /**\n   * Returns the color string from the input value or the 'data-color' attribute of the input or element.\n   * If empty, it returns the defaultValue parameter.\n   *\n   * @param {String|*} [defaultValue]\n   * @returns {String|*}\n   */\n  getValue(defaultValue = null) {\n    defaultValue = (typeof defaultValue === 'undefined') ? this.fallbackColor : defaultValue;\n    let candidates = [], val = false;\n\n    if (this.hasInput()) {\n      candidates.push(this.input.val());\n      candidates.push(this.input.data('color'));\n    }\n    candidates.push(this.element.data('color'));\n\n    candidates.map((item) => {\n      if (item && (val === false)) {\n        val = item;\n      }\n    });\n\n    val = ((val === false) ? defaultValue : val);\n\n    if (val instanceof Color) {\n      return val.toString(this.format);\n    }\n\n    return val;\n  }\n\n  /**\n   * Sets the color manually\n   *\n   * @fires Colorpicker#colorpickerChange\n   * @param {String|Color} val\n   */\n  setValue(val) {\n    if (this.hasColor() && this.color.equals(val)) {\n      // equal color object\n      return;\n    }\n\n    let color = val ? this.createColor(val) : false;\n\n    if (!this.hasColor() && !color) {\n      // color was empty and the new one too\n      return;\n    }\n\n    // force update if color is changed to empty\n    let shouldForceUpdate = this.hasColor() && !color;\n\n    this.color = color;\n\n    /**\n     * (Colorpicker) When the color is set programmatically with setValue().\n     *\n     * @event Colorpicker#colorpickerChange\n     */\n    this.element.trigger({\n      type: 'colorpickerChange',\n      colorpicker: this,\n      color: this.color,\n      value: val\n    });\n\n    // force update if color has changed to empty\n    this.update(shouldForceUpdate);\n  }\n\n  /**\n   * Creates a new color using the widget instance options (fallbackColor, format).\n   *\n   * @fires Colorpicker#colorpickerInvalid\n   * @param {*} val\n   * @param {boolean} useFallback\n   * @returns {Color}\n   */\n  createColor(val, useFallback = true) {\n    let color = new Color(this._resolveColor(val), {format: this.format});\n\n    if (!color.isValid()) {\n      let invalidColor = color, fallback;\n\n      if (useFallback) {\n        fallback = ((this.fallbackColor instanceof Color) && this.fallbackColor.isValid()) ?\n          this.fallbackColor : this._resolveColor(this.fallbackColor);\n\n        color = new Color(fallback, {format: this.format});\n\n        if (!color.isValid() && useFallback) {\n          throw new Error('The fallback color is invalid.');\n        }\n      }\n\n      color.previous = invalidColor;\n\n      /**\n       * (Colorpicker) Fired when the color is invalid and the fallback color is going to be used.\n       *\n       * @event Colorpicker#colorpickerInvalid\n       */\n      this.element.trigger({\n        type: 'colorpickerInvalid',\n        colorpicker: this,\n        color: color,\n        value: val\n      });\n    }\n\n    if (!this.isAlphaEnabled() && color.hasTransparency()) {\n      // Alpha is disabled\n      color.setAlpha(1);\n    }\n\n    if (!this.hasColor()) {\n      // No previous color, so no need to compare\n      return color;\n    }\n\n    let hsva = color.hsvaRatio;\n    let prevHsva = this.color.hsvaRatio;\n\n    if (\n      hsva.s === 0 &&\n      hsva.h === 0 &&\n      prevHsva.h !== 0\n    ) {\n      // Hue was set to 0 because saturation was 0, use previous hue, since it was not meant to change...\n      color.setHueRatio(prevHsva.h);\n    }\n\n    if (!this.isAlphaEnabled() && color.hasTransparency()) {\n      // Alpha is disabled\n      color.setAlpha(1);\n    }\n\n    return color;\n  }\n\n  /**\n   * Checks if there is a color object, that it is valid and it is not a fallback\n   * @returns {boolean}\n   */\n  isInvalidColor() {\n    return !this.hasColor() || !this.color.isValid() || !!this.color.previous;\n  }\n\n  /**\n   * Returns true if the useAlpha option is exactly true, false otherwise\n   * @returns {boolean}\n   */\n  isAlphaEnabled() {\n    return this.options.useAlpha === true;\n  }\n\n  /**\n   * Resolves a color, in case is not in a standard format (e.g. a custom color alias)\n   *\n   * @private\n   * @param {String|*} color\n   * @returns {String|*|null}\n   */\n  _resolveColor(color) {\n    let extResolvedColor = false;\n\n    $.each(this.extensions, function (name, ext) {\n      if (extResolvedColor !== false) {\n        // skip if resolved\n        return;\n      }\n      extResolvedColor = ext.resolveColor(color);\n    });\n\n    if (extResolvedColor !== false) {\n      color = extResolvedColor;\n    }\n\n    return color;\n  }\n\n  /**\n   * Returns true if the widget has an associated input element, false otherwise\n   * @returns {boolean}\n   */\n  hasInput() {\n    return (this.input !== false);\n  }\n\n  /**\n   * Returns true if this instance is disabled\n   * @returns {boolean}\n   */\n  isDisabled() {\n    return this.disabled === true;\n  }\n\n  /**\n   * Disables the widget and the input if any\n   *\n   * @fires Colorpicker#colorpickerDisable\n   * @returns {boolean}\n   */\n  disable() {\n    if (this.hasInput()) {\n      this.input.prop('disabled', true);\n    }\n    this.disabled = true;\n\n    /**\n     * (Colorpicker) When the widget has been disabled.\n     *\n     * @event Colorpicker#colorpickerDisable\n     */\n    this.element.trigger({\n      type: 'colorpickerDisable',\n      colorpicker: this,\n      color: this.color\n    });\n    return true;\n  }\n\n  /**\n   * Enables the widget and the input if any\n   *\n   * @fires Colorpicker#colorpickerEnable\n   * @returns {boolean}\n   */\n  enable() {\n    if (this.hasInput()) {\n      this.input.prop('disabled', false);\n    }\n    this.disabled = false;\n\n    /**\n     * (Colorpicker) When the widget has been enabled.\n     *\n     * @event Colorpicker#colorpickerEnable\n     */\n    this.element.trigger({\n      type: 'colorpickerEnable',\n      colorpicker: this,\n      color: this.color\n    });\n    return true;\n  }\n\n  /**\n   * Function triggered when clicking in one of the color adjustment bars\n   *\n   * @private\n   * @fires Colorpicker#mousemove\n   * @param {Event} e\n   * @returns {boolean}\n   */\n  _mousedown(e) {\n    this.lastEvent.name = 'mousedown';\n    this.lastEvent.e = e;\n\n    if (!e.pageX && !e.pageY && e.originalEvent && e.originalEvent.touches) {\n      e.pageX = e.originalEvent.touches[0].pageX;\n      e.pageY = e.originalEvent.touches[0].pageY;\n    }\n    e.stopPropagation();\n    e.preventDefault();\n\n    let target = $(e.target);\n\n    // detect the slider and set the limits and callbacks\n    let zone = target.closest('div');\n    let sliders = this.options.horizontal ? this.options.slidersHorz : this.options.sliders;\n\n    if (zone.is('.colorpicker')) {\n      return false;\n    }\n    if (zone.is('.colorpicker-saturation')) {\n      this.currentSlider = $.extend({}, sliders.saturation);\n    } else if (zone.is('.colorpicker-hue')) {\n      this.currentSlider = $.extend({}, sliders.hue);\n    } else if (zone.is('.colorpicker-alpha')) {\n      this.currentSlider = $.extend({}, sliders.alpha);\n    } else if (zone.is('.colorpicker-alpha-color')) {\n      this.currentSlider = $.extend({}, sliders.alpha);\n      zone = zone.parent();\n    } else {\n      return false;\n    }\n    let offset = zone.offset();\n    // reference to guide's style\n\n    this.currentSlider.guide = zone.find('.colorpicker-guide')[0].style;\n    this.currentSlider.left = e.pageX - offset.left;\n    this.currentSlider.top = e.pageY - offset.top;\n    this.mousePointer = {\n      left: e.pageX,\n      top: e.pageY\n    };\n\n    /**\n     * (window.document) Triggered on mousedown for the document object,\n     * so the color adjustment guide is moved to the clicked position.\n     *\n     * @event Colorpicker#mousemove\n     */\n    $(window.document).on({\n      'mousemove.colorpicker': $.proxy(this._mousemove, this),\n      'touchmove.colorpicker': $.proxy(this._mousemove, this),\n      'mouseup.colorpicker': $.proxy(this._mouseup, this),\n      'touchend.colorpicker': $.proxy(this._mouseup, this)\n    }).trigger('mousemove');\n  }\n\n  /**\n   * Function triggered when dragging a guide inside one of the color adjustment bars.\n   *\n   * @private\n   * @param {Event} e\n   * @returns {boolean}\n   */\n  _mousemove(e) {\n    this.lastEvent.name = 'mousemove';\n    this.lastEvent.e = e;\n\n    let color = !this.hasColor() ? this.createColor(this.fallbackColor) : this.color.getCopy();\n\n    if (!e.pageX && !e.pageY && e.originalEvent && e.originalEvent.touches) {\n      e.pageX = e.originalEvent.touches[0].pageX;\n      e.pageY = e.originalEvent.touches[0].pageY;\n    }\n    e.stopPropagation();\n    e.preventDefault();\n    let left = Math.max(\n      0,\n      Math.min(\n        this.currentSlider.maxLeft,\n        this.currentSlider.left + ((e.pageX || this.mousePointer.left) - this.mousePointer.left)\n      )\n    );\n    let top = Math.max(\n      0,\n      Math.min(\n        this.currentSlider.maxTop,\n        this.currentSlider.top + ((e.pageY || this.mousePointer.top) - this.mousePointer.top)\n      )\n    );\n\n    this.currentSlider.guide.left = left + 'px';\n    this.currentSlider.guide.top = top + 'px';\n    if (this.currentSlider.callLeft) {\n      color[this.currentSlider.callLeft].call(color, left / this.currentSlider.maxLeft);\n    }\n    if (this.currentSlider.callTop) {\n      color[this.currentSlider.callTop].call(color, top / this.currentSlider.maxTop);\n    }\n\n    this.setValue(color);\n    return false;\n  }\n\n  /**\n   * Function triggered when releasing the click in one of the color adjustment bars.\n   *\n   * @private\n   * @param {Event} e\n   * @returns {boolean}\n   */\n  _mouseup(e) {\n    this.lastEvent.name = 'mouseup';\n    this.lastEvent.e = e;\n\n    e.stopPropagation();\n    e.preventDefault();\n    $(window.document).off({\n      'mousemove.colorpicker': this._mousemove,\n      'touchmove.colorpicker': this._mousemove,\n      'mouseup.colorpicker': this._mouseup,\n      'touchend.colorpicker': this._mouseup\n    });\n    return false;\n  }\n\n  /**\n   * Function triggered when the input has changed, so the colorpicker gets updated.\n   *\n   * @private\n   * @param {Event} e\n   * @returns {boolean}\n   */\n  _change(e) {\n    this.lastEvent.name = 'change';\n    this.lastEvent.e = e;\n\n    let val = this.input.val();\n\n    if (val !== this.toInputColorString()) {\n      this.setValue(val);\n    }\n  }\n\n  /**\n   * Function triggered after a keyboard key has been released.\n   *\n   * @private\n   * @param {Event} e\n   * @returns {boolean}\n   */\n  _keyup(e) {\n    this.lastEvent.name = 'keyup';\n    this.lastEvent.e = e;\n\n    let val = this.input.val();\n\n    if (val !== this.toInputColorString()) {\n      this.setValue(val);\n    }\n  }\n}\n\nexport default Colorpicker;\n\n\n\n// WEBPACK FOOTER //\n// ./src/js/Colorpicker.js","'use strict';\n\nimport tinycolor from 'tinycolor2';\nimport $ from 'jquery';\n\nfunction unwrapColor(color) {\n  if (color instanceof tinycolor) {\n    return {\n      r: color._r,\n      g: color._g,\n      b: color._b,\n      a: color._a\n    };\n  }\n  return color;\n}\n\n/**\n * Sanitizes a format string, so it is compatible with tinycolor,\n * or returns the same value if it is not a string.\n *\n * @param {String} format\n * @returns {String|*}\n * @private\n */\nfunction getCompatibleFormat(format) {\n  if (format instanceof String || typeof format === 'string') {\n    return format.replace(/a$/gi, '');\n  }\n\n  return format;\n}\n\n/**\n * Color manipulation class that extends the tinycolor library class.\n */\nclass Color extends tinycolor {\n  /**\n   * Identifier of the color instance.\n   *\n   * @type {int}\n   * @readonly\n   */\n  get id() {\n    return this._tc_id;\n  }\n\n  /**\n   * Format of the parsed color.\n   *\n   * @type {String}\n   * @readonly\n   */\n  get format() {\n    return this._format;\n  }\n\n  /**\n   * All options of the current instance.\n   *\n   * @type {{format: String, gradientType: String}}\n   * @readonly\n   */\n  get options() {\n    return {\n      format: this._format,\n      gradientType: this._gradientType\n    };\n  }\n\n  /**\n   * @returns {{h, s, v, a}}\n   */\n  get hsva() {\n    return this.toHsv();\n  }\n\n  /**\n   * @returns {{h, s, v, a}}\n   */\n  get hsvaRatio() {\n    let hsv = this.hsva;\n\n    return {\n      h: hsv.h / 360,\n      s: hsv.s,\n      v: hsv.v,\n      a: hsv.a\n    };\n  }\n\n  /**\n   * foo bar\n   * @param {Color|*} color\n   * @param {{format}} [options]\n   * @constructor\n   */\n  constructor(color, options = {format: null}) {\n    if (options.format) {\n      options.format = getCompatibleFormat(options.format);\n    }\n    super(unwrapColor(color), options);\n\n    /**\n     * @type {Color|*}\n     */\n    this._originalInput = color; // keep real original color\n    /**\n     * Hue backup to not lose the information when saturation is 0.\n     * @type {number}\n     */\n    this._hbak = this.hsva.h;\n    /**\n     * If set, it contains a reference to a previous color that caused the creation of this one.\n     * @type {Color}\n     */\n    this.previous = null;\n  }\n\n  /**\n   * Compares a color object with this one and returns true if it is equal or false if not.\n   *\n   * @param {Color} color\n   * @returns {boolean}\n   */\n  equals(color) {\n    if (!(color instanceof tinycolor)) {\n      return false;\n    }\n    return this._r === color._r &&\n      this._g === color._g &&\n      this._b === color._b &&\n      this._a === color._a &&\n      this._roundA === color._roundA &&\n      this._format === color._format &&\n      this._gradientType === color._gradientType &&\n      this._ok === color._ok;\n  }\n\n  /**\n   * Imports all variables of the given color to this instance, excepting `_tc_id`.\n   * @param {Color} color\n   */\n  importColor(color) {\n    if (!(color instanceof tinycolor)) {\n      throw new Error('Color.importColor: The color argument is not an instance of tinycolor.');\n    }\n    this._originalInput = color._originalInput;\n    this._r = color._r;\n    this._g = color._g;\n    this._b = color._b;\n    this._a = color._a;\n    this._roundA = color._roundA;\n    this._format = getCompatibleFormat(color._format);\n    this._gradientType = color._gradientType;\n    this._ok = color._ok;\n    // omit .previous and ._tc_id import\n  }\n\n  /**\n   * Imports the _r, _g, _b, _a, _hbak and _ok variables of the given color to this instance.\n   * @param {Color} color\n   */\n  importRgb(color) {\n    if (!color instanceof Color) {\n      throw new Error('Color.importColor: The color argument is not an instance of tinycolor.');\n    }\n    this._r = color._r;\n    this._g = color._g;\n    this._b = color._b;\n    this._a = color._a;\n    this._ok = color._ok;\n    this._hbak = color._hbak;\n  }\n\n  /**\n   * @param {{h,s,v,a}} hsv\n   */\n  importHsv(hsv) {\n    this._hbak = hsv.h;\n    this.importRgb(new Color(hsv, this.options));\n  }\n\n  /**\n   * @returns {Color}\n   */\n  getCopy() {\n    return new Color(this.hsva, this.options);\n  }\n\n  /**\n   * @returns {Color}\n   */\n  getHueOnlyCopy() {\n    return new Color({h: this._hbak ? this._hbak : this.hsva.h, s: 100, v: 100}, this.options);\n  }\n\n  /**\n   * @returns {Color}\n   */\n  getOpaqueCopy() {\n    return new Color($.extend(true, {}, this.hsva, {a: 1}), this.options);\n  }\n\n  /**\n   * @param {number} h Degrees from 0 to 360\n   */\n  setHue(h) {\n    this.importHsv($.extend(true, {}, this.hsva, {h: h}));\n  }\n\n  /**\n   * @param {number} s Percent from 0 o 100\n   */\n  setSaturation(s) {\n    this.importHsv($.extend(true, {}, this.hsva, {s: s}));\n  }\n\n  /**\n   * @param {number} v Percent from 0 o 100\n   */\n  setBrightness(v) {\n    this.importHsv($.extend(true, {}, this.hsva, {v: v}));\n  }\n\n  /**\n   * @param {number} h Ratio from 0.0 to 1.0\n   */\n  setHueRatio(h) {\n    if (h === 0) {\n      return;\n    }\n    this.setHue((1 - h) * 360);\n  }\n\n  /**\n   * @param {number} s Ratio from 0.0 to 1.0\n   */\n  setSaturationRatio(s) {\n    this.setSaturation(s);\n  }\n\n  /**\n   * @param {number} v Ratio from 0.0 to 1.0\n   */\n  setBrightnessRatio(v) {\n    this.setBrightness(1 - v);\n  }\n\n  /**\n   * @param {number} a Ratio from 0.0 to 1.0\n   */\n  setAlphaRatio(a) {\n    this.setAlpha(1 - a);\n  }\n\n  /**\n   * @returns {boolean}\n   */\n  isTransparent() {\n    return this._a === 0;\n  }\n\n  /**\n   * @returns {boolean}\n   */\n  hasTransparency() {\n    return this._a !== 1;\n  }\n\n  /**\n   * @param {string|null} [format] One of \"rgb\", \"prgb\", \"hex\"/\"hex6\", \"hex3\", \"hex8\", \"hsl\", \"hsv\"/\"hsb\", \"name\"\n   * @returns {String}\n   */\n  toString(format = null) {\n    format = format ? getCompatibleFormat(format) : this.format;\n\n    let colorStr = super.toString(format);\n\n    if (colorStr && colorStr.match(/^#[0-9a-f]{3,8}$/i)) {\n      // Support transparent for hex formats\n      if (this.isTransparent() && (this._r === 0) && (this._g === 0) && (this._b === 0)) {\n        return 'transparent';\n      }\n    }\n\n    return colorStr;\n  }\n}\n\nexport default Color;\n\n\n\n// WEBPACK FOOTER //\n// ./src/js/Color.js","// TinyColor v1.4.1\n// https://github.com/bgrins/TinyColor\n// Brian Grinstead, MIT License\n\n(function(Math) {\n\nvar trimLeft = /^\\s+/,\n    trimRight = /\\s+$/,\n    tinyCounter = 0,\n    mathRound = Math.round,\n    mathMin = Math.min,\n    mathMax = Math.max,\n    mathRandom = Math.random;\n\nfunction tinycolor (color, opts) {\n\n    color = (color) ? color : '';\n    opts = opts || { };\n\n    // If input is already a tinycolor, return itself\n    if (color instanceof tinycolor) {\n       return color;\n    }\n    // If we are called as a function, call using new instead\n    if (!(this instanceof tinycolor)) {\n        return new tinycolor(color, opts);\n    }\n\n    var rgb = inputToRGB(color);\n    this._originalInput = color,\n    this._r = rgb.r,\n    this._g = rgb.g,\n    this._b = rgb.b,\n    this._a = rgb.a,\n    this._roundA = mathRound(100*this._a) / 100,\n    this._format = opts.format || rgb.format;\n    this._gradientType = opts.gradientType;\n\n    // Don't let the range of [0,255] come back in [0,1].\n    // Potentially lose a little bit of precision here, but will fix issues where\n    // .5 gets interpreted as half of the total, instead of half of 1\n    // If it was supposed to be 128, this was already taken care of by `inputToRgb`\n    if (this._r < 1) { this._r = mathRound(this._r); }\n    if (this._g < 1) { this._g = mathRound(this._g); }\n    if (this._b < 1) { this._b = mathRound(this._b); }\n\n    this._ok = rgb.ok;\n    this._tc_id = tinyCounter++;\n}\n\ntinycolor.prototype = {\n    isDark: function() {\n        return this.getBrightness() < 128;\n    },\n    isLight: function() {\n        return !this.isDark();\n    },\n    isValid: function() {\n        return this._ok;\n    },\n    getOriginalInput: function() {\n      return this._originalInput;\n    },\n    getFormat: function() {\n        return this._format;\n    },\n    getAlpha: function() {\n        return this._a;\n    },\n    getBrightness: function() {\n        //http://www.w3.org/TR/AERT#color-contrast\n        var rgb = this.toRgb();\n        return (rgb.r * 299 + rgb.g * 587 + rgb.b * 114) / 1000;\n    },\n    getLuminance: function() {\n        //http://www.w3.org/TR/2008/REC-WCAG20-20081211/#relativeluminancedef\n        var rgb = this.toRgb();\n        var RsRGB, GsRGB, BsRGB, R, G, B;\n        RsRGB = rgb.r/255;\n        GsRGB = rgb.g/255;\n        BsRGB = rgb.b/255;\n\n        if (RsRGB <= 0.03928) {R = RsRGB / 12.92;} else {R = Math.pow(((RsRGB + 0.055) / 1.055), 2.4);}\n        if (GsRGB <= 0.03928) {G = GsRGB / 12.92;} else {G = Math.pow(((GsRGB + 0.055) / 1.055), 2.4);}\n        if (BsRGB <= 0.03928) {B = BsRGB / 12.92;} else {B = Math.pow(((BsRGB + 0.055) / 1.055), 2.4);}\n        return (0.2126 * R) + (0.7152 * G) + (0.0722 * B);\n    },\n    setAlpha: function(value) {\n        this._a = boundAlpha(value);\n        this._roundA = mathRound(100*this._a) / 100;\n        return this;\n    },\n    toHsv: function() {\n        var hsv = rgbToHsv(this._r, this._g, this._b);\n        return { h: hsv.h * 360, s: hsv.s, v: hsv.v, a: this._a };\n    },\n    toHsvString: function() {\n        var hsv = rgbToHsv(this._r, this._g, this._b);\n        var h = mathRound(hsv.h * 360), s = mathRound(hsv.s * 100), v = mathRound(hsv.v * 100);\n        return (this._a == 1) ?\n          \"hsv(\"  + h + \", \" + s + \"%, \" + v + \"%)\" :\n          \"hsva(\" + h + \", \" + s + \"%, \" + v + \"%, \"+ this._roundA + \")\";\n    },\n    toHsl: function() {\n        var hsl = rgbToHsl(this._r, this._g, this._b);\n        return { h: hsl.h * 360, s: hsl.s, l: hsl.l, a: this._a };\n    },\n    toHslString: function() {\n        var hsl = rgbToHsl(this._r, this._g, this._b);\n        var h = mathRound(hsl.h * 360), s = mathRound(hsl.s * 100), l = mathRound(hsl.l * 100);\n        return (this._a == 1) ?\n          \"hsl(\"  + h + \", \" + s + \"%, \" + l + \"%)\" :\n          \"hsla(\" + h + \", \" + s + \"%, \" + l + \"%, \"+ this._roundA + \")\";\n    },\n    toHex: function(allow3Char) {\n        return rgbToHex(this._r, this._g, this._b, allow3Char);\n    },\n    toHexString: function(allow3Char) {\n        return '#' + this.toHex(allow3Char);\n    },\n    toHex8: function(allow4Char) {\n        return rgbaToHex(this._r, this._g, this._b, this._a, allow4Char);\n    },\n    toHex8String: function(allow4Char) {\n        return '#' + this.toHex8(allow4Char);\n    },\n    toRgb: function() {\n        return { r: mathRound(this._r), g: mathRound(this._g), b: mathRound(this._b), a: this._a };\n    },\n    toRgbString: function() {\n        return (this._a == 1) ?\n          \"rgb(\"  + mathRound(this._r) + \", \" + mathRound(this._g) + \", \" + mathRound(this._b) + \")\" :\n          \"rgba(\" + mathRound(this._r) + \", \" + mathRound(this._g) + \", \" + mathRound(this._b) + \", \" + this._roundA + \")\";\n    },\n    toPercentageRgb: function() {\n        return { r: mathRound(bound01(this._r, 255) * 100) + \"%\", g: mathRound(bound01(this._g, 255) * 100) + \"%\", b: mathRound(bound01(this._b, 255) * 100) + \"%\", a: this._a };\n    },\n    toPercentageRgbString: function() {\n        return (this._a == 1) ?\n          \"rgb(\"  + mathRound(bound01(this._r, 255) * 100) + \"%, \" + mathRound(bound01(this._g, 255) * 100) + \"%, \" + mathRound(bound01(this._b, 255) * 100) + \"%)\" :\n          \"rgba(\" + mathRound(bound01(this._r, 255) * 100) + \"%, \" + mathRound(bound01(this._g, 255) * 100) + \"%, \" + mathRound(bound01(this._b, 255) * 100) + \"%, \" + this._roundA + \")\";\n    },\n    toName: function() {\n        if (this._a === 0) {\n            return \"transparent\";\n        }\n\n        if (this._a < 1) {\n            return false;\n        }\n\n        return hexNames[rgbToHex(this._r, this._g, this._b, true)] || false;\n    },\n    toFilter: function(secondColor) {\n        var hex8String = '#' + rgbaToArgbHex(this._r, this._g, this._b, this._a);\n        var secondHex8String = hex8String;\n        var gradientType = this._gradientType ? \"GradientType = 1, \" : \"\";\n\n        if (secondColor) {\n            var s = tinycolor(secondColor);\n            secondHex8String = '#' + rgbaToArgbHex(s._r, s._g, s._b, s._a);\n        }\n\n        return \"progid:DXImageTransform.Microsoft.gradient(\"+gradientType+\"startColorstr=\"+hex8String+\",endColorstr=\"+secondHex8String+\")\";\n    },\n    toString: function(format) {\n        var formatSet = !!format;\n        format = format || this._format;\n\n        var formattedString = false;\n        var hasAlpha = this._a < 1 && this._a >= 0;\n        var needsAlphaFormat = !formatSet && hasAlpha && (format === \"hex\" || format === \"hex6\" || format === \"hex3\" || format === \"hex4\" || format === \"hex8\" || format === \"name\");\n\n        if (needsAlphaFormat) {\n            // Special case for \"transparent\", all other non-alpha formats\n            // will return rgba when there is transparency.\n            if (format === \"name\" && this._a === 0) {\n                return this.toName();\n            }\n            return this.toRgbString();\n        }\n        if (format === \"rgb\") {\n            formattedString = this.toRgbString();\n        }\n        if (format === \"prgb\") {\n            formattedString = this.toPercentageRgbString();\n        }\n        if (format === \"hex\" || format === \"hex6\") {\n            formattedString = this.toHexString();\n        }\n        if (format === \"hex3\") {\n            formattedString = this.toHexString(true);\n        }\n        if (format === \"hex4\") {\n            formattedString = this.toHex8String(true);\n        }\n        if (format === \"hex8\") {\n            formattedString = this.toHex8String();\n        }\n        if (format === \"name\") {\n            formattedString = this.toName();\n        }\n        if (format === \"hsl\") {\n            formattedString = this.toHslString();\n        }\n        if (format === \"hsv\") {\n            formattedString = this.toHsvString();\n        }\n\n        return formattedString || this.toHexString();\n    },\n    clone: function() {\n        return tinycolor(this.toString());\n    },\n\n    _applyModification: function(fn, args) {\n        var color = fn.apply(null, [this].concat([].slice.call(args)));\n        this._r = color._r;\n        this._g = color._g;\n        this._b = color._b;\n        this.setAlpha(color._a);\n        return this;\n    },\n    lighten: function() {\n        return this._applyModification(lighten, arguments);\n    },\n    brighten: function() {\n        return this._applyModification(brighten, arguments);\n    },\n    darken: function() {\n        return this._applyModification(darken, arguments);\n    },\n    desaturate: function() {\n        return this._applyModification(desaturate, arguments);\n    },\n    saturate: function() {\n        return this._applyModification(saturate, arguments);\n    },\n    greyscale: function() {\n        return this._applyModification(greyscale, arguments);\n    },\n    spin: function() {\n        return this._applyModification(spin, arguments);\n    },\n\n    _applyCombination: function(fn, args) {\n        return fn.apply(null, [this].concat([].slice.call(args)));\n    },\n    analogous: function() {\n        return this._applyCombination(analogous, arguments);\n    },\n    complement: function() {\n        return this._applyCombination(complement, arguments);\n    },\n    monochromatic: function() {\n        return this._applyCombination(monochromatic, arguments);\n    },\n    splitcomplement: function() {\n        return this._applyCombination(splitcomplement, arguments);\n    },\n    triad: function() {\n        return this._applyCombination(triad, arguments);\n    },\n    tetrad: function() {\n        return this._applyCombination(tetrad, arguments);\n    }\n};\n\n// If input is an object, force 1 into \"1.0\" to handle ratios properly\n// String input requires \"1.0\" as input, so 1 will be treated as 1\ntinycolor.fromRatio = function(color, opts) {\n    if (typeof color == \"object\") {\n        var newColor = {};\n        for (var i in color) {\n            if (color.hasOwnProperty(i)) {\n                if (i === \"a\") {\n                    newColor[i] = color[i];\n                }\n                else {\n                    newColor[i] = convertToPercentage(color[i]);\n                }\n            }\n        }\n        color = newColor;\n    }\n\n    return tinycolor(color, opts);\n};\n\n// Given a string or object, convert that input to RGB\n// Possible string inputs:\n//\n//     \"red\"\n//     \"#f00\" or \"f00\"\n//     \"#ff0000\" or \"ff0000\"\n//     \"#ff000000\" or \"ff000000\"\n//     \"rgb 255 0 0\" or \"rgb (255, 0, 0)\"\n//     \"rgb 1.0 0 0\" or \"rgb (1, 0, 0)\"\n//     \"rgba (255, 0, 0, 1)\" or \"rgba 255, 0, 0, 1\"\n//     \"rgba (1.0, 0, 0, 1)\" or \"rgba 1.0, 0, 0, 1\"\n//     \"hsl(0, 100%, 50%)\" or \"hsl 0 100% 50%\"\n//     \"hsla(0, 100%, 50%, 1)\" or \"hsla 0 100% 50%, 1\"\n//     \"hsv(0, 100%, 100%)\" or \"hsv 0 100% 100%\"\n//\nfunction inputToRGB(color) {\n\n    var rgb = { r: 0, g: 0, b: 0 };\n    var a = 1;\n    var s = null;\n    var v = null;\n    var l = null;\n    var ok = false;\n    var format = false;\n\n    if (typeof color == \"string\") {\n        color = stringInputToObject(color);\n    }\n\n    if (typeof color == \"object\") {\n        if (isValidCSSUnit(color.r) && isValidCSSUnit(color.g) && isValidCSSUnit(color.b)) {\n            rgb = rgbToRgb(color.r, color.g, color.b);\n            ok = true;\n            format = String(color.r).substr(-1) === \"%\" ? \"prgb\" : \"rgb\";\n        }\n        else if (isValidCSSUnit(color.h) && isValidCSSUnit(color.s) && isValidCSSUnit(color.v)) {\n            s = convertToPercentage(color.s);\n            v = convertToPercentage(color.v);\n            rgb = hsvToRgb(color.h, s, v);\n            ok = true;\n            format = \"hsv\";\n        }\n        else if (isValidCSSUnit(color.h) && isValidCSSUnit(color.s) && isValidCSSUnit(color.l)) {\n            s = convertToPercentage(color.s);\n            l = convertToPercentage(color.l);\n            rgb = hslToRgb(color.h, s, l);\n            ok = true;\n            format = \"hsl\";\n        }\n\n        if (color.hasOwnProperty(\"a\")) {\n            a = color.a;\n        }\n    }\n\n    a = boundAlpha(a);\n\n    return {\n        ok: ok,\n        format: color.format || format,\n        r: mathMin(255, mathMax(rgb.r, 0)),\n        g: mathMin(255, mathMax(rgb.g, 0)),\n        b: mathMin(255, mathMax(rgb.b, 0)),\n        a: a\n    };\n}\n\n\n// Conversion Functions\n// --------------------\n\n// `rgbToHsl`, `rgbToHsv`, `hslToRgb`, `hsvToRgb` modified from:\n// <http://mjijackson.com/2008/02/rgb-to-hsl-and-rgb-to-hsv-color-model-conversion-algorithms-in-javascript>\n\n// `rgbToRgb`\n// Handle bounds / percentage checking to conform to CSS color spec\n// <http://www.w3.org/TR/css3-color/>\n// *Assumes:* r, g, b in [0, 255] or [0, 1]\n// *Returns:* { r, g, b } in [0, 255]\nfunction rgbToRgb(r, g, b){\n    return {\n        r: bound01(r, 255) * 255,\n        g: bound01(g, 255) * 255,\n        b: bound01(b, 255) * 255\n    };\n}\n\n// `rgbToHsl`\n// Converts an RGB color value to HSL.\n// *Assumes:* r, g, and b are contained in [0, 255] or [0, 1]\n// *Returns:* { h, s, l } in [0,1]\nfunction rgbToHsl(r, g, b) {\n\n    r = bound01(r, 255);\n    g = bound01(g, 255);\n    b = bound01(b, 255);\n\n    var max = mathMax(r, g, b), min = mathMin(r, g, b);\n    var h, s, l = (max + min) / 2;\n\n    if(max == min) {\n        h = s = 0; // achromatic\n    }\n    else {\n        var d = max - min;\n        s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n        switch(max) {\n            case r: h = (g - b) / d + (g < b ? 6 : 0); break;\n            case g: h = (b - r) / d + 2; break;\n            case b: h = (r - g) / d + 4; break;\n        }\n\n        h /= 6;\n    }\n\n    return { h: h, s: s, l: l };\n}\n\n// `hslToRgb`\n// Converts an HSL color value to RGB.\n// *Assumes:* h is contained in [0, 1] or [0, 360] and s and l are contained [0, 1] or [0, 100]\n// *Returns:* { r, g, b } in the set [0, 255]\nfunction hslToRgb(h, s, l) {\n    var r, g, b;\n\n    h = bound01(h, 360);\n    s = bound01(s, 100);\n    l = bound01(l, 100);\n\n    function hue2rgb(p, q, t) {\n        if(t < 0) t += 1;\n        if(t > 1) t -= 1;\n        if(t < 1/6) return p + (q - p) * 6 * t;\n        if(t < 1/2) return q;\n        if(t < 2/3) return p + (q - p) * (2/3 - t) * 6;\n        return p;\n    }\n\n    if(s === 0) {\n        r = g = b = l; // achromatic\n    }\n    else {\n        var q = l < 0.5 ? l * (1 + s) : l + s - l * s;\n        var p = 2 * l - q;\n        r = hue2rgb(p, q, h + 1/3);\n        g = hue2rgb(p, q, h);\n        b = hue2rgb(p, q, h - 1/3);\n    }\n\n    return { r: r * 255, g: g * 255, b: b * 255 };\n}\n\n// `rgbToHsv`\n// Converts an RGB color value to HSV\n// *Assumes:* r, g, and b are contained in the set [0, 255] or [0, 1]\n// *Returns:* { h, s, v } in [0,1]\nfunction rgbToHsv(r, g, b) {\n\n    r = bound01(r, 255);\n    g = bound01(g, 255);\n    b = bound01(b, 255);\n\n    var max = mathMax(r, g, b), min = mathMin(r, g, b);\n    var h, s, v = max;\n\n    var d = max - min;\n    s = max === 0 ? 0 : d / max;\n\n    if(max == min) {\n        h = 0; // achromatic\n    }\n    else {\n        switch(max) {\n            case r: h = (g - b) / d + (g < b ? 6 : 0); break;\n            case g: h = (b - r) / d + 2; break;\n            case b: h = (r - g) / d + 4; break;\n        }\n        h /= 6;\n    }\n    return { h: h, s: s, v: v };\n}\n\n// `hsvToRgb`\n// Converts an HSV color value to RGB.\n// *Assumes:* h is contained in [0, 1] or [0, 360] and s and v are contained in [0, 1] or [0, 100]\n// *Returns:* { r, g, b } in the set [0, 255]\n function hsvToRgb(h, s, v) {\n\n    h = bound01(h, 360) * 6;\n    s = bound01(s, 100);\n    v = bound01(v, 100);\n\n    var i = Math.floor(h),\n        f = h - i,\n        p = v * (1 - s),\n        q = v * (1 - f * s),\n        t = v * (1 - (1 - f) * s),\n        mod = i % 6,\n        r = [v, q, p, p, t, v][mod],\n        g = [t, v, v, q, p, p][mod],\n        b = [p, p, t, v, v, q][mod];\n\n    return { r: r * 255, g: g * 255, b: b * 255 };\n}\n\n// `rgbToHex`\n// Converts an RGB color to hex\n// Assumes r, g, and b are contained in the set [0, 255]\n// Returns a 3 or 6 character hex\nfunction rgbToHex(r, g, b, allow3Char) {\n\n    var hex = [\n        pad2(mathRound(r).toString(16)),\n        pad2(mathRound(g).toString(16)),\n        pad2(mathRound(b).toString(16))\n    ];\n\n    // Return a 3 character hex if possible\n    if (allow3Char && hex[0].charAt(0) == hex[0].charAt(1) && hex[1].charAt(0) == hex[1].charAt(1) && hex[2].charAt(0) == hex[2].charAt(1)) {\n        return hex[0].charAt(0) + hex[1].charAt(0) + hex[2].charAt(0);\n    }\n\n    return hex.join(\"\");\n}\n\n// `rgbaToHex`\n// Converts an RGBA color plus alpha transparency to hex\n// Assumes r, g, b are contained in the set [0, 255] and\n// a in [0, 1]. Returns a 4 or 8 character rgba hex\nfunction rgbaToHex(r, g, b, a, allow4Char) {\n\n    var hex = [\n        pad2(mathRound(r).toString(16)),\n        pad2(mathRound(g).toString(16)),\n        pad2(mathRound(b).toString(16)),\n        pad2(convertDecimalToHex(a))\n    ];\n\n    // Return a 4 character hex if possible\n    if (allow4Char && hex[0].charAt(0) == hex[0].charAt(1) && hex[1].charAt(0) == hex[1].charAt(1) && hex[2].charAt(0) == hex[2].charAt(1) && hex[3].charAt(0) == hex[3].charAt(1)) {\n        return hex[0].charAt(0) + hex[1].charAt(0) + hex[2].charAt(0) + hex[3].charAt(0);\n    }\n\n    return hex.join(\"\");\n}\n\n// `rgbaToArgbHex`\n// Converts an RGBA color to an ARGB Hex8 string\n// Rarely used, but required for \"toFilter()\"\nfunction rgbaToArgbHex(r, g, b, a) {\n\n    var hex = [\n        pad2(convertDecimalToHex(a)),\n        pad2(mathRound(r).toString(16)),\n        pad2(mathRound(g).toString(16)),\n        pad2(mathRound(b).toString(16))\n    ];\n\n    return hex.join(\"\");\n}\n\n// `equals`\n// Can be called with any tinycolor input\ntinycolor.equals = function (color1, color2) {\n    if (!color1 || !color2) { return false; }\n    return tinycolor(color1).toRgbString() == tinycolor(color2).toRgbString();\n};\n\ntinycolor.random = function() {\n    return tinycolor.fromRatio({\n        r: mathRandom(),\n        g: mathRandom(),\n        b: mathRandom()\n    });\n};\n\n\n// Modification Functions\n// ----------------------\n// Thanks to less.js for some of the basics here\n// <https://github.com/cloudhead/less.js/blob/master/lib/less/functions.js>\n\nfunction desaturate(color, amount) {\n    amount = (amount === 0) ? 0 : (amount || 10);\n    var hsl = tinycolor(color).toHsl();\n    hsl.s -= amount / 100;\n    hsl.s = clamp01(hsl.s);\n    return tinycolor(hsl);\n}\n\nfunction saturate(color, amount) {\n    amount = (amount === 0) ? 0 : (amount || 10);\n    var hsl = tinycolor(color).toHsl();\n    hsl.s += amount / 100;\n    hsl.s = clamp01(hsl.s);\n    return tinycolor(hsl);\n}\n\nfunction greyscale(color) {\n    return tinycolor(color).desaturate(100);\n}\n\nfunction lighten (color, amount) {\n    amount = (amount === 0) ? 0 : (amount || 10);\n    var hsl = tinycolor(color).toHsl();\n    hsl.l += amount / 100;\n    hsl.l = clamp01(hsl.l);\n    return tinycolor(hsl);\n}\n\nfunction brighten(color, amount) {\n    amount = (amount === 0) ? 0 : (amount || 10);\n    var rgb = tinycolor(color).toRgb();\n    rgb.r = mathMax(0, mathMin(255, rgb.r - mathRound(255 * - (amount / 100))));\n    rgb.g = mathMax(0, mathMin(255, rgb.g - mathRound(255 * - (amount / 100))));\n    rgb.b = mathMax(0, mathMin(255, rgb.b - mathRound(255 * - (amount / 100))));\n    return tinycolor(rgb);\n}\n\nfunction darken (color, amount) {\n    amount = (amount === 0) ? 0 : (amount || 10);\n    var hsl = tinycolor(color).toHsl();\n    hsl.l -= amount / 100;\n    hsl.l = clamp01(hsl.l);\n    return tinycolor(hsl);\n}\n\n// Spin takes a positive or negative amount within [-360, 360] indicating the change of hue.\n// Values outside of this range will be wrapped into this range.\nfunction spin(color, amount) {\n    var hsl = tinycolor(color).toHsl();\n    var hue = (hsl.h + amount) % 360;\n    hsl.h = hue < 0 ? 360 + hue : hue;\n    return tinycolor(hsl);\n}\n\n// Combination Functions\n// ---------------------\n// Thanks to jQuery xColor for some of the ideas behind these\n// <https://github.com/infusion/jQuery-xcolor/blob/master/jquery.xcolor.js>\n\nfunction complement(color) {\n    var hsl = tinycolor(color).toHsl();\n    hsl.h = (hsl.h + 180) % 360;\n    return tinycolor(hsl);\n}\n\nfunction triad(color) {\n    var hsl = tinycolor(color).toHsl();\n    var h = hsl.h;\n    return [\n        tinycolor(color),\n        tinycolor({ h: (h + 120) % 360, s: hsl.s, l: hsl.l }),\n        tinycolor({ h: (h + 240) % 360, s: hsl.s, l: hsl.l })\n    ];\n}\n\nfunction tetrad(color) {\n    var hsl = tinycolor(color).toHsl();\n    var h = hsl.h;\n    return [\n        tinycolor(color),\n        tinycolor({ h: (h + 90) % 360, s: hsl.s, l: hsl.l }),\n        tinycolor({ h: (h + 180) % 360, s: hsl.s, l: hsl.l }),\n        tinycolor({ h: (h + 270) % 360, s: hsl.s, l: hsl.l })\n    ];\n}\n\nfunction splitcomplement(color) {\n    var hsl = tinycolor(color).toHsl();\n    var h = hsl.h;\n    return [\n        tinycolor(color),\n        tinycolor({ h: (h + 72) % 360, s: hsl.s, l: hsl.l}),\n        tinycolor({ h: (h + 216) % 360, s: hsl.s, l: hsl.l})\n    ];\n}\n\nfunction analogous(color, results, slices) {\n    results = results || 6;\n    slices = slices || 30;\n\n    var hsl = tinycolor(color).toHsl();\n    var part = 360 / slices;\n    var ret = [tinycolor(color)];\n\n    for (hsl.h = ((hsl.h - (part * results >> 1)) + 720) % 360; --results; ) {\n        hsl.h = (hsl.h + part) % 360;\n        ret.push(tinycolor(hsl));\n    }\n    return ret;\n}\n\nfunction monochromatic(color, results) {\n    results = results || 6;\n    var hsv = tinycolor(color).toHsv();\n    var h = hsv.h, s = hsv.s, v = hsv.v;\n    var ret = [];\n    var modification = 1 / results;\n\n    while (results--) {\n        ret.push(tinycolor({ h: h, s: s, v: v}));\n        v = (v + modification) % 1;\n    }\n\n    return ret;\n}\n\n// Utility Functions\n// ---------------------\n\ntinycolor.mix = function(color1, color2, amount) {\n    amount = (amount === 0) ? 0 : (amount || 50);\n\n    var rgb1 = tinycolor(color1).toRgb();\n    var rgb2 = tinycolor(color2).toRgb();\n\n    var p = amount / 100;\n\n    var rgba = {\n        r: ((rgb2.r - rgb1.r) * p) + rgb1.r,\n        g: ((rgb2.g - rgb1.g) * p) + rgb1.g,\n        b: ((rgb2.b - rgb1.b) * p) + rgb1.b,\n        a: ((rgb2.a - rgb1.a) * p) + rgb1.a\n    };\n\n    return tinycolor(rgba);\n};\n\n\n// Readability Functions\n// ---------------------\n// <http://www.w3.org/TR/2008/REC-WCAG20-20081211/#contrast-ratiodef (WCAG Version 2)\n\n// `contrast`\n// Analyze the 2 colors and returns the color contrast defined by (WCAG Version 2)\ntinycolor.readability = function(color1, color2) {\n    var c1 = tinycolor(color1);\n    var c2 = tinycolor(color2);\n    return (Math.max(c1.getLuminance(),c2.getLuminance())+0.05) / (Math.min(c1.getLuminance(),c2.getLuminance())+0.05);\n};\n\n// `isReadable`\n// Ensure that foreground and background color combinations meet WCAG2 guidelines.\n// The third argument is an optional Object.\n//      the 'level' property states 'AA' or 'AAA' - if missing or invalid, it defaults to 'AA';\n//      the 'size' property states 'large' or 'small' - if missing or invalid, it defaults to 'small'.\n// If the entire object is absent, isReadable defaults to {level:\"AA\",size:\"small\"}.\n\n// *Example*\n//    tinycolor.isReadable(\"#000\", \"#111\") => false\n//    tinycolor.isReadable(\"#000\", \"#111\",{level:\"AA\",size:\"large\"}) => false\ntinycolor.isReadable = function(color1, color2, wcag2) {\n    var readability = tinycolor.readability(color1, color2);\n    var wcag2Parms, out;\n\n    out = false;\n\n    wcag2Parms = validateWCAG2Parms(wcag2);\n    switch (wcag2Parms.level + wcag2Parms.size) {\n        case \"AAsmall\":\n        case \"AAAlarge\":\n            out = readability >= 4.5;\n            break;\n        case \"AAlarge\":\n            out = readability >= 3;\n            break;\n        case \"AAAsmall\":\n            out = readability >= 7;\n            break;\n    }\n    return out;\n\n};\n\n// `mostReadable`\n// Given a base color and a list of possible foreground or background\n// colors for that base, returns the most readable color.\n// Optionally returns Black or White if the most readable color is unreadable.\n// *Example*\n//    tinycolor.mostReadable(tinycolor.mostReadable(\"#123\", [\"#124\", \"#125\"],{includeFallbackColors:false}).toHexString(); // \"#112255\"\n//    tinycolor.mostReadable(tinycolor.mostReadable(\"#123\", [\"#124\", \"#125\"],{includeFallbackColors:true}).toHexString();  // \"#ffffff\"\n//    tinycolor.mostReadable(\"#a8015a\", [\"#faf3f3\"],{includeFallbackColors:true,level:\"AAA\",size:\"large\"}).toHexString(); // \"#faf3f3\"\n//    tinycolor.mostReadable(\"#a8015a\", [\"#faf3f3\"],{includeFallbackColors:true,level:\"AAA\",size:\"small\"}).toHexString(); // \"#ffffff\"\ntinycolor.mostReadable = function(baseColor, colorList, args) {\n    var bestColor = null;\n    var bestScore = 0;\n    var readability;\n    var includeFallbackColors, level, size ;\n    args = args || {};\n    includeFallbackColors = args.includeFallbackColors ;\n    level = args.level;\n    size = args.size;\n\n    for (var i= 0; i < colorList.length ; i++) {\n        readability = tinycolor.readability(baseColor, colorList[i]);\n        if (readability > bestScore) {\n            bestScore = readability;\n            bestColor = tinycolor(colorList[i]);\n        }\n    }\n\n    if (tinycolor.isReadable(baseColor, bestColor, {\"level\":level,\"size\":size}) || !includeFallbackColors) {\n        return bestColor;\n    }\n    else {\n        args.includeFallbackColors=false;\n        return tinycolor.mostReadable(baseColor,[\"#fff\", \"#000\"],args);\n    }\n};\n\n\n// Big List of Colors\n// ------------------\n// <http://www.w3.org/TR/css3-color/#svg-color>\nvar names = tinycolor.names = {\n    aliceblue: \"f0f8ff\",\n    antiquewhite: \"faebd7\",\n    aqua: \"0ff\",\n    aquamarine: \"7fffd4\",\n    azure: \"f0ffff\",\n    beige: \"f5f5dc\",\n    bisque: \"ffe4c4\",\n    black: \"000\",\n    blanchedalmond: \"ffebcd\",\n    blue: \"00f\",\n    blueviolet: \"8a2be2\",\n    brown: \"a52a2a\",\n    burlywood: \"deb887\",\n    burntsienna: \"ea7e5d\",\n    cadetblue: \"5f9ea0\",\n    chartreuse: \"7fff00\",\n    chocolate: \"d2691e\",\n    coral: \"ff7f50\",\n    cornflowerblue: \"6495ed\",\n    cornsilk: \"fff8dc\",\n    crimson: \"dc143c\",\n    cyan: \"0ff\",\n    darkblue: \"00008b\",\n    darkcyan: \"008b8b\",\n    darkgoldenrod: \"b8860b\",\n    darkgray: \"a9a9a9\",\n    darkgreen: \"006400\",\n    darkgrey: \"a9a9a9\",\n    darkkhaki: \"bdb76b\",\n    darkmagenta: \"8b008b\",\n    darkolivegreen: \"556b2f\",\n    darkorange: \"ff8c00\",\n    darkorchid: \"9932cc\",\n    darkred: \"8b0000\",\n    darksalmon: \"e9967a\",\n    darkseagreen: \"8fbc8f\",\n    darkslateblue: \"483d8b\",\n    darkslategray: \"2f4f4f\",\n    darkslategrey: \"2f4f4f\",\n    darkturquoise: \"00ced1\",\n    darkviolet: \"9400d3\",\n    deeppink: \"ff1493\",\n    deepskyblue: \"00bfff\",\n    dimgray: \"696969\",\n    dimgrey: \"696969\",\n    dodgerblue: \"1e90ff\",\n    firebrick: \"b22222\",\n    floralwhite: \"fffaf0\",\n    forestgreen: \"228b22\",\n    fuchsia: \"f0f\",\n    gainsboro: \"dcdcdc\",\n    ghostwhite: \"f8f8ff\",\n    gold: \"ffd700\",\n    goldenrod: \"daa520\",\n    gray: \"808080\",\n    green: \"008000\",\n    greenyellow: \"adff2f\",\n    grey: \"808080\",\n    honeydew: \"f0fff0\",\n    hotpink: \"ff69b4\",\n    indianred: \"cd5c5c\",\n    indigo: \"4b0082\",\n    ivory: \"fffff0\",\n    khaki: \"f0e68c\",\n    lavender: \"e6e6fa\",\n    lavenderblush: \"fff0f5\",\n    lawngreen: \"7cfc00\",\n    lemonchiffon: \"fffacd\",\n    lightblue: \"add8e6\",\n    lightcoral: \"f08080\",\n    lightcyan: \"e0ffff\",\n    lightgoldenrodyellow: \"fafad2\",\n    lightgray: \"d3d3d3\",\n    lightgreen: \"90ee90\",\n    lightgrey: \"d3d3d3\",\n    lightpink: \"ffb6c1\",\n    lightsalmon: \"ffa07a\",\n    lightseagreen: \"20b2aa\",\n    lightskyblue: \"87cefa\",\n    lightslategray: \"789\",\n    lightslategrey: \"789\",\n    lightsteelblue: \"b0c4de\",\n    lightyellow: \"ffffe0\",\n    lime: \"0f0\",\n    limegreen: \"32cd32\",\n    linen: \"faf0e6\",\n    magenta: \"f0f\",\n    maroon: \"800000\",\n    mediumaquamarine: \"66cdaa\",\n    mediumblue: \"0000cd\",\n    mediumorchid: \"ba55d3\",\n    mediumpurple: \"9370db\",\n    mediumseagreen: \"3cb371\",\n    mediumslateblue: \"7b68ee\",\n    mediumspringgreen: \"00fa9a\",\n    mediumturquoise: \"48d1cc\",\n    mediumvioletred: \"c71585\",\n    midnightblue: \"191970\",\n    mintcream: \"f5fffa\",\n    mistyrose: \"ffe4e1\",\n    moccasin: \"ffe4b5\",\n    navajowhite: \"ffdead\",\n    navy: \"000080\",\n    oldlace: \"fdf5e6\",\n    olive: \"808000\",\n    olivedrab: \"6b8e23\",\n    orange: \"ffa500\",\n    orangered: \"ff4500\",\n    orchid: \"da70d6\",\n    palegoldenrod: \"eee8aa\",\n    palegreen: \"98fb98\",\n    paleturquoise: \"afeeee\",\n    palevioletred: \"db7093\",\n    papayawhip: \"ffefd5\",\n    peachpuff: \"ffdab9\",\n    peru: \"cd853f\",\n    pink: \"ffc0cb\",\n    plum: \"dda0dd\",\n    powderblue: \"b0e0e6\",\n    purple: \"800080\",\n    rebeccapurple: \"663399\",\n    red: \"f00\",\n    rosybrown: \"bc8f8f\",\n    royalblue: \"4169e1\",\n    saddlebrown: \"8b4513\",\n    salmon: \"fa8072\",\n    sandybrown: \"f4a460\",\n    seagreen: \"2e8b57\",\n    seashell: \"fff5ee\",\n    sienna: \"a0522d\",\n    silver: \"c0c0c0\",\n    skyblue: \"87ceeb\",\n    slateblue: \"6a5acd\",\n    slategray: \"708090\",\n    slategrey: \"708090\",\n    snow: \"fffafa\",\n    springgreen: \"00ff7f\",\n    steelblue: \"4682b4\",\n    tan: \"d2b48c\",\n    teal: \"008080\",\n    thistle: \"d8bfd8\",\n    tomato: \"ff6347\",\n    turquoise: \"40e0d0\",\n    violet: \"ee82ee\",\n    wheat: \"f5deb3\",\n    white: \"fff\",\n    whitesmoke: \"f5f5f5\",\n    yellow: \"ff0\",\n    yellowgreen: \"9acd32\"\n};\n\n// Make it easy to access colors via `hexNames[hex]`\nvar hexNames = tinycolor.hexNames = flip(names);\n\n\n// Utilities\n// ---------\n\n// `{ 'name1': 'val1' }` becomes `{ 'val1': 'name1' }`\nfunction flip(o) {\n    var flipped = { };\n    for (var i in o) {\n        if (o.hasOwnProperty(i)) {\n            flipped[o[i]] = i;\n        }\n    }\n    return flipped;\n}\n\n// Return a valid alpha value [0,1] with all invalid values being set to 1\nfunction boundAlpha(a) {\n    a = parseFloat(a);\n\n    if (isNaN(a) || a < 0 || a > 1) {\n        a = 1;\n    }\n\n    return a;\n}\n\n// Take input from [0, n] and return it as [0, 1]\nfunction bound01(n, max) {\n    if (isOnePointZero(n)) { n = \"100%\"; }\n\n    var processPercent = isPercentage(n);\n    n = mathMin(max, mathMax(0, parseFloat(n)));\n\n    // Automatically convert percentage into number\n    if (processPercent) {\n        n = parseInt(n * max, 10) / 100;\n    }\n\n    // Handle floating point rounding errors\n    if ((Math.abs(n - max) < 0.000001)) {\n        return 1;\n    }\n\n    // Convert into [0, 1] range if it isn't already\n    return (n % max) / parseFloat(max);\n}\n\n// Force a number between 0 and 1\nfunction clamp01(val) {\n    return mathMin(1, mathMax(0, val));\n}\n\n// Parse a base-16 hex value into a base-10 integer\nfunction parseIntFromHex(val) {\n    return parseInt(val, 16);\n}\n\n// Need to handle 1.0 as 100%, since once it is a number, there is no difference between it and 1\n// <http://stackoverflow.com/questions/7422072/javascript-how-to-detect-number-as-a-decimal-including-1-0>\nfunction isOnePointZero(n) {\n    return typeof n == \"string\" && n.indexOf('.') != -1 && parseFloat(n) === 1;\n}\n\n// Check to see if string passed in is a percentage\nfunction isPercentage(n) {\n    return typeof n === \"string\" && n.indexOf('%') != -1;\n}\n\n// Force a hex value to have 2 characters\nfunction pad2(c) {\n    return c.length == 1 ? '0' + c : '' + c;\n}\n\n// Replace a decimal with it's percentage value\nfunction convertToPercentage(n) {\n    if (n <= 1) {\n        n = (n * 100) + \"%\";\n    }\n\n    return n;\n}\n\n// Converts a decimal to a hex value\nfunction convertDecimalToHex(d) {\n    return Math.round(parseFloat(d) * 255).toString(16);\n}\n// Converts a hex value to a decimal\nfunction convertHexToDecimal(h) {\n    return (parseIntFromHex(h) / 255);\n}\n\nvar matchers = (function() {\n\n    // <http://www.w3.org/TR/css3-values/#integers>\n    var CSS_INTEGER = \"[-\\\\+]?\\\\d+%?\";\n\n    // <http://www.w3.org/TR/css3-values/#number-value>\n    var CSS_NUMBER = \"[-\\\\+]?\\\\d*\\\\.\\\\d+%?\";\n\n    // Allow positive/negative integer/number.  Don't capture the either/or, just the entire outcome.\n    var CSS_UNIT = \"(?:\" + CSS_NUMBER + \")|(?:\" + CSS_INTEGER + \")\";\n\n    // Actual matching.\n    // Parentheses and commas are optional, but not required.\n    // Whitespace can take the place of commas or opening paren\n    var PERMISSIVE_MATCH3 = \"[\\\\s|\\\\(]+(\" + CSS_UNIT + \")[,|\\\\s]+(\" + CSS_UNIT + \")[,|\\\\s]+(\" + CSS_UNIT + \")\\\\s*\\\\)?\";\n    var PERMISSIVE_MATCH4 = \"[\\\\s|\\\\(]+(\" + CSS_UNIT + \")[,|\\\\s]+(\" + CSS_UNIT + \")[,|\\\\s]+(\" + CSS_UNIT + \")[,|\\\\s]+(\" + CSS_UNIT + \")\\\\s*\\\\)?\";\n\n    return {\n        CSS_UNIT: new RegExp(CSS_UNIT),\n        rgb: new RegExp(\"rgb\" + PERMISSIVE_MATCH3),\n        rgba: new RegExp(\"rgba\" + PERMISSIVE_MATCH4),\n        hsl: new RegExp(\"hsl\" + PERMISSIVE_MATCH3),\n        hsla: new RegExp(\"hsla\" + PERMISSIVE_MATCH4),\n        hsv: new RegExp(\"hsv\" + PERMISSIVE_MATCH3),\n        hsva: new RegExp(\"hsva\" + PERMISSIVE_MATCH4),\n        hex3: /^#?([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})$/,\n        hex6: /^#?([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})$/,\n        hex4: /^#?([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})$/,\n        hex8: /^#?([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})$/\n    };\n})();\n\n// `isValidCSSUnit`\n// Take in a single string / number and check to see if it looks like a CSS unit\n// (see `matchers` above for definition).\nfunction isValidCSSUnit(color) {\n    return !!matchers.CSS_UNIT.exec(color);\n}\n\n// `stringInputToObject`\n// Permissive string parsing.  Take in a number of formats, and output an object\n// based on detected format.  Returns `{ r, g, b }` or `{ h, s, l }` or `{ h, s, v}`\nfunction stringInputToObject(color) {\n\n    color = color.replace(trimLeft,'').replace(trimRight, '').toLowerCase();\n    var named = false;\n    if (names[color]) {\n        color = names[color];\n        named = true;\n    }\n    else if (color == 'transparent') {\n        return { r: 0, g: 0, b: 0, a: 0, format: \"name\" };\n    }\n\n    // Try to match string input using regular expressions.\n    // Keep most of the number bounding out of this function - don't worry about [0,1] or [0,100] or [0,360]\n    // Just return an object and let the conversion functions handle that.\n    // This way the result will be the same whether the tinycolor is initialized with string or object.\n    var match;\n    if ((match = matchers.rgb.exec(color))) {\n        return { r: match[1], g: match[2], b: match[3] };\n    }\n    if ((match = matchers.rgba.exec(color))) {\n        return { r: match[1], g: match[2], b: match[3], a: match[4] };\n    }\n    if ((match = matchers.hsl.exec(color))) {\n        return { h: match[1], s: match[2], l: match[3] };\n    }\n    if ((match = matchers.hsla.exec(color))) {\n        return { h: match[1], s: match[2], l: match[3], a: match[4] };\n    }\n    if ((match = matchers.hsv.exec(color))) {\n        return { h: match[1], s: match[2], v: match[3] };\n    }\n    if ((match = matchers.hsva.exec(color))) {\n        return { h: match[1], s: match[2], v: match[3], a: match[4] };\n    }\n    if ((match = matchers.hex8.exec(color))) {\n        return {\n            r: parseIntFromHex(match[1]),\n            g: parseIntFromHex(match[2]),\n            b: parseIntFromHex(match[3]),\n            a: convertHexToDecimal(match[4]),\n            format: named ? \"name\" : \"hex8\"\n        };\n    }\n    if ((match = matchers.hex6.exec(color))) {\n        return {\n            r: parseIntFromHex(match[1]),\n            g: parseIntFromHex(match[2]),\n            b: parseIntFromHex(match[3]),\n            format: named ? \"name\" : \"hex\"\n        };\n    }\n    if ((match = matchers.hex4.exec(color))) {\n        return {\n            r: parseIntFromHex(match[1] + '' + match[1]),\n            g: parseIntFromHex(match[2] + '' + match[2]),\n            b: parseIntFromHex(match[3] + '' + match[3]),\n            a: convertHexToDecimal(match[4] + '' + match[4]),\n            format: named ? \"name\" : \"hex8\"\n        };\n    }\n    if ((match = matchers.hex3.exec(color))) {\n        return {\n            r: parseIntFromHex(match[1] + '' + match[1]),\n            g: parseIntFromHex(match[2] + '' + match[2]),\n            b: parseIntFromHex(match[3] + '' + match[3]),\n            format: named ? \"name\" : \"hex\"\n        };\n    }\n\n    return false;\n}\n\nfunction validateWCAG2Parms(parms) {\n    // return valid WCAG2 parms for isReadable.\n    // If input parms are invalid, return {\"level\":\"AA\", \"size\":\"small\"}\n    var level, size;\n    parms = parms || {\"level\":\"AA\", \"size\":\"small\"};\n    level = (parms.level || \"AA\").toUpperCase();\n    size = (parms.size || \"small\").toLowerCase();\n    if (level !== \"AA\" && level !== \"AAA\") {\n        level = \"AA\";\n    }\n    if (size !== \"small\" && size !== \"large\") {\n        size = \"small\";\n    }\n    return {\"level\":level, \"size\":size};\n}\n\n// Node: Export function\nif (typeof module !== \"undefined\" && module.exports) {\n    module.exports = tinycolor;\n}\n// AMD/requirejs: Define the module\nelse if (typeof define === 'function' && define.amd) {\n    define(function () {return tinycolor;});\n}\n// Browser: Expose to window\nelse {\n    window.tinycolor = tinycolor;\n}\n\n})(Math);\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/tinycolor2/tinycolor.js\n// module id = 6\n// module chunks = 0 1","'use strict';\n/**\n * @module\n */\n\n/**\n * Colorpicker default options\n */\nexport default {\n  /**\n   * If true, loads the Debugger extension automatically into the current instance\n   * @type {boolean}\n   * @default false\n   */\n  debug: false,\n  /**\n   * Forces a color, ignoring the one from the elements value or data-color attribute.\n   *\n   * @type {(String|Color|boolean)}\n   * @default false\n   */\n  color: false,\n  /**\n   * Forces an specific color format. If false, it will be automatically detected the first time,\n   * but if null it will be always recalculated.\n   *\n   * Note that the ending 'a' of the format meaning \"alpha\" has currently no effect, meaning that rgb is the same as\n   * rgba excepting if the alpha channel is disabled (see useAlpha).\n   *\n   * @type {('rgb'|'rgba'|'prgb'|'prgba'|'hex'|'hex3'|'hex6'|'hex8'|'hsl'|'hsla'|'hsv'|'hsva'|'name'|boolean)}\n   * @default false\n   */\n  format: false,\n  /**\n   * Horizontal mode layout.\n   *\n   * If true, the hue and alpha channel bars will be rendered horizontally, above the saturation selector.\n   *\n   * @type {boolean}\n   * @default false\n   */\n  horizontal: false,\n  /**\n   * Forces to show the colorpicker as an inline element\n   *\n   * @type {boolean}\n   * @default false\n   */\n  inline: false,\n  /**\n   * Children input CSS selector\n   *\n   * @type {String}\n   * @default 'input'\n   */\n  input: 'input',\n  /**\n   * Colorpicker container CSS selector. If given, the colorpicker will be placed inside this container.\n   * If true, the colorpicker element itself will be used as the container.\n   *\n   * @type {String|boolean}\n   * @default false\n   */\n  container: false, // container selector\n  /**\n   * Children color component CSS selector.\n   * If it exists, the child <i> element background will be changed on color change.\n   *\n   * @type {String|boolean}\n   * @default '.add-on, .input-group-addon'\n   */\n  component: '.add-on, .input-group-addon',\n  /**\n   * Fallback color to use when the given color is invalid.\n   * If false, the latest valid color will be used as a fallback.\n   *\n   * @type {String|Color|boolean}\n   * @default false\n   */\n  fallbackColor: false,\n  /**\n   * If enabled, the input content will be replaced always with a valid color,\n   * if not enabled the invalid color will be left in the input, but valid in the internal color object.\n   *\n   * @type {boolean}\n   * @default false\n   */\n  autoInputFallback: false,\n  /**\n   * If true a hash will be prepended to hexadecimal colors.\n   * If false, the hash will be removed.\n   * This only affects the input values.\n   *\n   * @type {boolean}\n   * @default false\n   */\n  useHashPrefix: true,\n  /**\n   * If true, the alpha channel bar will be displayed no matter what.\n   *\n   * If false, it will be always hidden and alpha channel will be disabled also programmatically, meaning that\n   * the selected or typed color will be always opaque.\n   *\n   * If null, the alpha channel will be automatically disabled/enabled depending if the initial color format supports\n   * alpha or not.\n   *\n   * @type {boolean}\n   * @default true\n   */\n  useAlpha: true,\n  /**\n   * This only applies when the color format is hexadecimal.\n   * If true, the alpha channel will be allowed for hexadecimal formatted colors, making them having 4 or 8 chars\n   * (RGBA or RRGGBBAA). This format is not yet supported in all modern browsers, so it is disabled by default.\n   * If false, rgba will be used whenever there is an alpha change different than 1 and the color format is\n   * automatic.\n   *\n   * @type {boolean}\n   * @default true\n   */\n  enableHex8: false,\n  /**\n   * Vertical sliders configuration\n   * @type {Object}\n   */\n  sliders: {\n    saturation: {\n      maxLeft: 100,\n      maxTop: 100,\n      callLeft: 'setSaturationRatio',\n      callTop: 'setBrightnessRatio'\n    },\n    hue: {\n      maxLeft: 0,\n      maxTop: 100,\n      callLeft: false,\n      callTop: 'setHueRatio'\n    },\n    alpha: {\n      maxLeft: 0,\n      maxTop: 100,\n      callLeft: false,\n      callTop: 'setAlphaRatio'\n    }\n  },\n  /**\n   * Horizontal sliders configuration\n   * @type {Object}\n   */\n  slidersHorz: {\n    saturation: {\n      maxLeft: 100,\n      maxTop: 100,\n      callLeft: 'setSaturationRatio',\n      callTop: 'setBrightnessRatio'\n    },\n    hue: {\n      maxLeft: 100,\n      maxTop: 0,\n      callLeft: 'setHueRatio',\n      callTop: false\n    },\n    alpha: {\n      maxLeft: 100,\n      maxTop: 0,\n      callLeft: 'setAlphaRatio',\n      callTop: false\n    }\n  },\n  /**\n   * Colorpicker popup alignment.\n   * For now only right is supported.\n   *\n   * @type {('right')}\n   * @default 'right'\n   */ // TODO: add 'left' and 'auto' support.\n  align: 'right',\n  /**\n   * Custom class to be added to the colorpicker element\n   *\n   * @type {String}\n   */\n  customClass: null,\n  /**\n   * Colorpicker widget template\n   * @type {String}\n   * @example\n   * <!-- This is the default template: -->\n   * <div class=\"colorpicker\">\n   *   <div class=\"colorpicker-saturation\"><i class=\"colorpicker-guide\"><i></i></i></div>\n   *   <div class=\"colorpicker-hue\"><i class=\"colorpicker-guide\"></i></div>\n   *   <div class=\"colorpicker-alpha\"><i class=\"colorpicker-guide\"></i></div>\n   *   <div class=\"colorpicker-color\"><div /></div>\n   * </div>\n   */\n  template: `<div class=\"colorpicker\">\n      <div class=\"colorpicker-saturation\"><i class=\"colorpicker-guide\"></i></div>\n      <div class=\"colorpicker-hue\"><i class=\"colorpicker-guide\"></i></div>\n      <div class=\"colorpicker-alpha\">\n          <div class=\"colorpicker-alpha-color\"></div>\n          <i class=\"colorpicker-guide\"></i>\n      </div>\n    </div>`,\n  /**\n   *\n   * Associative object with the extension class name and its config.\n   * Colorpicker comes with many bundled extensions: debugger, palette, preview and swatches (a superset of Palette).\n   *\n   * @type {Object}\n   * @example\n   *   extensions: [\n   *     {\n   *       name: 'swatches'\n   *       colors: {\n   *         'primary': '#337ab7',\n   *         'success': '#5cb85c',\n   *         'info': '#5bc0de',\n   *         'warning': '#f0ad4e',\n   *         'danger': '#d9534f'\n   *       },\n   *       namesAsValues: true\n   *     }\n   *   ]\n   */\n  extensions: [\n    {\n      name: 'preview',\n      showText: false\n    }\n  ]\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/js/options.js","import Debugger from './Debugger';\nimport Preview from './Preview';\nimport Swatches from './Swatches';\nimport Palette from './Palette';\n\nexport {\n  Debugger, Preview, Swatches, Palette\n};\n\nexport default {\n  'debugger': Debugger,\n  'preview': Preview,\n  'swatches': Swatches,\n  'palette': Palette\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/js/extensions/index.js","'use strict';\n\nimport Extension from 'Extension';\nimport $ from 'jquery';\n\n/**\n * Debugger extension class\n * @alias DebuggerExtension\n */\nclass Debugger extends Extension {\n  constructor(colorpicker, options = {}) {\n    super(colorpicker, options);\n\n    /**\n     * @type {number}\n     */\n    this.eventCounter = 0;\n    if (this.colorpicker.hasInput()) {\n      this.colorpicker.input.on('change.colorpicker-ext', $.proxy(this.onChangeInput, this));\n    }\n  }\n\n  /**\n   * @fires DebuggerExtension#colorpickerDebug\n   * @param {string} eventName\n   * @param {*} args\n   */\n  log(eventName, ...args) {\n    this.eventCounter += 1;\n\n    let logMessage = `#${this.eventCounter}: Colorpicker#${this.colorpicker.id} [${eventName}]`;\n\n    console.debug(logMessage, ...args);\n\n    /**\n     * Whenever the debugger logs an event, this other event is emitted.\n     *\n     * @event DebuggerExtension#colorpickerDebug\n     * @type {object} The event object\n     * @property {Colorpicker} colorpicker The Colorpicker instance\n     * @property {Color} color The color instance\n     * @property {{debugger: DebuggerExtension, eventName: String, logArgs: Array, logMessage: String}} debug\n     *  The debug info\n     */\n    this.colorpicker.element.trigger({\n      type: 'colorpickerDebug',\n      colorpicker: this.colorpicker,\n      color: this.color,\n      debug: {\n        debugger: this,\n        eventName: eventName,\n        logArgs: args,\n        logMessage: logMessage\n      }\n    });\n  }\n\n  resolveColor(color) {\n    this.log('resolveColor()', color);\n    return false;\n  }\n\n  onCreate(event) {\n    this.log('colorpickerCreate');\n    return super.onCreate(event);\n  }\n\n  onDestroy(event) {\n    this.log('colorpickerDestroy');\n    this.eventCounter = 0;\n\n    if (this.colorpicker.hasInput()) {\n      this.colorpicker.input.off('.colorpicker-ext');\n    }\n\n    return super.onDestroy(event);\n  }\n\n  onUpdate(event) {\n    this.log('colorpickerUpdate');\n  }\n\n  /**\n   * @listens Colorpicker#change\n   * @param {Event} event\n   */\n  onChangeInput(event) {\n    this.log('input:change.colorpicker', event.value, event.color);\n  }\n\n  onChange(event) {\n    this.log('colorpickerChange', event.value, event.color);\n  }\n\n  onInvalid(event) {\n    this.log('colorpickerInvalid', event.value, event.color);\n  }\n\n  onHide(event) {\n    this.log('colorpickerHide');\n    this.eventCounter = 0;\n  }\n\n  onShow(event) {\n    this.log('colorpickerShow');\n  }\n\n  onDisable(event) {\n    this.log('colorpickerDisable');\n  }\n\n  onEnable(event) {\n    this.log('colorpickerEnable');\n  }\n}\n\nexport default Debugger;\n\n\n\n// WEBPACK FOOTER //\n// ./src/js/extensions/Debugger.js","'use strict';\n\nimport Extension from 'Extension';\nimport $ from 'jquery';\n\nclass Preview extends Extension {\n  constructor(colorpicker, options = {}) {\n    super(colorpicker, $.extend(true, {},\n      {\n        template: '<div class=\"colorpicker-bar colorpicker-preview\"><div /></div>',\n        showText: true,\n        format: colorpicker.format\n      },\n      options\n    ));\n\n    this.element = $(this.options.template);\n    this.elementInner = this.element.find('div');\n  }\n\n  onCreate(event) {\n    super.onCreate(event);\n    this.colorpicker.picker.append(this.element);\n  }\n\n  onUpdate(event) {\n    super.onUpdate(event);\n\n    if (!event.color) {\n      this.elementInner\n        .css('backgroundColor', null)\n        .css('color', null)\n        .html('');\n      return;\n    }\n\n    this.elementInner\n      .css('backgroundColor', event.color.toRgbString());\n\n    if (this.options.showText) {\n      this.elementInner\n        .html(event.color.toString(this.options.format || this.colorpicker.format));\n\n      if (event.color.isDark()) {\n        this.elementInner.css('color', 'white');\n      } else {\n        this.elementInner.css('color', 'black');\n      }\n    }\n  }\n}\n\nexport default Preview;\n\n\n\n// WEBPACK FOOTER //\n// ./src/js/extensions/Preview.js","'use strict';\n\nimport Palette from './Palette';\nimport $ from 'jquery';\n\nlet defaults = {\n  barTemplate: '<div class=\"colorpicker-bar colorpicker-swatches\"></div>',\n  swatchTemplate: '<i class=\"colorpicker-swatch\"></i>'\n};\n\nclass Swatches extends Palette {\n  constructor(colorpicker, options = {}) {\n    super(colorpicker, $.extend(true, {}, defaults, options));\n  }\n\n  isEnabled() {\n    return this.getLength() > 0;\n  }\n\n  onCreate(event) {\n    super.onCreate(event);\n\n    if (!this.isEnabled()) {\n      return;\n    }\n\n    let colorpicker = this.colorpicker,\n      swatchContainer = $(this.options.barTemplate),\n      isAliased = (this.options.namesAsValues === true) && !Array.isArray(this.colors);\n\n    $.each(this.colors, (name, value) => {\n      let $swatch = $(this.options.swatchTemplate)\n        .css('background-color', value)\n        .attr('data-name', name)\n        .attr('data-value', value)\n        .attr('title', `${name}: ${value}`);\n\n      $swatch.on('mousedown.colorpicker touchstart.colorpicker',\n        function (e) {\n          e.preventDefault();\n          colorpicker.setValue(isAliased ? $(this).data('name') : $(this).data('value'));\n        }\n      );\n      swatchContainer.append($swatch);\n    });\n\n    colorpicker.picker.append(swatchContainer);\n  }\n}\n\nexport default Swatches;\n\n\n\n// WEBPACK FOOTER //\n// ./src/js/extensions/Swatches.js"],"sourceRoot":""}